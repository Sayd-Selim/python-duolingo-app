import React from 'react';
import { motion, AnimatePresence } from 'framer-motion';

const BrowserHelper = ({ userCode, currentTask, welcome, step }) => {
  // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â—ë –Ω–∏—á–µ–≥–æ –Ω–µ –≤–≤—ë–ª
  if (!userCode || userCode.length === 0) return null;

  // –ï—Å–ª–∏ –µ—Å—Ç—å browserSignals, –∏—â–µ–º –ø–µ—Ä–≤–æ–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  if (currentTask && Array.isArray(currentTask.browserSignals)) {
    const code = userCode;
    const found = currentTask.browserSignals.find(item => item.signal(code));
    if (found) {
      return (
        <div className="flex items-start gap-3 p-4 rounded-xl border-l-4 shadow-lg bg-blue-600 border-blue-700 text-white mt-2">
          <div className="text-2xl mt-1">üí°</div>
          <div className="flex-1">
            <div className="font-bold mb-1">–ë—Ä–∞—É–∑–µ—Ä –≥–æ–≤–æ—Ä–∏—Ç:</div>
            <div className="text-sm leading-relaxed">{found.message}</div>
          </div>
        </div>
      );
    }
    // –ï—Å–ª–∏ –Ω–∏ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç ‚Äî –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∏—á–µ–≥–æ
    return null;
  }

  // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –¥–∞—ë–º —Å–æ–≤–µ—Ç—ã
  const getBrowserAdvice = () => {
    if (currentTask && currentTask.browserMessage) {
      return {
        message: currentTask.browserMessage,
        type: "info"
      };
    }

    if (!userCode) {
      return {
        message: "ü§î –•–º... –Ø –Ω–µ –≤–∏–∂—É –Ω–∏–∫–∞–∫–æ–≥–æ –∫–æ–¥–∞. –ú–æ–∂–µ—Ç –±—ã—Ç—å, —Å—Ç–æ–∏—Ç —á—Ç–æ-—Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å?",
        type: "confused"
      };
    }

 
    
    const code = userCode
    
    console.log("code", code);
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ DOCTYPE
    if (!code.includes('<!DOCTYPE html>')) {
      return {
        message: "üòµ‚Äçüí´ –ë–µ–∑ DOCTYPE —è –Ω–µ –∑–Ω–∞—é, –∫–∞–∫ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –¥–æ–∫—É–º–µ–Ω—Ç! –î–æ–±–∞–≤—å <!DOCTYPE html> –≤ –Ω–∞—á–∞–ª–æ.",
        type: "error"
      };
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ html —Ç–µ–≥–∞
    if (!code.includes('<html>')) {
      return {
        message: "ü§∑‚Äç‚ôÇÔ∏è –ì–¥–µ –∂–µ —Ç–µ–≥ <html>? –ë–µ–∑ –Ω–µ–≥–æ —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–æ–∫—É–º–µ–Ω—Ç–∞!",
        type: "warning"
      };
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ head
    if (!code.includes('<head>')) {
      return {
        message: "üßê –ê –≥–¥–µ <head>? –¢–∞–º –æ–±—ã—á–Ω–æ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.",
        type: "info"
      };
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ body
    if (!code.includes('<body>')) {
      return {
        message: "ü§î –ì–¥–µ <body>? –¢–∞–º –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã!",
        type: "warning"
      };
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è
    if (currentTask.type === "write" && currentTask.question.includes("–∑–∞–≥–æ–ª–æ–≤–æ–∫")) {
      if (!code.includes('<h1>')) {
        return {
          message: "üìù –î–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ –Ω—É–∂–µ–Ω —Ç–µ–≥ <h1>. –ü–æ–ø—Ä–æ–±—É–π –Ω–∞–ø–∏—Å–∞—Ç—å <h1>–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!</h1>",
          type: "hint"
        };
      }
      if (code.includes('<h1>') && !code.includes('–ø—Ä–∏–≤–µ—Ç')) {
        return {
          message: "‚úÖ –¢–µ–≥ <h1> –µ—Å—Ç—å! –¢–µ–ø–µ—Ä—å –¥–æ–±–∞–≤—å —Ç–µ–∫—Å—Ç '–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!' –≤–Ω—É—Ç—Ä—å –Ω–µ–≥–æ.",
          type: "success"
        };
      }
    }

    if (currentTask.type === "fill" && currentTask.question.includes("–∞–±–∑–∞—Ü")) {
      if (!code.includes('<p>')) {
        return {
          message: "üìÑ –î–ª—è –∞–±–∑–∞—Ü–∞ –Ω—É–∂–µ–Ω —Ç–µ–≥ <p>. –ó–∞–ø–æ–ª–Ω–∏ –ø—Ä–æ–ø—É—Å–∫: <p>–Ø —É—á—É HTML –Ω–∞ Duolingo!</p>",
          type: "hint"
        };
      }
    }

    if (currentTask.type === "fix") {
      if (code.includes('<h2>') && currentTask.question.includes("–∑–∞–≥–æ–ª–æ–≤–æ–∫")) {
        return {
          message: "üîß –í–∏–∂—É <h2>, –Ω–æ –Ω—É–∂–µ–Ω <h1> –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞! –ò—Å–ø—Ä–∞–≤—å —ç—Ç–æ.",
          type: "fix"
        };
      }
      if (code.includes('<pr>')) {
        return {
          message: "‚ùå <pr> - —ç—Ç–æ –Ω–µ —Ç–µ–≥! –ù—É–∂–µ–Ω <p> –¥–ª—è –∞–±–∑–∞—Ü–∞. –ò—Å–ø—Ä–∞–≤—å!",
          type: "error"
        };
      }
    }

    // –ï—Å–ª–∏ –∫–æ–¥ –≤—ã–≥–ª—è–¥–∏—Ç —Ö–æ—Ä–æ—à–æ
    if (code.includes('doctype') && code.includes('<html>') && code.includes('<head>') && code.includes('<body>')) {
      return {
        message: "üéâ –û—Ç–ª–∏—á–Ω–æ! –ö–æ–¥ –≤—ã–≥–ª—è–¥–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ. –¢–µ–ø–µ—Ä—å —è –ø–æ–Ω–∏–º–∞—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É!",
        type: "success"
      };
    }

    return {
      message: "ü§î –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –∫–æ–¥... –ù–æ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫. –ü—Ä–æ–≤–µ—Ä—å —Å–∏–Ω—Ç–∞–∫—Å–∏—Å!",
      type: "confused"
    };
  };

  const advice = getBrowserAdvice();

  const getIcon = () => {
    switch (advice.type) {
      case 'error': return '‚ùå';
      case 'warning': return '‚ö†Ô∏è';
      case 'info': return '‚ÑπÔ∏è';
      case 'hint': return 'üí°';
      case 'success': return '‚úÖ';
      case 'fix': return 'üîß';
      default: return 'ü§î';
    }
  };

  const getToastStyle = () => {
    switch (advice.type) {
      case 'error': return 'bg-red-500 border-red-600';
      case 'warning': return 'bg-yellow-500 border-yellow-600';
      case 'info': return 'bg-blue-500 border-blue-600';
      case 'hint': return 'bg-purple-500 border-purple-600';
      case 'success': return 'bg-green-500 border-green-600';
      case 'fix': return 'bg-orange-500 border-orange-600';
      default: return 'bg-gray-500 border-gray-600';
    }
  };

  return (
    <AnimatePresence>
      <motion.div
        initial={{ opacity: 0, y: -20, scale: 0.95 }}
        animate={{ opacity: 1, y: 0, scale: 1 }}
        exit={{ opacity: 0, y: -20, scale: 0.95 }}
        transition={{ duration: 0.2 }}
        className={`fixed top-4 right-4 z-50 max-w-sm w-full ${getToastStyle()} text-white rounded-lg shadow-xl border-l-4`}
      >
        <div className="p-4">
          <div className="flex items-start gap-3">
            <div className="text-xl flex-shrink-0">{getIcon()}</div>
            <div className="flex-1 min-w-0">
              <div className="font-semibold text-sm mb-1">–ë—Ä–∞—É–∑–µ—Ä</div>
              <div className="text-sm opacity-90 leading-relaxed">{advice.message}</div>
            </div>
          </div>
        </div>
      </motion.div>
    </AnimatePresence>
  );
};

export default BrowserHelper; 