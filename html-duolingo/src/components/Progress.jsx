import React from 'react';
import { motion } from 'framer-motion';
import { useProgress } from '../context/ProgressContext';
import { useAuth } from '../context/AuthContext';

const Progress = () => {
  const { 
    completedLessons, 
    lessonProgress, 
    getCourseProgress, 
    getCompletedLessonsCount 
  } = useProgress();
  
  const { user } = useAuth();

  // –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  const stats = {
    totalLessons: 15, // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Ä–æ–∫–æ–≤
    completedLessons: getCompletedLessonsCount(),
    currentStreak: user?.streak || 0,
    longestStreak: user?.longestStreak || 0,
    totalXP: user?.experience || 0,
    level: user?.level || 1,
    nextLevelXP: (user?.level || 1) * 100,
    currentLevelXP: (user?.experience || 0) % 100
  };

  // –°–æ–∑–¥–∞–µ–º –Ω–∞–≤—ã–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
  const skills = [
    {
      name: '–û—Å–Ω–æ–≤—ã Python',
      progress: lessonProgress[1] || 0,
      lessons: 5,
      completed: completedLessons.includes(1) ? 1 : 0
    },
    {
      name: '–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö',
      progress: lessonProgress[2] || 0,
      lessons: 5,
      completed: completedLessons.includes(2) ? 1 : 0
    },
    {
      name: '–£—Å–ª–æ–≤–∏—è –∏ —Ü–∏–∫–ª—ã',
      progress: lessonProgress[3] || 0,
      lessons: 5,
      completed: completedLessons.includes(3) ? 1 : 0
    },
    {
      name: '–§—É–Ω–∫—Ü–∏–∏',
      progress: lessonProgress[4] || 0,
      lessons: 5,
      completed: completedLessons.includes(4) ? 1 : 0
    },
    {
      name: '–°—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö',
      progress: lessonProgress[5] || 0,
      lessons: 5,
      completed: completedLessons.includes(5) ? 1 : 0
    }
  ];

  const achievements = [
    {
      title: '–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç',
      description: '–ó–∞–≤–µ—Ä—à–∏—Ç–µ –ø–µ—Ä–≤—ã–π —É—Ä–æ–∫',
      icon: 'üöÄ',
      completed: completedLessons.includes(1)
    },
    {
      title: '–ù–µ–¥–µ–ª—è –æ–±—É—á–µ–Ω–∏—è',
      description: '–ó–∞–Ω–∏–º–∞–π—Ç–µ—Å—å 7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥',
      icon: 'üìÖ',
      completed: stats.currentStreak >= 7
    },
    {
      title: '–ú–∞—Å—Ç–µ—Ä Python',
      description: '–ó–∞–≤–µ—Ä—à–∏—Ç–µ –≤—Å–µ —É—Ä–æ–∫–∏ –ø–æ Python',
      icon: 'üéØ',
      completed: stats.completedLessons >= 15
    }
  ];

  return (
    <div className="max-w-4xl mx-auto p-4">
      <div className="bg-white rounded-xl shadow-lg overflow-hidden">
        <div className="p-6">
          <h2 className="text-2xl font-bold text-gray-900 mb-6">–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å</h2>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
            <div className="bg-indigo-50 rounded-lg p-6">
              <h3 className="text-lg font-medium text-indigo-900 mb-4">
                –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
              </h3>
              <div className="space-y-4">
                <div>
                  <div className="flex justify-between text-sm text-indigo-700 mb-1">
                    <span>–£—Ä–æ–∫–∏</span>
                    <span>
                      {stats.completedLessons} –∏–∑ {stats.totalLessons}
                    </span>
                  </div>
                  <div className="w-full bg-indigo-200 rounded-full h-2">
                    <motion.div
                      className="bg-indigo-600 h-2 rounded-full"
                      initial={{ width: 0 }}
                      animate={{ width: `${(stats.completedLessons / stats.totalLessons) * 100}%` }}
                      transition={{ duration: 1, ease: "easeOut" }}
                    />
                  </div>
                </div>

                <div>
                  <div className="flex justify-between text-sm text-indigo-700 mb-1">
                    <span>–£—Ä–æ–≤–µ–Ω—å {stats.level}</span>
                    <span>
                      {stats.currentLevelXP} / {stats.nextLevelXP} XP
                    </span>
                  </div>
                  <div className="w-full bg-indigo-200 rounded-full h-2">
                    <motion.div
                      className="bg-indigo-600 h-2 rounded-full"
                      initial={{ width: 0 }}
                      animate={{ width: `${(stats.currentLevelXP / stats.nextLevelXP) * 100}%` }}
                      transition={{ duration: 1, ease: "easeOut" }}
                    />
                  </div>
                </div>

                <div className="grid grid-cols-2 gap-4">
                  <div className="bg-white rounded-lg p-4 text-center">
                    <div className="text-2xl font-bold text-indigo-600">
                      {stats.currentStreak}
                    </div>
                    <div className="text-sm text-indigo-700">–î–Ω–µ–π –ø–æ–¥—Ä—è–¥</div>
                  </div>
                  <div className="bg-white rounded-lg p-4 text-center">
                    <div className="text-2xl font-bold text-indigo-600">
                      {stats.totalXP}
                    </div>
                    <div className="text-sm text-indigo-700">–í—Å–µ–≥–æ XP</div>
                  </div>
                </div>
              </div>
            </div>

            <div className="bg-green-50 rounded-lg p-6">
              <h3 className="text-lg font-medium text-green-900 mb-4">
                –ù–∞–≤—ã–∫–∏
              </h3>
              <div className="space-y-4">
                {skills.map((skill) => (
                  <div key={skill.name}>
                    <div className="flex justify-between text-sm text-green-700 mb-1">
                      <span>{skill.name}</span>
                      <span>
                        {skill.completed} –∏–∑ {skill.lessons}
                      </span>
                    </div>
                    <div className="w-full bg-green-200 rounded-full h-2">
                      <motion.div
                        className="bg-green-600 h-2 rounded-full"
                        initial={{ width: 0 }}
                        animate={{ width: `${skill.progress}%` }}
                        transition={{ duration: 0.5 }}
                      />
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>

          <div className="bg-yellow-50 rounded-lg p-6">
            <h3 className="text-lg font-medium text-yellow-900 mb-4">
              –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
            </h3>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              {achievements.map((achievement) => (
                <motion.div
                  key={achievement.title}
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  className={`p-4 rounded-lg ${
                    achievement.completed
                      ? 'bg-yellow-100 border-2 border-yellow-400'
                      : 'bg-white'
                  }`}
                >
                  <div className="text-3xl mb-2">{achievement.icon}</div>
                  <h4 className="font-medium text-yellow-900">
                    {achievement.title}
                  </h4>
                  <p className="text-sm text-yellow-700">
                    {achievement.description}
                  </p>
                </motion.div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Progress; 