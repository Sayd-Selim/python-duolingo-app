import React from 'react';
import { useProgress } from '../context/ProgressContext';
import { useAuth } from '../context/AuthContext';

const ProgressDebug = () => {
  const { 
    completedLessons, 
    lessonProgress, 
    getCourseProgress, 
    getCompletedLessonsCount,
    allUsersProgress 
  } = useProgress();
  
  const { user } = useAuth();

  return (
    <div className="bg-white rounded-lg shadow-lg p-6 m-4">
      <h2 className="text-xl font-bold mb-4">üîç –û—Ç–ª–∞–¥–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞</h2>
      
      <div className="space-y-4">
        <div>
          <h3 className="font-semibold text-gray-700">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</h3>
          <pre className="bg-gray-100 p-2 rounded text-sm overflow-auto">
            {JSON.stringify(user, null, 2)}
          </pre>
        </div>

        <div>
          <h3 className="font-semibold text-gray-700">–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —É—Ä–æ–∫–∏:</h3>
          <div className="bg-blue-50 p-2 rounded">
            {completedLessons.length > 0 ? (
              <span className="text-blue-700">
                {completedLessons.join(', ')}
              </span>
            ) : (
              <span className="text-gray-500">–ù–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —É—Ä–æ–∫–æ–≤</span>
            )}
          </div>
        </div>

        <div>
          <h3 className="font-semibold text-gray-700">–ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ —É—Ä–æ–∫–∞–º:</h3>
          <div className="bg-green-50 p-2 rounded">
            {Object.keys(lessonProgress).length > 0 ? (
              <div className="space-y-1">
                {Object.entries(lessonProgress).map(([lessonId, progress]) => (
                  <div key={lessonId} className="text-sm">
                    –£—Ä–æ–∫ {lessonId}: {progress}%
                  </div>
                ))}
              </div>
            ) : (
              <span className="text-gray-500">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ</span>
            )}
          </div>
        </div>

        <div>
          <h3 className="font-semibold text-gray-700">–û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å –∫—É—Ä—Å–∞:</h3>
          <div className="bg-purple-50 p-2 rounded">
            <span className="text-purple-700 font-bold">
              {getCourseProgress(0)}% ({getCompletedLessonsCount()} –∏–∑ 15 —É—Ä–æ–∫–æ–≤)
            </span>
          </div>
        </div>

        <div>
          <h3 className="font-semibold text-gray-700">–ü—Ä–æ–≥—Ä–µ—Å—Å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</h3>
          <div className="bg-yellow-50 p-2 rounded max-h-40 overflow-auto">
            {allUsersProgress.length > 0 ? (
              <div className="space-y-1">
                {allUsersProgress.map((userProgress, index) => (
                  <div key={index} className="text-sm">
                    {userProgress.user?.name}: {userProgress.lessons?.length || 0} —É—Ä–æ–∫–æ–≤
                  </div>
                ))}
              </div>
            ) : (
              <span className="text-gray-500">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö</span>
            )}
          </div>
        </div>

        <div>
          <h3 className="font-semibold text-gray-700">–î–µ–π—Å—Ç–≤–∏—è:</h3>
          <div className="space-x-2">
            <button 
              onClick={() => window.location.reload()}
              className="px-3 py-1 bg-blue-500 text-white rounded text-sm hover:bg-blue-600"
            >
              –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
            </button>
            <button 
              onClick={() => {
                console.log('=== –û–¢–õ–ê–î–ö–ê –ü–†–û–ì–†–ï–°–°–ê ===');
                console.log('User:', user);
                console.log('Completed lessons:', completedLessons);
                console.log('Lesson progress:', lessonProgress);
                console.log('All users progress:', allUsersProgress);
              }}
              className="px-3 py-1 bg-green-500 text-white rounded text-sm hover:bg-green-600"
            >
              –õ–æ–≥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ProgressDebug; 