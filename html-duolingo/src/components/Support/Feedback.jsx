import React, { useState } from 'react';
import { motion } from 'framer-motion';

const Feedback = () => {
  const [feedbackType, setFeedbackType] = useState('bug');
  const [title, setTitle] = useState('');
  const [description, setDescription] = useState('');
  const [email, setEmail] = useState('');
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [isSubmitted, setIsSubmitted] = useState(false);

  const feedbackTypes = [
    {
      id: 'bug',
      name: '–°–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ',
      icon: 'üêõ',
      description: '–ù–∞—à–ª–∏ –æ—à–∏–±–∫—É? –ü–æ–º–æ–≥–∏—Ç–µ –Ω–∞–º –µ—ë –∏—Å–ø—Ä–∞–≤–∏—Ç—å.'
    },
    {
      id: 'feature',
      name: '–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é',
      icon: 'üí°',
      description: '–ï—Å—Ç—å –∏–¥–µ—è –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã?'
    },
    {
      id: 'content',
      name: '–û—Ç–∑—ã–≤ –æ –∫–æ–Ω—Ç–µ–Ω—Ç–µ',
      icon: 'üìö',
      description: '–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –º–Ω–µ–Ω–∏–µ–º –æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞—Ö –∫—É—Ä—Å–∞.'
    },
    {
      id: 'other',
      name: '–î—Ä—É–≥–æ–µ',
      icon: 'üìù',
      description: '–î—Ä—É–≥–∏–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.'
    }
  ];

  const handleSubmit = (e) => {
    e.preventDefault();
    setIsSubmitting(true);

    // –ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    setTimeout(() => {
      setIsSubmitting(false);
      setIsSubmitted(true);
      setTitle('');
      setDescription('');
      setEmail('');
    }, 1500);
  };

  if (isSubmitted) {
    return (
      <div className="max-w-4xl mx-auto p-4">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          className="bg-white rounded-xl shadow-lg overflow-hidden"
        >
          <div className="p-6 text-center">
            <div className="text-5xl mb-4">üéâ</div>
            <h2 className="text-2xl font-bold text-gray-900 mb-2">
              –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å!
            </h2>
            <p className="text-gray-600 mb-6">
              –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –µ–≥–æ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.
            </p>
            <button
              onClick={() => setIsSubmitted(false)}
              className="px-6 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors"
            >
              –û—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â–µ
            </button>
          </div>
        </motion.div>
      </div>
    );
  }

  return (
    <div className="max-w-4xl mx-auto p-4">
      <div className="bg-white rounded-xl shadow-lg overflow-hidden">
        <div className="p-6">
          <h2 className="text-2xl font-bold text-gray-900 mb-6">–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å</h2>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
            {feedbackTypes.map((type) => (
              <button
                key={type.id}
                onClick={() => setFeedbackType(type.id)}
                className={`p-4 rounded-lg border-2 text-left transition-colors ${
                  feedbackType === type.id
                    ? 'border-indigo-600 bg-indigo-50'
                    : 'border-gray-200 hover:border-indigo-200'
                }`}
              >
                <div className="text-2xl mb-2">{type.icon}</div>
                <h3 className="font-medium text-gray-900 mb-1">{type.name}</h3>
                <p className="text-sm text-gray-600">{type.description}</p>
              </button>
            ))}
          </div>

          <form onSubmit={handleSubmit} className="space-y-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ó–∞–≥–æ–ª–æ–≤–æ–∫
              </label>
              <input
                type="text"
                value={title}
                onChange={(e) => setTitle(e.target.value)}
                placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ"
                required
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –û–ø–∏—Å–∞–Ω–∏–µ
              </label>
              <textarea
                value={description}
                onChange={(e) => setDescription(e.target.value)}
                placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"
                required
                rows={6}
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Email (–¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏)
              </label>
              <input
                type="email"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
                placeholder="your@email.com"
                required
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
              />
            </div>

            <div className="flex justify-end">
              <button
                type="submit"
                disabled={isSubmitting}
                className={`px-6 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors ${
                  isSubmitting ? 'opacity-50 cursor-not-allowed' : ''
                }`}
              >
                {isSubmitting ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å'}
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  );
};

export default Feedback; 