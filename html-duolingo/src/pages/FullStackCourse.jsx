import React, { useState, useEffect } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { motion } from 'framer-motion';
import { useAuth } from '../context/AuthContext';
import { useProgress } from '../context/ProgressContext';

const FullStackCourse = () => {
  const { user } = useAuth();
  const { updateProgress } = useProgress();
  const navigate = useNavigate();
  const [completedLessons, setCompletedLessons] = useState([]);
  const [selectedLevel, setSelectedLevel] = useState(null);

  // –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫—É—Ä—Å–∞ Full-Stack Development —Å –º–µ—Ç–∞—Ñ–æ—Ä–æ–π –æ—Ç–µ–ª—è
  const fullStackCourse = {
    id: 'fullstack-hotel',
    name: 'Full-Stack Development —Å –Ω—É–ª—è',
    icon: 'üè®',
    description: '–°–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –º–µ—Ç–∞—Ñ–æ—Ä–æ–π –æ—Ç–µ–ª—è: –æ—Ç –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–æ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö',
    color: 'from-blue-500 to-purple-600',
    levels: [
      {
        id: 1,
        name: 'üî∞ –£—Ä–æ–≤–µ–Ω—å 1: –ë–∞–∑–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã —Å Axios',
        description: '–ò–∑—É—á–∞–µ–º HTTP –∑–∞–ø—Ä–æ—Å—ã –∫–∞–∫ –∫–ª–∏–µ–Ω—Ç—ã –æ—Ç–µ–ª—è',
        color: 'from-green-500 to-emerald-600',
        lessons: [
          {
            id: '1.1',
            title: '–ß—Ç–æ —Ç–∞–∫–æ–µ HTTP –∏ –º–µ—Ç–æ–¥—ã',
            description: '–ü–æ–Ω—è—Ç–∏–µ HTTP, GET/POST/PUT/DELETE –∫–∞–∫ –¥–µ–π—Å—Ç–≤–∏—è –≤ –æ—Ç–µ–ª–µ',
            metaphor: '–ö–ª–∏–µ–Ω—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤ –æ—Ç–µ–ª—å –∏ –º–æ–∂–µ—Ç: –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é (GET), –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–º–µ—Ä (POST), –∏–∑–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω—å (PUT), –æ—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω—å (DELETE)',
            codeFrontend: 'axios.get("/api/rooms")',
            codeBackend: null,
            realResult: '–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤',
            practiceTask: '–°–æ–∑–¥–∞—Ç—å –∫–Ω–æ–ø–∫—É "–ü–æ–∫–∞–∑–∞—Ç—å –Ω–æ–º–µ—Ä–∞" –∏ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫'
          },
          {
            id: '1.2',
            title: '–ü–µ—Ä–≤—ã–π GET –∑–∞–ø—Ä–æ—Å',
            description: '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö',
            metaphor: '–ö–ª–∏–µ–Ω—Ç —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É —Ä–µ—Ü–µ–ø—Ü–∏–∏: "–ö–∞–∫–∏–µ –Ω–æ–º–µ—Ä–∞ —É –≤–∞—Å –µ—Å—Ç—å?"',
            codeFrontend: 'const response = await axios.get("/api/rooms");\nsetRooms(response.data);',
            codeBackend: null,
            realResult: '–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –Ω–æ–º–µ—Ä–æ–≤ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ',
            practiceTask: '–°–æ–∑–¥–∞—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å –∫–Ω–æ–ø–∫–æ–π –∏ —Å–ø–∏—Å–∫–æ–º –Ω–æ–º–µ—Ä–æ–≤'
          },
          {
            id: '1.3',
            title: 'POST –∑–∞–ø—Ä–æ—Å - —Å–æ–∑–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö',
            description: '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è',
            metaphor: '–ö–ª–∏–µ–Ω—Ç –∑–∞–ø–æ–ª–Ω—è–µ—Ç –∞–Ω–∫–µ—Ç—É –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–º–µ—Ä–∞',
            codeFrontend: 'const response = await axios.post("/api/bookings", {\n  guestName: "–ò–≤–∞–Ω",\n  roomNumber: 101,\n  checkIn: "2024-01-15"\n});',
            codeBackend: null,
            realResult: '–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –±—Ä–æ–Ω–∏',
            practiceTask: '–°–æ–∑–¥–∞—Ç—å —Ñ–æ—Ä–º—É –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π'
          },
          {
            id: '1.4',
            title: 'PUT –∑–∞–ø—Ä–æ—Å - –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö',
            description: '–ò–∑–º–µ–Ω—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ',
            metaphor: '–ö–ª–∏–µ–Ω—Ç —Ö–æ—á–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É –∑–∞–µ–∑–¥–∞ –≤ —Å–≤–æ–µ–π –±—Ä–æ–Ω–∏',
            codeFrontend: 'const response = await axios.put(`/api/bookings/${bookingId}`, {\n  checkIn: "2024-01-20"\n});',
            codeBackend: null,
            realResult: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±—Ä–æ–Ω–∏',
            practiceTask: '–°–æ–∑–¥–∞—Ç—å —Ñ–æ—Ä–º—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±—Ä–æ–Ω–∏'
          },
          {
            id: '1.5',
            title: 'DELETE –∑–∞–ø—Ä–æ—Å - —É–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö',
            description: '–£–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞',
            metaphor: '–ö–ª–∏–µ–Ω—Ç –æ—Ç–º–µ–Ω—è–µ—Ç —Å–≤–æ—é –±—Ä–æ–Ω—å',
            codeFrontend: 'await axios.delete(`/api/bookings/${bookingId}`);',
            codeBackend: null,
            realResult: '–£–¥–∞–ª–µ–Ω–∏–µ –±—Ä–æ–Ω–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã',
            practiceTask: '–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω—å" —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º'
          }
        ]
      },
      {
        id: 2,
        name: 'üõ† –£—Ä–æ–≤–µ–Ω—å 2: Express.js –∫–∞–∫ —Å–µ—Ä–≤–µ—Ä',
        description: '–°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–µ—Ä-—Ä–µ—Ü–µ–ø—Ü–∏—é –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤',
        color: 'from-orange-500 to-red-600',
        lessons: [
          {
            id: '2.1',
            title: '–°–æ–∑–¥–∞–Ω–∏–µ Express —Å–µ—Ä–≤–µ—Ä–∞',
            description: '–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø—Ä–∏–µ–º–∞ –∑–∞–ø—Ä–æ—Å–æ–≤',
            metaphor: '–û—Ç–∫—Ä—ã–≤–∞–µ–º —Ä–µ—Ü–µ–ø—Ü–∏—é –æ—Ç–µ–ª—è –∏ –Ω–∞–Ω–∏–º–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª',
            codeFrontend: null,
            codeBackend: 'const express = require("express");\nconst app = express();\napp.listen(3000, () => {\n  console.log("–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000");\n});',
            realResult: '–†–∞–±–æ—Ç–∞—é—â–∏–π —Å–µ—Ä–≤–µ—Ä –Ω–∞ localhost:3000',
            practiceTask: '–°–æ–∑–¥–∞—Ç—å –±–∞–∑–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –µ–≥–æ —Ä–∞–±–æ—Ç—É'
          },
          {
            id: '2.2',
            title: '–ú–∞—Ä—à—Ä—É—Ç—ã –∏ –º–µ—Ç–æ–¥—ã',
            description: '–°–æ–∑–¥–∞–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π',
            metaphor: '–°–æ–∑–¥–∞–µ–º –æ—Ç–¥–µ–ª—ã –≤ –æ—Ç–µ–ª–µ: –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è',
            codeFrontend: null,
            codeBackend: 'app.get("/api/rooms", (req, res) => {\n  res.json(rooms);\n});\n\napp.post("/api/bookings", (req, res) => {\n  // –õ–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±—Ä–æ–Ω–∏\n});',
            realResult: 'API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏',
            practiceTask: '–°–æ–∑–¥–∞—Ç—å –≤—Å–µ CRUD –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –æ—Ç–µ–ª—è'
          },
          {
            id: '2.3',
            title: 'Middleware - –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏',
            description: '–î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, –ø—Ä–æ–≤–µ—Ä–∫–∏, –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö',
            metaphor: '–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏, –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è, –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤',
            codeFrontend: null,
            codeBackend: 'app.use(express.json());\napp.use((req, res, next) => {\n  console.log(`${req.method} ${req.path}`);\n  next();\n});',
            realResult: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ JSON –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ',
            practiceTask: '–î–æ–±–∞–≤–∏—Ç—å middleware –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏'
          },
          {
            id: '2.4',
            title: 'req.body, req.params, req.query',
            description: '–†–∞–±–æ—Ç–∞–µ–º —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –≤—Ö–æ–¥—è—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö',
            metaphor: '–†–µ—Ü–µ–ø—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ: –∏–∑ —Ñ–æ—Ä–º—ã (body), –∏–∑ URL (params), –∏–∑ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ (query)',
            codeFrontend: null,
            codeBackend: 'app.get("/api/rooms/:id", (req, res) => {\n  const roomId = req.params.id;\n  const room = rooms.find(r => r.id === roomId);\n  res.json(room);\n});',
            realResult: '–ì–∏–±–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∑–∞–ø—Ä–æ—Å–æ–≤',
            practiceTask: '–°–æ–∑–¥–∞—Ç—å –º–∞—Ä—à—Ä—É—Ç—ã —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∏ query —Å—Ç—Ä–æ–∫–∞–º–∏'
          },
          {
            id: '2.5',
            title: '–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫',
            description: '–°–æ–∑–¥–∞–µ–º —Å–∏—Å—Ç–µ–º—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫',
            metaphor: '–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ç–æ–∫–æ–ª—ã –¥–µ–π—Å—Ç–≤–∏–π –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö: –Ω–æ–º–µ—Ä –∑–∞–Ω—è—Ç, –∫–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω',
            codeFrontend: null,
            codeBackend: 'app.use((err, req, res, next) => {\n  console.error(err.stack);\n  res.status(500).json({ error: "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!" });\n});',
            realResult: '–ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Å–µ—Ä–≤–µ—Ä–∞',
            practiceTask: '–î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö'
          }
        ]
      },
      {
        id: 3,
        name: 'üß± –£—Ä–æ–≤–µ–Ω—å 3: MongoDB –∏ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –ª–æ–≥–∏–∫–∞',
        description: '–ü–æ–¥–∫–ª—é—á–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É',
        color: 'from-purple-500 to-indigo-600',
        lessons: [
          {
            id: '3.1',
            title: '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB',
            description: '–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö',
            metaphor: '–ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –æ—Ç–µ–ª—è, –≥–¥–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤—Å–µ –∑–∞–ø–∏—Å–∏',
            codeFrontend: null,
            codeBackend: 'const mongoose = require("mongoose");\nmongoose.connect("mongodb://localhost:27017/hotel");',
            realResult: '–ê–∫—Ç–∏–≤–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB',
            practiceTask: '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ'
          },
          {
            id: '3.2',
            title: '–°—Ö–µ–º—ã –∏ –º–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö',
            description: '–°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–µ–ª—è',
            metaphor: '–°–æ–∑–¥–∞–µ–º —Ñ–æ—Ä–º—ã –∏ —à–∞–±–ª–æ–Ω—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∑–∞–ø–∏—Å–µ–π: –≥–æ—Å—Ç–∏, –Ω–æ–º–µ—Ä–∞, –±—Ä–æ–Ω–∏',
            codeFrontend: null,
            codeBackend: 'const guestSchema = new mongoose.Schema({\n  name: String,\n  email: String,\n  phone: String\n});\nconst Guest = mongoose.model("Guest", guestSchema);',
            realResult: '–ú–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π',
            practiceTask: '–°–æ–∑–¥–∞—Ç—å —Å—Ö–µ–º—ã –¥–ª—è –≥–æ—Å—Ç–µ–π, –Ω–æ–º–µ—Ä–æ–≤ –∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π'
          },
          {
            id: '3.3',
            title: 'CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö',
            description: '–°–æ–∑–¥–∞–Ω–∏–µ, —á—Ç–µ–Ω–∏–µ, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π',
            metaphor: '–ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Ä–∞–±–æ—Ç—ã —Å –≥–æ—Å—Ç—è–º–∏: —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, –ø–æ–∏—Å–∫, –∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö, –≤—ã–ø–∏—Å–∫–∞',
            codeFrontend: null,
            codeBackend: '// –°–æ–∑–¥–∞–Ω–∏–µ\nconst guest = new Guest({ name: "–ò–≤–∞–Ω", email: "ivan@email.com" });\nawait guest.save();\n\n// –ß—Ç–µ–Ω–∏–µ\nconst guests = await Guest.find();',
            realResult: '–ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö',
            practiceTask: '–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤—Å–µ CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –≥–æ—Å—Ç–µ–π'
          },
          {
            id: '3.4',
            title: '–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏ –ø–æ–∏—Å–∫',
            description: '–ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ',
            metaphor: '–ü–æ–∏—Å–∫ –≥–æ—Å—Ç–µ–π –ø–æ –∏–º–µ–Ω–∏, –Ω–æ–º–µ—Ä—É, –¥–∞—Ç–µ –∑–∞–µ–∑–¥–∞ - –∫–∞–∫ –≤ –∫–∞—Ä—Ç–æ—Ç–µ–∫–µ –æ—Ç–µ–ª—è',
            codeFrontend: null,
            codeBackend: 'const guests = await Guest.find({\n  name: { $regex: searchTerm, $options: "i" }\n});',
            realResult: '–ì–∏–±–∫–∏–π –ø–æ–∏—Å–∫ –ø–æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö',
            practiceTask: '–°–æ–∑–¥–∞—Ç—å –ø–æ–∏—Å–∫ –≥–æ—Å—Ç–µ–π —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏'
          },
          {
            id: '3.5',
            title: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è',
            description: '–î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏, CORS, –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é',
            metaphor: '–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –æ—Ö—Ä–∞–Ω–∞, –∫–æ–Ω—Ç—Ä–æ–ª—å –¥–æ—Å—Ç—É–ø–∞',
            codeFrontend: null,
            codeBackend: 'app.use(cors());\napp.use(helmet());\n// –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö\nconst { body, validationResult } = require("express-validator");',
            realResult: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π',
            practiceTask: '–î–æ–±–∞–≤–∏—Ç—å CORS, –≤–∞–ª–∏–¥–∞—Ü–∏—é –∏ –±–∞–∑–æ–≤—É—é –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å'
          }
        ]
      }
    ]
  };

  useEffect(() => {
    // –í –¥–µ–º–æ —Ä–µ–∂–∏–º–µ –∑–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∏–∑ localStorage
    const isDemoMode = !user || (user && user.userId === "demo_user_123");
    
    if (isDemoMode) {
      const savedProgress = localStorage.getItem('fullStackProgress');
      if (savedProgress) {
        setCompletedLessons(JSON.parse(savedProgress));
      }
    }
  }, [user]);

  const handleLessonComplete = (lessonId) => {
    const isDemoMode = !user || (user && user.userId === "demo_user_123");
    
    if (isDemoMode) {
      // –î–µ–º–æ —Ä–µ–∂–∏–º - —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
      const newCompleted = [...completedLessons, lessonId];
      setCompletedLessons(newCompleted);
      localStorage.setItem('fullStackProgress', JSON.stringify(newCompleted));
    } else {
      // –†–µ–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º - —Å–æ—Ö—Ä–∞–Ω—è–µ–º —á–µ—Ä–µ–∑ API
      updateProgress('fullStack', lessonId);
    }
  };

  const isLessonCompleted = (lessonId) => {
    return completedLessons.includes(lessonId);
  };

  const isLevelUnlocked = (levelId) => {
    if (levelId === 1) return true;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≤–µ—Ä—à–µ–Ω –ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å
    const previousLevel = fullStackCourse.levels.find(l => l.id === levelId - 1);
    if (!previousLevel) return false;
    
    return previousLevel.lessons.every(lesson => isLessonCompleted(lesson.id));
  };

  const isLessonLocked = (lessonId, levelId) => {
    if (!isLevelUnlocked(levelId)) return true;
    
    // –í —Ä–∞–º–∫–∞—Ö —É—Ä–æ–≤–Ω—è —É—Ä–æ–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ
    const level = fullStackCourse.levels.find(l => l.id === levelId);
    const lessonIndex = level.lessons.findIndex(l => l.id === lessonId);
    
    if (lessonIndex === 0) return false;
    
    return !isLessonCompleted(level.lessons[lessonIndex - 1].id);
  };

  const handleLevelSelect = (level) => {
    setSelectedLevel(level);
  };

  const handleBackToLevels = () => {
    setSelectedLevel(null);
  };

  // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω —É—Ä–æ–≤–µ–Ω—å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ —É—Ä–æ–∫–∏
  if (selectedLevel) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-purple-50 via-pink-50 to-indigo-50">
        {/* Header */}
        <div className={`bg-gradient-to-r ${selectedLevel.color} text-white`}>
          <div className="max-w-7xl mx-auto px-4 py-8">
            <div className="flex items-center justify-between">
              <div>
                <button
                  onClick={handleBackToLevels}
                  className="text-white/80 hover:text-white transition-colors mb-2"
                >
                  ‚Üê –ù–∞–∑–∞–¥ –∫ —É—Ä–æ–≤–Ω—è–º
                </button>
                <h1 className="text-4xl font-bold">{selectedLevel.name}</h1>
                <p className="text-white/80 mt-2">{selectedLevel.description}</p>
              </div>
              <div className="text-right">
                <div className="text-3xl mb-2">üè®</div>
                <div className="text-sm text-white/80">–£—Ä–æ–≤–µ–Ω—å {selectedLevel.id}</div>
              </div>
            </div>
          </div>
        </div>

        {/* Progress Bar */}
        <div className="bg-white shadow-sm">
          <div className="max-w-7xl mx-auto px-4 py-4">
            <div className="flex items-center justify-between mb-2">
              <span className="text-sm font-medium text-gray-700">–ü—Ä–æ–≥—Ä–µ—Å—Å —É—Ä–æ–≤–Ω—è</span>
              <span className="text-sm text-gray-500">
                {selectedLevel.lessons.filter(l => isLessonCompleted(l.id)).length} –∏–∑ {selectedLevel.lessons.length} —É—Ä–æ–∫–æ–≤
              </span>
            </div>
            <div className="w-full bg-gray-200 rounded-full h-2">
              <div
                className={`bg-gradient-to-r ${selectedLevel.color} h-2 rounded-full transition-all duration-300`}
                style={{
                  width: `${(selectedLevel.lessons.filter(l => isLessonCompleted(l.id)).length / selectedLevel.lessons.length) * 100}%`
                }}
              ></div>
            </div>
          </div>
        </div>

        {/* Lessons */}
        <div className="max-w-7xl mx-auto px-4 py-8">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            {selectedLevel.lessons.map((lesson, index) => (
              <motion.div
                key={lesson.id}
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: index * 0.1 }}
                className={`relative bg-white rounded-xl shadow-lg border-2 transition-all duration-300 ${
                  isLessonCompleted(lesson.id)
                    ? 'border-green-500 shadow-green-100'
                    : isLessonLocked(lesson.id, selectedLevel.id)
                    ? 'border-gray-200 opacity-60'
                    : 'border-purple-200 hover:border-purple-400 hover:shadow-xl'
                }`}
              >
                {/* Lock Icon */}
                {isLessonLocked(lesson.id, selectedLevel.id) && (
                  <div className="absolute top-4 right-4 text-gray-400">
                    <span className="text-2xl">üîí</span>
                  </div>
                )}

                {/* Completed Check */}
                {isLessonCompleted(lesson.id) && (
                  <div className="absolute top-4 right-4 text-green-500">
                    <span className="text-2xl">‚úÖ</span>
                  </div>
                )}

                <div className="p-6">
                  <div className="flex items-start mb-4">
                    <div className="text-3xl mr-4 mt-1">üè®</div>
                    <div className="flex-1">
                      <h3 className="font-bold text-lg text-gray-800 mb-2">
                        –£—Ä–æ–∫ {lesson.id}: {lesson.title}
                      </h3>
                      <p className="text-sm text-gray-600 mb-3">{lesson.description}</p>
                      
                      {/* Metaphor */}
                      <div className="bg-blue-50 rounded-lg p-3 mb-3">
                        <h4 className="font-semibold text-blue-800 mb-1">üè® –ú–µ—Ç–∞—Ñ–æ—Ä–∞ –æ—Ç–µ–ª—è:</h4>
                        <p className="text-sm text-blue-700">{lesson.metaphor}</p>
                      </div>

                      {/* Code Examples */}
                      {lesson.codeFrontend && (
                        <div className="bg-green-50 rounded-lg p-3 mb-3">
                          <h4 className="font-semibold text-green-800 mb-1">üíª Frontend –∫–æ–¥:</h4>
                          <pre className="text-xs text-green-700 bg-green-100 p-2 rounded overflow-x-auto">{lesson.codeFrontend}</pre>
                        </div>
                      )}

                      {lesson.codeBackend && (
                        <div className="bg-orange-50 rounded-lg p-3 mb-3">
                          <h4 className="font-semibold text-orange-800 mb-1">‚öôÔ∏è Backend –∫–æ–¥:</h4>
                          <pre className="text-xs text-orange-700 bg-orange-100 p-2 rounded overflow-x-auto">{lesson.codeBackend}</pre>
                        </div>
                      )}

                      {/* Practice Task */}
                      <div className="bg-purple-50 rounded-lg p-3">
                        <h4 className="font-semibold text-purple-800 mb-1">üéØ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ:</h4>
                        <p className="text-sm text-purple-700">{lesson.practiceTask}</p>
                      </div>
                    </div>
                  </div>

                  {isLessonLocked(lesson.id, selectedLevel.id) ? (
                    <button
                      disabled
                      className="w-full py-3 px-4 bg-gray-100 text-gray-400 rounded-lg font-medium cursor-not-allowed"
                    >
                      üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ
                    </button>
                  ) : (
                    <Link
                      to={`/fullstack-course/level/${selectedLevel.id}/lesson/${lesson.id}`}
                      className={`w-full py-3 px-4 rounded-lg font-medium text-center transition-all duration-200 ${
                        isLessonCompleted(lesson.id)
                          ? 'bg-green-100 text-green-700 hover:bg-green-200'
                          : `bg-gradient-to-r ${selectedLevel.color} text-white hover:opacity-90`
                      }`}
                    >
                      {isLessonCompleted(lesson.id) ? '‚úÖ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å' : 'üöÄ –ù–∞—á–∞—Ç—å —É—Ä–æ–∫'}
                    </Link>
                  )}
                </div>
              </motion.div>
            ))}
          </div>
        </div>
      </div>
    );
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä —É—Ä–æ–≤–Ω—è
  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-50 via-pink-50 to-indigo-50">
      {/* Header */}
      <div className={`bg-gradient-to-r ${fullStackCourse.color} text-white`}>
        <div className="max-w-7xl mx-auto px-4 py-12">
          <div className="text-center">
            <div className="text-6xl mb-4">{fullStackCourse.icon}</div>
            <h1 className="text-5xl font-bold mb-4">{fullStackCourse.name}</h1>
            <p className="text-xl opacity-90 max-w-3xl mx-auto">{fullStackCourse.description}</p>
          </div>
        </div>
      </div>

      {/* Course Overview */}
      <div className="max-w-7xl mx-auto px-4 py-8">
        <div className="bg-white rounded-xl shadow-lg p-8 mb-8">
          <h2 className="text-2xl font-bold text-gray-800 mb-6">üè® –û –∫—É—Ä—Å–µ "–û—Ç–µ–ª—å Full-Stack"</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
            <div>
              <h3 className="font-semibold text-gray-800 mb-4">üéØ –ß—Ç–æ –≤—ã –∏–∑—É—á–∏—Ç–µ:</h3>
              <ul className="space-y-2 text-gray-600">
                <li>‚Ä¢ HTTP –∑–∞–ø—Ä–æ—Å—ã –∏ –º–µ—Ç–æ–¥—ã (–∫–∞–∫ –∫–ª–∏–µ–Ω—Ç –æ—Ç–µ–ª—è)</li>
                <li>‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞ Express.js (–∫–∞–∫ —Ä–µ—Ü–µ–ø—Ü–∏—è)</li>
                <li>‚Ä¢ –†–∞–±–æ—Ç–∞ —Å MongoDB (–∫–∞–∫ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç–µ–ª—è)</li>
                <li>‚Ä¢ –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</li>
                <li>‚Ä¢ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö</li>
                <li>‚Ä¢ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ</li>
              </ul>
            </div>
            <div>
              <h3 className="font-semibold text-gray-800 mb-4">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫—É—Ä—Å–∞:</h3>
              <div className="grid grid-cols-2 gap-4 text-sm">
                <div className="bg-blue-50 rounded-lg p-3">
                  <span className="text-blue-600 font-medium">–£—Ä–æ–≤–Ω–µ–π:</span> 3
                </div>
                <div className="bg-green-50 rounded-lg p-3">
                  <span className="text-green-600 font-medium">–£—Ä–æ–∫–æ–≤:</span> 15
                </div>
                <div className="bg-purple-50 rounded-lg p-3">
                  <span className="text-purple-600 font-medium">–ü—Ä–æ–µ–∫—Ç–æ–≤:</span> 15
                </div>
                <div className="bg-orange-50 rounded-lg p-3">
                  <span className="text-orange-600 font-medium">–£—Ä–æ–≤–µ–Ω—å:</span> –û—Ç –±–∞–∑–æ–≤–æ–≥–æ –¥–æ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* Levels */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
          {fullStackCourse.levels.map((level, index) => (
            <motion.div
              key={level.id}
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: index * 0.2 }}
              className={`relative bg-white rounded-xl shadow-lg border-2 transition-all duration-300 ${
                isLevelUnlocked(level.id)
                  ? 'border-purple-200 hover:border-purple-400 hover:shadow-xl cursor-pointer'
                  : 'border-gray-200 opacity-60'
              }`}
              onClick={() => isLevelUnlocked(level.id) && handleLevelSelect(level)}
            >
              {/* Lock Icon for locked levels */}
              {!isLevelUnlocked(level.id) && (
                <div className="absolute top-4 right-4 text-gray-400">
                  <span className="text-2xl">üîí</span>
                </div>
              )}

              {/* Level Header */}
              <div className={`bg-gradient-to-r ${level.color} p-6 text-white text-center rounded-t-xl`}>
                <div className="text-4xl mb-3">üè®</div>
                <h3 className="text-xl font-bold mb-2">{level.name}</h3>
                <p className="text-sm opacity-90">{level.description}</p>
              </div>

              {/* Level Content */}
              <div className="p-6">
                <div className="mb-4">
                  <h4 className="font-semibold text-gray-800 mb-3">–£—Ä–æ–∫–∏ –≤ —ç—Ç–æ–º —É—Ä–æ–≤–Ω–µ:</h4>
                  <ul className="space-y-2 text-sm text-gray-600">
                    {level.lessons.slice(0, 3).map((lesson, idx) => (
                      <li key={idx} className="flex items-center">
                        <span className={`w-2 h-2 bg-gradient-to-r ${level.color} rounded-full mr-3`}></span>
                        {lesson.title}
                      </li>
                    ))}
                    {level.lessons.length > 3 && (
                      <li className="text-purple-600 font-medium">... –∏ –µ—â—ë {level.lessons.length - 3} —É—Ä–æ–∫–æ–≤</li>
                    )}
                  </ul>
                </div>

                <div className="mb-4">
                  <div className="flex justify-between text-sm text-gray-600 mb-2">
                    <span>–ü—Ä–æ–≥—Ä–µ—Å—Å:</span>
                    <span>{level.lessons.filter(l => isLessonCompleted(l.id)).length}/{level.lessons.length}</span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2">
                    <div
                      className={`bg-gradient-to-r ${level.color} h-2 rounded-full transition-all duration-300`}
                      style={{
                        width: `${(level.lessons.filter(l => isLessonCompleted(l.id)).length / level.lessons.length) * 100}%`
                      }}
                    ></div>
                  </div>
                </div>

                {isLevelUnlocked(level.id) ? (
                  <button
                    className={`w-full py-3 bg-gradient-to-r ${level.color} hover:opacity-90 text-white rounded-lg font-semibold transition-all duration-200`}
                  >
                    üöÄ –ò–∑—É—á–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å
                  </button>
                ) : (
                  <button
                    disabled
                    className="w-full py-3 bg-gray-100 text-gray-400 rounded-lg font-medium cursor-not-allowed"
                  >
                    üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ
                  </button>
                )}
              </div>
            </motion.div>
          ))}
        </div>
      </div>
    </div>
  );
};

export default FullStackCourse; 