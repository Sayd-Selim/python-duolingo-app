import React, { useState, useEffect, useMemo, useCallback } from 'react';
import { motion } from 'framer-motion';
import { Link } from 'react-router-dom';
import { useAuth } from '../context/AuthContext';
import { useProgress } from '../context/ProgressContext';

function Practice() {
  const [selectedLesson, setSelectedLesson] = useState(null);
  const [currentTask, setCurrentTask] = useState(0);
  const [showHint, setShowHint] = useState(false);
  const [isCompleted, setIsCompleted] = useState(false);
  const [taskHistory, setTaskHistory] = useState([]);
  const { user } = useAuth();
  const { completedLessons, lessonProgress, refreshUserProgress } = useProgress();

  console.log('üîÑ Practice –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–ª—Å—è:', {
    completedLessons,
    lessonProgress,
    user: user?.userId
  });

  // –î–æ—Å—Ç—É–ø–Ω—ã–µ —É—Ä–æ–∫–∏ (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å)
  const availableLessons = useMemo(() => [
    {
      id: 1,
      title: '–£—Ä–æ–∫ 1: –í–≤–µ–¥–µ–Ω–∏–µ –≤ Python',
      description: '–û—Å–Ω–æ–≤—ã Python, —Ñ—É–Ω–∫—Ü–∏—è print(), –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏',
      topics: ['print()', '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏', '—Å—Ç—Ä–æ–∫–∏'],
      difficulty: '–ù–∞—á–∏–Ω–∞—é—â–∏–π',
    },
    {
      id: 2,
      title: '–£—Ä–æ–∫ 2: –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ',
      description: '–†–∞–±–æ—Ç–∞ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏, —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö',
      topics: ['–ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ', '—Å—Ç—Ä–æ–∫–∏', '—á–∏—Å–ª–∞'],
      difficulty: '–ù–∞—á–∏–Ω–∞—é—â–∏–π',
    },
    {
      id: 3,
      title: '–£—Ä–æ–∫ 3: –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö',
      description: '–§—É–Ω–∫—Ü–∏—è input(), –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ç–∏–ø–æ–≤',
      topics: ['input()', 'int()', 'str()'],
      difficulty: '–ù–∞—á–∏–Ω–∞—é—â–∏–π',
    }
  ], []);

  // –¢–æ–ª—å–∫–æ –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ —É—Ä–æ–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –ø—Ä–∞–∫—Ç–∏–∫–∏
  const unlockedLessons = useMemo(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —É—Ä–æ–∫–æ–≤
    const completedFromArray = completedLessons || [];
    const completedFromProgress = Object.entries(lessonProgress || {})
      .filter(([lessonId, progress]) => progress >= 100)
      .map(([lessonId]) => Number(lessonId));
    
    const allCompleted = [...new Set([...completedFromArray, ...completedFromProgress])];
    
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É—Ä–æ–∫–æ–≤ –¥–ª—è –ø—Ä–∞–∫—Ç–∏–∫–∏:', {
      completedLessons: completedFromArray,
      lessonProgress,
      completedFromProgress,
      allCompleted,
      availableLessons: availableLessons.map(l => ({ id: l.id, title: l.title })),
      unlocked: availableLessons.filter(lesson => allCompleted.includes(lesson.id))
    });
    
    return availableLessons.filter(lesson => allCompleted.includes(lesson.id));
  }, [availableLessons, completedLessons, lessonProgress]);

  // –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∑–∞–¥–∞—á –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —É—Ä–æ–∫–æ–≤
  const generateTasks = useMemo(() => ({
    1: () => {
      const tasks = [
        {
          title: '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ',
          content: 'üíª –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Python!"',
          code: 'print("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Python!")',
          explanation: 'üîç –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é print() —Å —Ç–µ–∫—Å—Ç–æ–º –≤ –∫–∞–≤—ã—á–∫–∞—Ö',
          expectedOutput: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Python!',
          hint: 'üí° print("–≤–∞—à —Ç–µ–∫—Å—Ç") - –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –∫–∞–≤—ã—á–∫–∏!'
        },
        {
          title: '–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è',
          content: 'üíª –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç:\n1. "–ü—Ä–∏–≤–µ—Ç!"\n2. "–ö–∞–∫ –¥–µ–ª–∞?"\n3. "–û—Ç–ª–∏—á–Ω–æ!"',
          code: 'print("–ü—Ä–∏–≤–µ—Ç!")\nprint("–ö–∞–∫ –¥–µ–ª–∞?")\nprint("–û—Ç–ª–∏—á–Ω–æ!")',
          explanation: 'üîç –ö–∞–∂–¥—ã–π print() –≤—ã–≤–æ–¥–∏—Ç –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É',
          expectedOutput: '–ü—Ä–∏–≤–µ—Ç!\n–ö–∞–∫ –¥–µ–ª–∞?\n–û—Ç–ª–∏—á–Ω–æ!',
          hint: 'üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç—Ä–∏ print() –æ–¥–∏–Ω –∑–∞ –¥—Ä—É–≥–∏–º'
        },
        {
          title: '–ü—Ä–æ–≥—Ä–∞–º–º–∞ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º',
          content: 'üíª –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç "–ú–æ—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!"',
          code: '# –≠—Ç–æ –º–æ—è –ø—Ä–æ–≥—Ä–∞–º–º–∞\nprint("–ú–æ—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!")',
          explanation: 'üîç –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å #',
          expectedOutput: '–ú–æ—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!',
          hint: 'üí° –ù–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è, –∑–∞—Ç–µ–º –¥–æ–±–∞–≤—å—Ç–µ print()'
        },
        {
          title: '–ö—Ä–∞—Å–∏–≤–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ',
          content: 'üíª –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç:\n1. "================"\n2. "–ú–û–Ø –ü–†–û–ì–†–ê–ú–ú–ê"\n3. "================"',
          code: 'print("================")\nprint("–ú–û–Ø –ü–†–û–ì–†–ê–ú–ú–ê")\nprint("================")',
          explanation: 'üîç –°–∏–º–≤–æ–ª—ã = —Å–æ–∑–¥–∞—é—Ç —Ä–∞–º–∫—É',
          expectedOutput: '================\n–ú–û–Ø –ü–†–û–ì–†–ê–ú–ú–ê\n================',
          hint: 'üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∏–º–≤–æ–ª—ã = –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞–º–∫–∏'
        },
        {
          title: '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ —Å—Ç—Ä–æ–∫–µ',
          content: 'üíª –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç "–†–µ–∑—É–ª—å—Ç–∞—Ç: 100" —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º –≤ —Ç–æ–π –∂–µ —Å—Ç—Ä–æ–∫–µ',
          code: 'print("–†–µ–∑—É–ª—å—Ç–∞—Ç: 100")  # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç',
          explanation: 'üîç –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –ø–æ—Å–ª–µ –∫–æ–¥–∞',
          expectedOutput: '–†–µ–∑—É–ª—å—Ç–∞—Ç: 100',
          hint: 'üí° –î–æ–±–∞–≤—å—Ç–µ # –ø–æ—Å–ª–µ –∫–æ–¥–∞ –≤ —Ç–æ–π –∂–µ —Å—Ç—Ä–æ–∫–µ'
        },
        {
          title: '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
          content: 'üíª –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç "–ü—Ä–∏–≤–µ—Ç, –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç!"',
          code: 'print("–ü—Ä–∏–≤–µ—Ç, –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç!")',
          explanation: 'üîç –ü—Ä–æ—Å—Ç–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ print()',
          expectedOutput: '–ü—Ä–∏–≤–µ—Ç, –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç!',
          hint: 'üí° print("–ü—Ä–∏–≤–µ—Ç, –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç!")'
        },
        {
          title: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞',
          content: 'üíª –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç:\n1. "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–≥—Ä–∞–º–º–µ"\n2. "–í–µ—Ä—Å–∏—è: 1.0"\n3. "–ê–≤—Ç–æ—Ä: –í—ã"',
          code: 'print("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–≥—Ä–∞–º–º–µ")\nprint("–í–µ—Ä—Å–∏—è: 1.0")\nprint("–ê–≤—Ç–æ—Ä: –í—ã")',
          explanation: 'üîç –¢—Ä–∏ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π',
          expectedOutput: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–≥—Ä–∞–º–º–µ\n–í–µ—Ä—Å–∏—è: 1.0\n–ê–≤—Ç–æ—Ä: –í—ã',
          hint: 'üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç—Ä–∏ print() –¥–ª—è —Ç—Ä–µ—Ö —Å—Ç—Ä–æ–∫'
        },
        {
          title: '–ü—Ä–æ–≥—Ä–∞–º–º–∞ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏',
          content: 'üíª –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É —Å –¥–≤—É–º—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"',
          code: '# –ù–∞—á–∞–ª–æ –ø—Ä–æ–≥—Ä–∞–º–º—ã\nprint("–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")  # –ö–æ–Ω–µ—Ü –ø—Ä–æ–≥—Ä–∞–º–º—ã',
          explanation: 'üîç –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ –Ω–∞—á–∞–ª–µ –∏ –≤ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏',
          expectedOutput: '–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞',
          hint: 'üí° –î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ –Ω–∞—á–∞–ª–µ –∏ –≤ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏'
        }
      ];
      return tasks.sort(() => Math.random() - 0.5).slice(0, 5); // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –∏ –±–µ—Ä–µ–º 5
    },
    2: () => {
      const tasks = [
        {
          title: '–°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π',
          content: 'üíª –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é name —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º "–ê–Ω–Ω–∞" –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –µ—ë',
          code: 'name = "–ê–Ω–Ω–∞"\nprint(name)',
          explanation: 'üîç –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ = –¥–ª—è –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è',
          expectedOutput: '–ê–Ω–Ω–∞',
          hint: 'üí° name = "–ê–Ω–Ω–∞" - —Å–æ–∑–¥–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é'
        },
        {
          title: '–ß–∏—Å–ª–æ–≤–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è',
          content: 'üíª –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é age —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º 25 –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –µ—ë',
          code: 'age = 25\nprint(age)',
          explanation: 'üîç –ß–∏—Å–ª–∞ –ø–∏—à—É—Ç—Å—è –±–µ–∑ –∫–∞–≤—ã—á–µ–∫',
          expectedOutput: '25',
          hint: 'üí° age = 25 - —Å–æ–∑–¥–∞–µ—Ç —á–∏—Å–ª–æ–≤—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é'
        },
        {
          title: '–ù–µ—Å–∫–æ–ª—å–∫–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö',
          content: 'üíª –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ name="–ò–≤–∞–Ω" –∏ age=30, –∑–∞—Ç–µ–º –≤—ã–≤–µ–¥–∏—Ç–µ –æ–±–µ',
          code: 'name = "–ò–≤–∞–Ω"\nage = 30\nprint(name)\nprint(age)',
          explanation: 'üîç –ú–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö',
          expectedOutput: '–ò–≤–∞–Ω\n30',
          hint: 'üí° –°–æ–∑–¥–∞–π—Ç–µ –¥–≤–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –∏—Ö'
        },
        {
          title: '–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å —á–∏—Å–ª–æ–º',
          content: 'üíª –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é score —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º 95 –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –µ—ë',
          code: 'score = 95\nprint(score)',
          explanation: 'üîç –ß–∏—Å–ª–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ –Ω—É–∂–¥–∞—é—Ç—Å—è –≤ –∫–∞–≤—ã—á–∫–∞—Ö',
          expectedOutput: '95',
          hint: 'üí° score = 95 - —Å–æ–∑–¥–∞–µ—Ç —á–∏—Å–ª–æ–≤—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é'
        },
        {
          title: '–°—Ç—Ä–æ–∫–æ–≤–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è',
          content: 'üíª –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é city —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º "–ú–æ—Å–∫–≤–∞" –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –µ—ë',
          code: 'city = "–ú–æ—Å–∫–≤–∞"\nprint(city)',
          explanation: 'üîç –°—Ç—Ä–æ–∫–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–∫–ª—é—á–∞—é—Ç—Å—è –≤ –∫–∞–≤—ã—á–∫–∏',
          expectedOutput: '–ú–æ—Å–∫–≤–∞',
          hint: 'üí° city = "–ú–æ—Å–∫–≤–∞" - —Å–æ–∑–¥–∞–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é'
        },
        {
          title: '–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ',
          content: 'üíª –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ name="–ú–∞—Ä–∏—è", age=28, city="–°–ü–±" –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –∏—Ö',
          code: 'name = "–ú–∞—Ä–∏—è"\nage = 28\ncity = "–°–ü–±"\nprint(name)\nprint(age)\nprint(city)',
          explanation: 'üîç –ú–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –º–Ω–æ–≥–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤',
          expectedOutput: '–ú–∞—Ä–∏—è\n28\n–°–ü–±',
          hint: 'üí° –°–æ–∑–¥–∞–π—Ç–µ —Ç—Ä–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –∏—Ö –ø–æ –æ—á–µ—Ä–µ–¥–∏'
        },
        {
          title: '–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º',
          content: 'üíª –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é price —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º 1500 –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –µ—ë —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º',
          code: 'price = 1500  # –¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞\nprint(price)',
          explanation: 'üîç –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º',
          expectedOutput: '1500',
          hint: 'üí° –î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π'
        }
      ];
      return tasks.sort(() => Math.random() - 0.5).slice(0, 5);
    },
    3: () => {
      const tasks = [
        {
          title: '–í–≤–æ–¥ –∏–º–µ–Ω–∏',
          content: 'üíª –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∏–º—è –∏ –≤—ã–≤–æ–¥–∏—Ç "–ü—Ä–∏–≤–µ—Ç, [–∏–º—è]!"',
          code: 'name = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è: ")\nprint("–ü—Ä–∏–≤–µ—Ç, " + name + "!")',
          explanation: 'üîç input() –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≤–≤–æ–¥, + —Å–æ–µ–¥–∏–Ω—è–µ—Ç —Å—Ç—Ä–æ–∫–∏',
          expectedOutput: '–ü—Ä–∏–≤–µ—Ç, [–≤–≤–µ–¥–µ–Ω–Ω–æ–µ –∏–º—è]!',
          hint: 'üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ input() –∏ —Å–ª–æ–∂–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫'
        },
        {
          title: '–í–≤–æ–¥ —á–∏—Å–ª–∞',
          content: 'üíª –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —á–∏—Å–ª–æ –∏ –≤—ã–≤–æ–¥–∏—Ç –µ–≥–æ —É–¥–≤–æ–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ',
          code: 'number = int(input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: "))\nprint(number * 2)',
          explanation: 'üîç int() –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ —á–∏—Å–ª–æ',
          expectedOutput: '[—É–¥–≤–æ–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ]',
          hint: 'üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ int(input()) –¥–ª—è –≤–≤–æ–¥–∞ —á–∏—Å–ª–∞'
        },
        {
          title: '–í–≤–æ–¥ –≤–æ–∑—Ä–∞—Å—Ç–∞',
          content: 'üíª –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≤–æ–∑—Ä–∞—Å—Ç –∏ –≤—ã–≤–æ–¥–∏—Ç "–í–∞–º [–≤–æ–∑—Ä–∞—Å—Ç] –ª–µ—Ç"',
          code: 'age = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç: ")\nprint("–í–∞–º " + age + " –ª–µ—Ç")',
          explanation: 'üîç input() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ —Å–æ–µ–¥–∏–Ω–∏—Ç—å —Å –¥—Ä—É–≥–∏–º–∏ —Å—Ç—Ä–æ–∫–∞–º–∏',
          expectedOutput: '–í–∞–º [–≤–≤–µ–¥–µ–Ω–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç] –ª–µ—Ç',
          hint: 'üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ input() –∏ —Å–ª–æ–∂–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫'
        },
        {
          title: '–í–≤–æ–¥ —á–∏—Å–ª–∞ —Å –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ–º',
          content: 'üíª –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —á–∏—Å–ª–æ –∏ –≤—ã–≤–æ–¥–∏—Ç –µ–≥–æ –∫–≤–∞–¥—Ä–∞—Ç',
          code: 'number = int(input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: "))\nprint(number ** 2)',
          explanation: 'üîç ** - –æ–ø–µ—Ä–∞—Ç–æ—Ä –≤–æ–∑–≤–µ–¥–µ–Ω–∏—è –≤ —Å—Ç–µ–ø–µ–Ω—å',
          expectedOutput: '[–∫–≤–∞–¥—Ä–∞—Ç —á–∏—Å–ª–∞]',
          hint: 'üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ int(input()) –∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä **'
        },
        {
          title: '–í–≤–æ–¥ –¥–≤—É—Ö —á–∏—Å–µ–ª',
          content: 'üíª –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –¥–≤–∞ —á–∏—Å–ª–∞ –∏ –≤—ã–≤–æ–¥–∏—Ç –∏—Ö —Å—É–º–º—É',
          code: 'a = int(input("–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ: "))\nb = int(input("–í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ: "))\nprint(a + b)',
          explanation: 'üîç –ú–æ–∂–Ω–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏–π',
          expectedOutput: '[—Å—É–º–º–∞ –¥–≤—É—Ö —á–∏—Å–µ–ª]',
          hint: 'üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–≤–∞ int(input()) –∏ —Å–ª–æ–∂–µ–Ω–∏–µ'
        },
        {
          title: '–í–≤–æ–¥ –≥–æ—Ä–æ–¥–∞',
          content: 'üíª –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≥–æ—Ä–æ–¥ –∏ –≤—ã–≤–æ–¥–∏—Ç "–í—ã –∂–∏–≤–µ—Ç–µ –≤ [–≥–æ—Ä–æ–¥]"',
          code: 'city = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥: ")\nprint("–í—ã –∂–∏–≤–µ—Ç–µ –≤ " + city)',
          explanation: 'üîç input() –¥–ª—è —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö',
          expectedOutput: '–í—ã –∂–∏–≤–µ—Ç–µ –≤ [–≤–≤–µ–¥–µ–Ω–Ω—ã–π –≥–æ—Ä–æ–¥]',
          hint: 'üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ input() –∏ —Å–ª–æ–∂–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫'
        }
      ];
      return tasks.sort(() => Math.random() - 0.5).slice(0, 5);
    }
  }), []);

  const [currentTasks, setCurrentTasks] = useState([]);
  const [isGenerating, setIsGenerating] = useState(false);
  const [generationStep, setGenerationStep] = useState('');

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∑–∞–¥–∞—á–∏ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —É—Ä–æ–∫–∞
  useEffect(() => {
    if (selectedLesson && currentTasks.length === 0) {
      console.log('useEffect: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∑–∞–¥–∞—á–∏ –¥–ª—è —É—Ä–æ–∫–∞:', selectedLesson.id);
      generateNewTasks();
    }
  }, [selectedLesson]);

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á
  const generateNewTasks = useCallback(async () => {
    console.log('generateNewTasks –≤—ã–∑–≤–∞–Ω–∞, selectedLesson:', selectedLesson);
    if (!selectedLesson) {
      console.log('selectedLesson –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
      return;
    }
    
    console.log('–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∑–∞–¥–∞—á–∏ –¥–ª—è —É—Ä–æ–∫–∞:', selectedLesson.id);
    console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã:', Object.keys(generateTasks));
    setIsGenerating(true);
    
    // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ - —É–±–∏—Ä–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É
    setGenerationStep('–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∑–∞–¥–∞—á–∏...');
    await new Promise(resolve => setTimeout(resolve, 500));
    
    // –ü–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤—ã–µ –∑–∞–¥–∞—á–∏
    if (!generateTasks[selectedLesson.id]) {
      console.error('–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∑–∞–¥–∞—á –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —É—Ä–æ–∫–∞:', selectedLesson.id);
      setIsGenerating(false);
      setGenerationStep('');
      return;
    }
    
    let newTasks = generateTasks[selectedLesson.id]();
    console.log('–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏:', newTasks);
    
    if (!newTasks || newTasks.length === 0) {
      console.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á–∏ –¥–ª—è —É—Ä–æ–∫–∞:', selectedLesson.id);
      setIsGenerating(false);
      setGenerationStep('');
      return;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –≤–∞—Ä–∏–∞—Ü–∏–∏ –¥–ª—è –±–æ–ª—å—à–µ–π —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏
    newTasks = newTasks.map(task => ({
      ...task,
      // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏–ª–∏ –Ω–µ–±–æ–ª—å—à–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
      content: task.content + (Math.random() > 0.7 ? '\n\nüí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ä–µ—à–∏—Ç—å –∑–∞–¥–∞—á—É —Ä–∞–∑–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏!' : ''),
      hint: task.hint + (Math.random() > 0.8 ? '\n\nüéØ –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –¥–µ—Ç–∞–ª–∏!' : '')
    }));
    
    console.log('–§–∏–Ω–∞–ª—å–Ω—ã–µ –∑–∞–¥–∞—á–∏:', newTasks);
    setCurrentTasks(newTasks);
    setCurrentTask(0);
    setIsCompleted(false);
    setShowHint(false);
    setTaskHistory([]);
    setIsGenerating(false);
    setGenerationStep('');
  }, [selectedLesson, generateTasks]);

  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–π –∑–∞–¥–∞—á–µ
  const nextTask = () => {
    if (currentTask < currentTasks.length - 1) {
      setCurrentTask(currentTask + 1);
      setShowHint(false);
    } else {
      setIsCompleted(true);
    }
  };

  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –∑–∞–¥–∞—á–µ
  const previousTask = () => {
    if (currentTask > 0) {
      setCurrentTask(currentTask - 1);
      setShowHint(false);
    }
  };

  // –í—ã–±–æ—Ä —É—Ä–æ–∫–∞
  const selectLesson = (lesson) => {
    console.log('–í—ã–±—Ä–∞–Ω —É—Ä–æ–∫:', lesson);
    setSelectedLesson(lesson);
  };

  // –°–±—Ä–æ—Å –∫ –≤—ã–±–æ—Ä—É —É—Ä–æ–∫–∞
  const resetToLessonSelection = () => {
    setSelectedLesson(null);
    setCurrentTasks([]);
    setCurrentTask(0);
    setIsCompleted(false);
    setShowHint(false);
    setTaskHistory([]);
    setIsGenerating(false);
    setGenerationStep('');
  };

  if (!selectedLesson) {
    return (
      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        className="max-w-6xl mx-auto p-6"
      >
        <div className="text-center mb-8">
          <h1 className="text-4xl font-bold text-gray-800 mb-4">üíª –ü—Ä–∞–∫—Ç–∏–∫–∞</h1>
          <p className="text-xl text-gray-600 mb-4">–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–∫ –¥–ª—è –ø—Ä–∞–∫—Ç–∏–∫–∏</p>
          <div className="flex justify-center space-x-4">
            <button
              onClick={refreshUserProgress}
              className="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors flex items-center space-x-2"
            >
              <span>üîÑ</span>
              <span>–û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å</span>
            </button>
            <div className="px-4 py-2 bg-gray-100 text-gray-700 rounded-lg">
              –ó–∞–≤–µ—Ä—à–µ–Ω–æ —É—Ä–æ–∫–æ–≤: {unlockedLessons.length}
            </div>
          </div>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {availableLessons.map((lesson) => {
            const isCompleted = unlockedLessons.some(unlocked => unlocked.id === lesson.id);
            return (
              <motion.div
                key={lesson.id}
                whileHover={{ scale: isCompleted ? 1.02 : 1 }}
                whileTap={{ scale: isCompleted ? 0.98 : 1 }}
                className={`bg-white rounded-xl shadow-lg p-6 border border-gray-200 transition-all duration-200 ${
                  isCompleted 
                    ? 'hover:shadow-xl cursor-pointer' 
                    : 'opacity-60 cursor-not-allowed'
                }`}
                onClick={() => isCompleted && selectLesson(lesson)}
              >
                <div className="flex items-center justify-between mb-4">
                  <h3 className="text-xl font-semibold text-gray-800">{lesson.title}</h3>
                  <span className={`text-sm px-2 py-1 rounded-full ${
                    isCompleted 
                      ? 'bg-green-100 text-green-800' 
                      : 'bg-gray-100 text-gray-600'
                  }`}>
                    {isCompleted ? '–ó–∞–≤–µ—Ä—à–µ–Ω' : lesson.difficulty}
                  </span>
                </div>
                <p className="text-gray-600 mb-4">{lesson.description}</p>
                <div className="flex flex-wrap gap-2 mb-4">
                  {lesson.topics.map((topic, index) => (
                    <span
                      key={index}
                      className="text-xs px-2 py-1 bg-blue-100 text-blue-800 rounded-full"
                    >
                      {topic}
                    </span>
                  ))}
                </div>
                <div className="flex items-center justify-between">
                  <span className={`text-sm font-medium ${
                    isCompleted ? 'text-green-600' : 'text-gray-500'
                  }`}>
                    {isCompleted ? '‚úì –î–æ—Å—Ç—É–ø–µ–Ω' : 'üîí –ó–∞–≤–µ—Ä—à–∏—Ç–µ —É—Ä–æ–∫'}
                  </span>
                  <button 
                    className={`px-4 py-2 rounded-lg transition-all duration-200 ${
                      isCompleted
                        ? 'bg-gradient-to-r from-blue-500 to-blue-600 text-white hover:from-blue-600 hover:to-blue-700'
                        : 'bg-gray-300 text-gray-500 cursor-not-allowed'
                    }`}
                    disabled={!isCompleted}
                  >
                    {isCompleted ? '–ü—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è' : '–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ'}
                  </button>
                </div>
              </motion.div>
            );
          })}
        </div>

        <div className="text-center mt-8">
          <Link
            to="/python-course"
            className="px-6 py-3 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors"
          >
            ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫—É—Ä—Å—É
          </Link>
        </div>
      </motion.div>
    );
  }

  if (currentTasks.length === 0 || isGenerating) {
    console.log('–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É:', { currentTasks: currentTasks.length, isGenerating, selectedLesson });
    return (
      <div className="max-w-4xl mx-auto p-6">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto mb-4"></div>
          <p className="text-gray-600">
            {isGenerating ? '–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏...' : '–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∑–∞–¥–∞—á–∏...'}
          </p>
          {isGenerating && generationStep && (
            <div className="mt-4 text-sm text-blue-600 font-medium">
              {generationStep}
            </div>
          )}
          {isGenerating && (
            <div className="mt-4 text-sm text-gray-500">
              –ü–æ–¥–±–∏—Ä–∞–µ–º –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è –≤–∞—à–µ–≥–æ —É—Ä–æ–≤–Ω—è...
            </div>
          )}
          {!isGenerating && currentTasks.length === 0 && (
            <div className="mt-4">
              <div className="text-sm text-red-500 mb-4">
                –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–∞–¥–∞—á. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.
              </div>
              <button
                onClick={() => generateNewTasks()}
                className="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors"
              >
                üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
              </button>
            </div>
          )}
        </div>
      </div>
    );
  }

  const currentTaskData = currentTasks[currentTask];

  return (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      className="max-w-4xl mx-auto p-6"
    >
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="mb-8">
        <div className="flex items-center justify-between mb-4">
          <div>
            <h1 className="text-3xl font-bold text-gray-800 mb-2">
              üíª –ü—Ä–∞–∫—Ç–∏–∫–∞: {selectedLesson.title}
            </h1>
            <p className="text-gray-600">–ó–∞–¥–∞—á–∞ {currentTask + 1} –∏–∑ {currentTasks.length}</p>
          </div>
          <button
            onClick={resetToLessonSelection}
            className="px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors"
          >
            ‚Üê –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π —É—Ä–æ–∫
          </button>
        </div>

        {/* –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä */}
        <div className="w-full bg-gray-200 rounded-full h-3 mb-4">
          <motion.div
            className="bg-gradient-to-r from-blue-500 to-green-500 h-3 rounded-full"
            initial={{ width: 0 }}
            animate={{ width: `${((currentTask + 1) / currentTasks.length) * 100}%` }}
            transition={{ duration: 0.5 }}
          />
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="bg-white rounded-xl shadow-xl p-8 mb-8 border border-gray-100">
        <motion.h2
          key={currentTask}
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          className="text-2xl font-bold text-gray-800 mb-6"
        >
          {currentTaskData.title}
        </motion.h2>

        <motion.div
          key={`content-${currentTask}`}
          initial={{ opacity: 0, x: 20 }}
          animate={{ opacity: 1, x: 0 }}
          className="space-y-6"
        >
          {/* –û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ */}
          <div className="text-gray-700 leading-relaxed text-lg">
            {currentTaskData.content.split('\n').map((line, index) => (
              <p key={index} className="mb-3">
                {line}
              </p>
            ))}
          </div>

          {/* –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç */}
          <div className="bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-lg p-4">
            <div className="flex items-center mb-2">
              <span className="text-xl mr-2">üéØ</span>
              <span className="text-blue-800 font-semibold">–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:</span>
            </div>
            <div className="bg-gray-900 rounded-lg p-4">
              <pre className="text-green-400 text-lg font-mono">
                {currentTaskData.expectedOutput}
              </pre>
            </div>
          </div>

          {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
          <div className="bg-gradient-to-r from-yellow-50 to-orange-50 border border-yellow-200 rounded-lg p-4">
            <div className="flex items-center mb-2">
              <span className="text-xl mr-2">üìù</span>
              <span className="text-yellow-800 font-semibold">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:</span>
            </div>
            <ol className="text-yellow-700 text-lg space-y-2">
              <li>1. –û—Ç–∫—Ä–æ–π—Ç–µ –≤–∞—à —Ä–µ–¥–∞–∫—Ç–æ—Ä –∫–æ–¥–∞</li>
              <li>2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —Ñ–∞–π–ª .py</li>
              <li>3. –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥ —Å–æ–≥–ª–∞—Å–Ω–æ –∑–∞–¥–∞–Ω–∏—é</li>
              <li>4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É</li>
              <li>5. –°—Ä–∞–≤–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –æ–∂–∏–¥–∞–µ–º—ã–º</li>
              <li>6. –ù–∞–∂–º–∏—Ç–µ "–°–ª–µ–¥—É—é—â–∞—è –∑–∞–¥–∞—á–∞" –∫–æ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã</li>
            </ol>
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ */}
          <div className="flex space-x-4">
            <button
              onClick={() => setShowHint(!showHint)}
              className="px-6 py-3 bg-gradient-to-r from-blue-500 to-blue-600 text-white rounded-lg hover:from-blue-600 hover:to-blue-700 transition-all duration-200 flex items-center space-x-2 shadow-lg"
            >
              <span>üí°</span>
              <span>–ü–æ–¥—Å–∫–∞–∑–∫–∞</span>
            </button>
          </div>

          {showHint && (
            <div className="bg-gradient-to-r from-blue-100 to-indigo-100 border border-blue-300 rounded-lg p-4">
              <div className="flex items-center mb-2">
                <span className="text-xl mr-2">üí°</span>
                <span className="text-blue-800 font-semibold">–ü–æ–¥—Å–∫–∞–∑–∫–∞</span>
              </div>
              <div className="text-blue-800 text-lg space-y-3">
                {currentTaskData.hint.split('\n').map((line, index) => (
                  <p key={index} className="leading-relaxed">
                    {line}
                  </p>
                ))}
              </div>
            </div>
          )}
        </motion.div>
      </div>

      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
      <div className="flex justify-between items-center">
        <button
          onClick={previousTask}
          disabled={currentTask === 0}
          className={`px-6 py-3 rounded-lg transition-all duration-200 flex items-center space-x-2 ${
            currentTask === 0
              ? 'bg-gray-300 text-gray-500 cursor-not-allowed'
              : 'bg-gradient-to-r from-gray-600 to-gray-700 text-white hover:from-gray-700 hover:to-gray-800 shadow-lg'
          }`}
        >
          <span>‚Üê</span>
          <span>–ü—Ä–µ–¥—ã–¥—É—â–∞—è</span>
        </button>

        <div className="flex space-x-4">
          <button
            onClick={generateNewTasks}
            disabled={isGenerating}
            className={`px-6 py-3 rounded-lg transition-all duration-200 flex items-center space-x-2 shadow-lg ${
              isGenerating
                ? 'bg-gray-400 text-gray-200 cursor-not-allowed'
                : 'bg-gradient-to-r from-purple-500 to-purple-600 text-white hover:from-purple-600 hover:to-purple-700'
            }`}
          >
            <span>{isGenerating ? '‚è≥' : 'üîÑ'}</span>
            <span>{isGenerating ? '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è...' : '–ù–æ–≤—ã–µ –∑–∞–¥–∞—á–∏'}</span>
          </button>

          {currentTask < currentTasks.length - 1 ? (
            <button
              onClick={nextTask}
              className="px-6 py-3 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-lg hover:from-green-600 hover:to-green-700 transition-all duration-200 flex items-center space-x-2 shadow-lg"
            >
              <span>–°–ª–µ–¥—É—é—â–∞—è</span>
              <span>‚Üí</span>
            </button>
          ) : (
            <button
              onClick={nextTask}
              className="px-6 py-3 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-lg hover:from-green-600 hover:to-green-700 transition-all duration-200 flex items-center space-x-2 shadow-lg"
            >
              <span>üéâ</span>
              <span>–ó–∞–≤–µ—Ä—à–∏—Ç—å</span>
            </button>
          )}
        </div>
      </div>

      {/* –ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ */}
      {isCompleted && (
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50"
        >
          <motion.div
            initial={{ scale: 0.5, opacity: 0 }}
            animate={{ scale: 1, opacity: 1 }}
            className="bg-white rounded-2xl p-8 max-w-md mx-4 text-center shadow-2xl"
          >
            <div className="text-6xl mb-4 animate-bounce">üéâ</div>
            <h2 className="text-2xl font-bold text-gray-800 mb-4">
              –û—Ç–ª–∏—á–Ω–æ!
            </h2>
            <p className="text-gray-600 mb-6">
              –í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ –≤—Å–µ –∑–∞–¥–∞—á–∏ –ø–æ —É—Ä–æ–∫—É "{selectedLesson.title}"!
            </p>
            <div className="space-y-3">
              <button
                onClick={generateNewTasks}
                disabled={isGenerating}
                className={`w-full px-6 py-3 rounded-lg transition-all duration-200 ${
                  isGenerating
                    ? 'bg-gray-400 text-gray-200 cursor-not-allowed'
                    : 'bg-gradient-to-r from-blue-500 to-blue-600 text-white hover:from-blue-600 hover:to-blue-700'
                }`}
              >
                {isGenerating ? '‚è≥ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è...' : 'üîÑ –ù–æ–≤—ã–µ –∑–∞–¥–∞—á–∏'}
              </button>
              <button
                onClick={resetToLessonSelection}
                className="w-full px-6 py-3 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors"
              >
                –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π —É—Ä–æ–∫
              </button>
            </div>
          </motion.div>
        </motion.div>
      )}
    </motion.div>
  );
}

export default Practice; 