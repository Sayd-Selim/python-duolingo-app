import React, { useState, useEffect, useCallback, useMemo } from "react";
import { motion } from "framer-motion";
import { Link, useNavigate } from "react-router-dom";
import { useLessonProgress } from "../../hooks/useLessonProgress";
import CodeHighlight from "../../components/CodeHighlight";
import WarningHighlight from "../../components/WarningHighlight";
import ReminderBlock from "../../components/ReminderBlock";

function ExpressLesson1() {
  const [showHint, setShowHint] = useState(false);
  const [showAnswer, setShowAnswer] = useState(false);
  const [userAnswer, setUserAnswer] = useState("");
  const [additionalTaskAnswers, setAdditionalTaskAnswers] = useState({});
  const [additionalTaskHints, setAdditionalTaskHints] = useState({});
  const [additionalTaskAttempts, setAdditionalTaskAttempts] = useState({});
  const [additionalTaskShowAnswer, setAdditionalTaskShowAnswer] = useState({});
  const [isCorrect, setIsCorrect] = useState(null);
  const [lessonCompleted, setLessonCompleted] = useState(false);
  const [showCongratulations, setShowCongratulations] = useState(false);
  const [isLessonPassed, setIsLessonPassed] = useState(false);
  const [activeCodeTab, setActiveCodeTab] = useState("MyExpress.js");
  const navigate = useNavigate();
  // –ó–ê–ö–û–ú–ú–ï–ù–¢–ò–†–û–í–ê–ù–û: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  // const { user } = useAuth();

  // –°–æ–∑–¥–∞–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const user = { userId: "demo_user_123" };

  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å localStorage
  const saveLessonProgress = (lessonId) => {
    try {
      const completedLessons = JSON.parse(localStorage.getItem("completedLessons") || "[]");
      if (!completedLessons.includes(lessonId)) {
        completedLessons.push(lessonId);
        localStorage.setItem("completedLessons", JSON.stringify(completedLessons));
      }
      console.log("–£—Ä–æ–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ localStorage:", lessonId);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ localStorage:", error);
    }
  };

  const checkLessonProgress = (lessonId) => {
    try {
      const completedLessons = JSON.parse(localStorage.getItem("completedLessons") || "[]");
      return completedLessons.includes(lessonId);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ localStorage:", error);
      return false;
    }
  };

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π —Ö—É–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
  const { currentStep, lessonProgress, updateCurrentStep, saveStepAnswer, getStepAnswer, isLessonCompleted, completeLesson, clearLessonProgress } =
    useLessonProgress(3); // –ù–æ–≤—ã–π id —É—Ä–æ–∫–∞

  // –û—Ç–ª–∞–¥–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π isCorrect (–ø–µ—Ä–µ–º–µ—â–µ–Ω–æ –ø–æ—Å–ª–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è currentStep)
  useEffect(() => {
    console.log("=== isCorrect –ò–ó–ú–ï–ù–ò–õ–°–Ø ===");
    console.log("–ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ isCorrect:", isCorrect);
    console.log("–¢–µ–∫—É—â–∏–π —à–∞–≥:", currentStep);
    console.log("userAnswer:", userAnswer);
  }, [isCorrect, currentStep, userAnswer]);

  // –û—Ç–ª–∞–¥–∫–∞ –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–æ–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  console.log("=== –ö–û–ú–ü–û–ù–ï–ù–¢ –ü–ï–†–ï–†–ï–ù–î–ï–†–ï–ù ===");
  console.log("currentStep:", currentStep);
  console.log("userAnswer:", userAnswer);
  console.log("isCorrect:", isCorrect);

  // –ú–µ–º–æ–∏–∑–∏—Ä—É–µ–º —à–∞–≥–∏ —É—Ä–æ–∫–∞
  const steps = useMemo(
    () => [
      {
        type: "intro",
        title: "–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç Express.js –∏–∑–Ω—É—Ç—Ä–∏? –°—Ç—Ä–æ–∏–º —Å–≤–æ–π —Å–µ—Ä–≤–µ—Ä —Å –Ω—É–ª—è! üß±",
        content:
          "Express.js –Ω–µ –º–∞–≥–∏—è ‚Äî —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –æ–±—ë—Ä—Ç–∫–∞ –Ω–∞–¥ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º HTTP-—Å–µ—Ä–≤–µ—Ä–æ–º Node.js. –ß—Ç–æ–±—ã –ø–æ–Ω–∏–º–∞—Ç—å Express ¬´–Ω–∞ —Ç—ã¬ª, –Ω—É–∂–Ω–æ –Ω–∞—á–∞—Ç—å —Å —Å–∞–º–æ–≥–æ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞ ‚Äî —Å –æ–±—ã—á–Ω–æ–≥–æ http.createServer().\n\n–°–µ–≥–æ–¥–Ω—è –º—ã –∑–∞–≥–ª—è–Ω–µ–º –≤–Ω—É—Ç—Ä—å –∏ —Å–æ–∑–¥–∞–¥–∏–º HTTP-—Å–µ—Ä–≤–µ—Ä —Å –Ω—É–ª—è, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç Express.js –∏–∑–Ω—É—Ç—Ä–∏.\n\nüè£ –ú–µ—Ç–∞—Ñ–æ—Ä–∞: Express.js ‚Äî —ç—Ç–æ –∫–∞–∫ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø–æ—á—Ç–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä —Å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–µ–π. –ù–æ –µ—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–Ω—è—Ç—å, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ—á—Ç–∞ ‚Äî –Ω—É–∂–Ω–æ –Ω–∞—á–∞—Ç—å —Å –ø—Ä–æ—Å—Ç–æ–≥–æ –ø–æ—á—Ç–æ–≤–æ–≥–æ –æ—Ç–¥–µ–ª–µ–Ω–∏—è. –°–µ–≥–æ–¥–Ω—è –º—ã ‚Äî –∫–∞–∫ –ø–æ—á—Ç–∞–ª—å–æ–Ω—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å–∞–º–∏ —Å–æ—Ä—Ç–∏—Ä—É—é—Ç –ø–∏—Å—å–º–∞ –∏ –¥–æ—Å—Ç–∞–≤–ª—è—é—Ç –∏—Ö.\n\nüéØ –¶–µ–ª—å: –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Å—Ç–æ–π HTTP-—Å–µ—Ä–≤–µ—Ä –≤—Ä—É—á–Ω—É—é –∏ –ø–æ–Ω—è—Ç—å, –∫–∞–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –∑–∞–ø—Ä–æ—Å—ã.",

        motivation: "–ü–æ–Ω–∏–º–∞–Ω–∏–µ –æ—Å–Ω–æ–≤ HTTP-—Å–µ—Ä–≤–µ—Ä–æ–≤ ‚Äî —ç—Ç–æ –∫–ª—é—á –∫ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤—É –≤ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!",
      },

      {
        type: "theory",
        title: "–ß—Ç–æ —Ç–∞–∫–æ–µ HTTP-—Å–µ—Ä–≤–µ—Ä –∏ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç Express.js?",
        content:
          "HTTP-—Å–µ—Ä–≤–µ—Ä ‚Äî —ç—Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞, –∫–æ—Ç–æ—Ä–∞—è:\n1. –°–ª—É—à–∞–µ—Ç –≤—Ö–æ–¥—è—â–∏–µ HTTP-–∑–∞–ø—Ä–æ—Å—ã –æ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ (–±—Ä–∞—É–∑–µ—Ä–æ–≤)\n2. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —ç—Ç–∏ –∑–∞–ø—Ä–æ—Å—ã\n3. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç HTTP-–æ—Ç–≤–µ—Ç—ã –æ–±—Ä–∞—Ç–Ω–æ\n\nExpress.js ‚Äî —ç—Ç–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫, –∫–æ—Ç–æ—Ä—ã–π —É–ø—Ä–æ—â–∞–µ—Ç —Ä–∞–±–æ—Ç—É —Å HTTP-—Å–µ—Ä–≤–µ—Ä–æ–º, –¥–æ–±–∞–≤–ª—è—è —É–¥–æ–±–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–≤–µ—Ä—Ö –±–∞–∑–æ–≤–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ Node.js.",
        metaphor: [
          "üè£ –ú–µ—Ç–∞—Ñ–æ—Ä–∞:",
          "HTTP-—Å–µ—Ä–≤–µ—Ä ‚Äî —ç—Ç–æ –∫–∞–∫ –ø–æ—á—Ç–æ–≤–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ, –∞ Express.js ‚Äî —ç—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø–æ—á—Ç–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä —Å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–µ–π.",
          "–ü—Ä–µ–¥—Å—Ç–∞–≤—å –ø–æ—á—Ç–æ–≤–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ: –∫–ª–∏–µ–Ω—Ç—ã –ø—Ä–∏–Ω–æ—Å—è—Ç –ø–∏—Å—å–º–∞ (HTTP-–∑–∞–ø—Ä–æ—Å—ã), —Ä–∞–±–æ—Ç–Ω–∏–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –∏—Ö –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç –æ—Ç–≤–µ—Ç—ã. Express.js ‚Äî —ç—Ç–æ —Ç–æ –∂–µ –ø–æ—á—Ç–æ–≤–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ, –Ω–æ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤—â–∏–∫–∞–º–∏, –∫–æ–Ω–≤–µ–π–µ—Ä–∞–º–∏ –∏ –≥–æ—Ç–æ–≤—ã–º–∏ —à–∞–±–ª–æ–Ω–∞–º–∏ –æ—Ç–≤–µ—Ç–æ–≤.",
          "–ë–µ–∑ Express.js —Ç—ã —Å–∞–º –ø–∏—à–µ—à—å –≤—Å–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤. –° Express.js —É —Ç–µ–±—è –µ—Å—Ç—å –≥–æ—Ç–æ–≤—ã–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã!",
        ],
        code: `// –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º Express.js:

        // 1. Express.js —Å–æ–∑–¥–∞—ë—Ç HTTP-—Å–µ—Ä–≤–µ—Ä
        const http = require('http');
        const server = http.createServer((req, res) => {
          // 2. Express.js –¥–æ–±–∞–≤–ª—è–µ—Ç middleware –∏ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—é
          // 3. Express.js –ø–∞—Ä—Å–∏—Ç URL –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –º–∞—Ä—à—Ä—É—Ç
          // 4. Express.js –≤—ã–∑—ã–≤–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
          // 5. Express.js –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç
        });

        // 6. Express.js –∑–∞–ø—É—Å–∫–∞–µ—Ç —Å–µ—Ä–≤–µ—Ä
        server.listen(3000);

        // –í—Å—ë —ç—Ç–æ Express.js –¥–µ–ª–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!`,
        explanation:
          "Express.js ‚Äî —ç—Ç–æ –Ω–µ –º–∞–≥–∏—è, –∞ –ø—Ä–æ—Å—Ç–æ —É–¥–æ–±–Ω–∞—è –æ–±—ë—Ä—Ç–∫–∞ –Ω–∞–¥ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º –º–æ–¥—É–ª–µ–º http Node.js.\n\n–ö–æ–≥–¥–∞ —Ç—ã –ø–∏—à–µ—à—å app.get('/', ...), Express.js –≤–Ω—É—Ç—Ä–∏ —Å–æ–∑–¥–∞—ë—Ç HTTP-—Å–µ—Ä–≤–µ—Ä –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –ª–æ–≥–∏–∫—É –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏.\n\n–ö–æ–≥–¥–∞ —Ç—ã –ø–∏—à–µ—à—å res.send(), Express.js –≤–Ω—É—Ç—Ä–∏ –≤—ã–∑—ã–≤–∞–µ—Ç res.writeHead() –∏ res.end().\n\n–ü–æ–Ω–∏–º–∞—è –æ—Å–Ω–æ–≤—ã, —Ç—ã —Å–º–æ–∂–µ—à—å –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ Express.js!",
        examples: [
          "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç Express.js –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º?:",
          "–°–æ–∑–¥–∞–Ω–∏–µ HTTP-—Å–µ—Ä–≤–µ—Ä–∞:",
          "Express.js –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—ë—Ç HTTP-—Å–µ—Ä–≤–µ—Ä —Å –ø–æ–º–æ—â—å—é http.createServer().",
          `// Express.js –¥–µ–ª–∞–µ—Ç —ç—Ç–æ –∑–∞ —Ç–µ–±—è:
        const http = require('http');
        const server = http.createServer((req, res) => {
          // –õ–æ–≥–∏–∫–∞ Express.js
        });`,
          "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç app.get() –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º?:",
          "–ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤:",
          "Express.js –ø–∞—Ä—Å–∏—Ç URL –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∫–∞–∫–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–∑–≤–∞—Ç—å.",
          `// Express.js –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç —ç—Ç–æ:
        app.get('/users', (req, res) => {
          res.json(users);
        });

        // –í —ç—Ç–æ:
        if (req.url === '/users' && req.method === 'GET') {
          res.writeHead(200, { 'Content-Type': 'application/json' });
          res.end(JSON.stringify(users));
        }`,
          "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç res.send() –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º?:",
          "–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤:",
          "Express.js –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç.",
          `// Express.js –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç —ç—Ç–æ:
        res.send('Hello World');

        // –í —ç—Ç–æ:
        res.writeHead(200, { 'Content-Type': 'text/html' });
        res.end('Hello World');`,
          "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç middleware –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º?:",
          "–ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞:",
          "Express.js –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ middleware –ø–µ—Ä–µ–¥ –æ—Å–Ω–æ–≤–Ω—ã–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–º.",
          `// Express.js –¥–µ–ª–∞–µ—Ç —ç—Ç–æ:
        app.use((req, res, next) => {
          console.log('Request:', req.method, req.url);
          next();
        });

        // –ü–æ–¥ –∫–∞–ø–æ—Ç–æ–º —ç—Ç–æ –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:
        const middlewares = [logger, auth, cors];
        let currentMiddleware = 0;

        function processMiddleware() {
          if (currentMiddleware < middlewares.length) {
            middlewares[currentMiddleware++](req, res, processMiddleware);
          } else {
            // –í—ã–ø–æ–ª–Ω–∏—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
          }
        }`,
          "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç app.listen() –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º?:",
          "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞:",
          "Express.js –∑–∞–ø—É—Å–∫–∞–µ—Ç HTTP-—Å–µ—Ä–≤–µ—Ä –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–º –ø–æ—Ä—Ç—É.",
          `// Express.js –¥–µ–ª–∞–µ—Ç —ç—Ç–æ:
        app.listen(3000, () => {
          console.log('Server running on port 3000');
        });

        // –ü–æ–¥ –∫–∞–ø–æ—Ç–æ–º:
        server.listen(3000, () => {
          console.log('Server running on port 3000');
        });`,
          "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –ø–∞—Ä—Å–∏–Ω–≥ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º?:",
          "–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö:",
          "Express.js –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–∞—Ä—Å–∏—Ç JSON –∏ form-–¥–∞–Ω–Ω—ã–µ.",
          `// Express.js –¥–µ–ª–∞–µ—Ç —ç—Ç–æ:
        app.use(express.json());

        // –ü–æ–¥ –∫–∞–ø–æ—Ç–æ–º:
        req.on('data', chunk => {
          body += chunk.toString();
        });
        req.on('end', () => {
          req.body = JSON.parse(body);
        });`,
          "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º?:",
          "–¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫:",
          "Express.js –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —É–¥–æ–±–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫.",
          `// Express.js –¥–µ–ª–∞–µ—Ç —ç—Ç–æ:
        app.use((err, req, res, next) => {
          console.error(err.stack);
          res.status(500).send('Something broke!');
        });

        // –ü–æ–¥ –∫–∞–ø–æ—Ç–æ–º —ç—Ç–æ try-catch –±–ª–æ–∫–∏ –≤–æ–∫—Ä—É–≥ –∫–∞–∂–¥–æ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞`,
        ],
        exampleAnalysis: {
          title: "–†–∞–∑–±–æ—Ä –ø—Ä–∏–º–µ—Ä–∞: Express.js vs –ù–∞—Ç–∏–≤–Ω—ã–π HTTP-—Å–µ—Ä–≤–µ—Ä",
          content: `üîç –°—Ä–∞–≤–Ω–∏–º, –∫–∞–∫ Express.js —É–ø—Ä–æ—â–∞–µ—Ç —Ä–∞–±–æ—Ç—É:\n\nExpress.js (–ø—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–±):\n\nconst express = require('express');\nconst app = express();\n\napp.use(express.json());\n\napp.get('/users', (req, res) => {\n  res.json(users);\n});\n\napp.post('/users', (req, res) => {\n  const newUser = req.body;\n  users.push(newUser);\n  res.status(201).json(newUser);\n});\n\napp.listen(3000);\n\n–ù–∞—Ç–∏–≤–Ω—ã–π HTTP-—Å–µ—Ä–≤–µ—Ä (—Ç–æ –∂–µ —Å–∞–º–æ–µ, –Ω–æ —Å–ª–æ–∂–Ω–µ–µ):\n\nconst http = require('http');\n\nconst server = http.createServer((req, res) => {\n  // –ü–∞—Ä—Å–∏–Ω–≥ URL\n  const url = new URL(req.url, 'http://localhost');\n  const path = url.pathname;\n  \n  // –ü–∞—Ä—Å–∏–Ω–≥ JSON —Ç–µ–ª–∞\n  if (req.method === 'POST') {\n    let body = '';\n    req.on('data', chunk => body += chunk);\n    req.on('end', () => {\n      try {\n        const newUser = JSON.parse(body);\n        users.push(newUser);\n        res.writeHead(201, { 'Content-Type': 'application/json' });
                res.end(JSON.stringify(newUser));\n      } catch (err) {\n        res.writeHead(400);\n        res.end('Invalid JSON');\n      }\n    });\n  } else if (req.method === 'GET' && path === '/users') {\n    res.writeHead(200, { 'Content-Type': 'application/json' });
                res.end(JSON.stringify(users));\n  } else {\n    res.writeHead(404);\n    res.end('Not found');\n  }\n});\n\nserver.listen(3000);\n\nüîç –í–∏–¥–∏—à—å —Ä–∞–∑–Ω–∏—Ü—É? Express.js –¥–µ–ª–∞–µ—Ç —Ç–æ –∂–µ —Å–∞–º–æ–µ, –Ω–æ –∫–æ–¥ –Ω–∞–º–Ω–æ–≥–æ —á–∏—â–µ –∏ –ø–æ–Ω—è—Ç–Ω–µ–µ!`,
        },
        motivation: "–ü–æ–Ω–∏–º–∞—è –æ—Å–Ω–æ–≤—ã HTTP-—Å–µ—Ä–≤–µ—Ä–æ–≤, —Ç—ã —Å–º–æ–∂–µ—à—å –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ Express.js –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è!",
      },

      {
        type: "code",
        title: "–ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å HTTP ‚Äî –Ω–∞–Ω–∏–º–∞–µ–º –ø–æ—á—Ç–æ–≤—É—é —Å–ª—É–∂–±—É üì¶",
        content:
          "–û—Ç–∫—Ä–æ–π—Ç–µ –≤–∞—à —Ä–µ–¥–∞–∫—Ç–æ—Ä –∫–æ–¥–∞ –∏ —Å–æ–∑–¥–∞–π—Ç–µ –ø–∞–ø–∫—É <CodeHighlight>MyExpress</CodeHighlight> –∏ —Ç–∞–º —Ñ–∞–π–ª <CodeHighlight>MyExpress.js</CodeHighlight> .\n\n" +
          "–í –Ω–∞—á–∞–ª–µ —Ñ–∞–π–ª–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –º–æ–¥—É–ª—å <CodeHighlight>HTTP</CodeHighlight>  –∏–∑ Node.js:\n\n" +
          "–≠—Ç–æ—Ç –º–æ–¥—É–ª—å –Ω—É–∂–µ–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è HTTP-—Å–µ—Ä–≤–µ—Ä–∞ ‚Äî –ø—Ä–æ–≥—Ä–∞–º–º—ã, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –æ—Ç–≤–µ—Ç—ã.\n\n" +
          "üí°<CodeHighlight>Express.js</CodeHighlight> –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —ç—Ç–æ—Ç –º–æ–¥—É–ª—å –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º, –ø–æ—ç—Ç–æ–º—É –º—ã –Ω–∞—á–Ω—ë–º –∏–º–µ–Ω–Ω–æ —Å –Ω–µ–≥–æ.",
        code: `const http = require('http');`,
        metaphor: [
          "üè£ –ú–µ—Ç–∞—Ñ–æ—Ä–∞:",
          " <CodeHighlight>http</CodeHighlight> ‚Äî —ç—Ç–æ –∫–∞–∫ –∞—Ä–µ–Ω–¥–∞ –∑–¥–∞–Ω–∏—è ‚Äî –±—É–¥—É—â–µ–≥–æ –ø–æ—á—Ç–æ–≤–æ–≥–æ –æ—Ñ–∏—Å–∞, –ø–æ–∫–∞ –±–µ–∑ –æ—Ç–¥–µ–ª–µ–Ω–∏–π –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.",
          "–≠—Ç–æ –∑–¥–∞–Ω–∏–µ —É–º–µ–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ø–∏—Å—å–º–∞ (HTTP-–∑–∞–ø—Ä–æ—Å—ã) –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –æ—Ç–≤–µ—Ç—ã –æ–±—Ä–∞—Ç–Ω–æ.",
          "–ö–æ–≥–¥–∞ –º—ã –ø–∏—à–µ–º <CodeHighlight>require('http')</CodeHighlight>, —ç—Ç–æ —Å–ª–æ–≤–Ω–æ –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ–º –¥–æ–≥–æ–≤–æ—Ä —Å –ø–æ—á—Ç–æ–≤–æ–π —Å–ª—É–∂–±–æ–π ‚Äî —Ç–µ–ø–µ—Ä—å –º—ã –º–æ–∂–µ–º –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø–∏—Å—å–º–∞ —á–µ—Ä–µ–∑ –∏—Ö –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É.",
        ],
        explanation:
          "require('http') –ø–æ–¥–∫–ª—é—á–∞–µ—Ç –º–æ–¥—É–ª—å, –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –≤ Node.js.\n–° –ø–æ–º–æ—â—å—é –Ω–µ–≥–æ –º—ã —Å–º–æ–∂–µ–º —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π —Å–µ—Ä–≤–µ—Ä –≤—Ä—É—á–Ω—É—é ‚Äî –∫–∞–∫ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç Express –≤–Ω—É—Ç—Ä–∏ —Å–µ–±—è.",
        motivation:
          "–¢—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –ø–æ–¥–∫–ª—é—á–∏–ª –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π –±–ª–æ–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–æ–≤. –ë–µ–∑ –Ω–µ–≥–æ –Ω–µ –±—É–¥–µ—Ç –Ω–∏ Express, –Ω–∏ —Ç–≤–æ–µ–≥–æ –±—É–¥—É—â–µ–≥–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞!",
      },

      {
        type: "code",
        title: "–°–æ–∑–¥–∞—ë–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤ ‚Äî –ø–∞–ø–∫—É —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –¥–ª—è GET-–∑–∞–ø—Ä–æ—Å–æ–≤ üìÇ",
        content:
          "–í —Ñ–∞–π–ª–µ <CodeHighlight>MyExpress.js</CodeHighlight>  —Å–æ–∑–¥–∞—ë–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é <CodeHighlight>routes</CodeHighlight> , —á—Ç–æ–±—ã —Ö—Ä–∞–Ω–∏—Ç—å –≤—Å–µ –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è  <CodeHighlight>GET</CodeHighlight>-–∑–∞–ø—Ä–æ—Å–æ–≤:\n\n" +
          "–≠—Ç–æ –æ–±—ä–µ–∫—Ç, –≥–¥–µ –∫–ª—é—á ‚Äî –ø—É—Ç—å (URL), –∞ –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç –∑–∞–ø—Ä–æ—Å.\n\n" +
          "üí° –ú–µ—Ç–∞—Ñ–æ—Ä–∞: –ø—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —ç—Ç–æ –Ω–∞—à–∞ –ø–∞–ø–∫–∞ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏. –ö–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç –ø–∏—Å—å–º–æ (GET-–∑–∞–ø—Ä–æ—Å) –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∞–¥—Ä–µ—Å (–ø—É—Ç—å), –º—ã —Å–º–æ—Ç—Ä–∏–º –≤ —ç—Ç—É –ø–∞–ø–∫—É, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —Å –Ω–∏–º –¥–µ–ª–∞—Ç—å.",
        code: `const http = require('http');

        const routes = {
            GET: {}
        }; `,
        metaphor: [
          "üìÇ –ú–µ—Ç–∞—Ñ–æ—Ä–∞:",
          "<CodeHighlight>routes</CodeHighlight> ‚Äî —ç—Ç–æ –∫–∞–∫ –ø–∞–ø–∫–∞ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –¥–ª—è –ø–æ—á—Ç–æ–≤—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.",
          "–í –Ω–µ–π —Ö—Ä–∞–Ω—è—Ç—Å—è –ø—Ä–∞–≤–∏–ª–∞: –µ—Å–ª–∏ –ø–∏—Å—å–º–æ –ø—Ä–∏—à–ª–æ –æ–±—ã—á–Ω—ã–º –ø–∏—Å—å–º–æ–º (GET) –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π –∞–¥—Ä–µ—Å (URL), —Ç–æ –∫–∞–∫ –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å.",
          "–ö–∞–∂–¥—ã–π –∞–¥—Ä–µ—Å ‚Äî —ç—Ç–æ –æ—Ç–¥–µ–ª—å–Ω–æ–µ –¥–µ–ª–æ, –∏ –¥–ª—è –Ω–µ–≥–æ –µ—Å—Ç—å —Å–≤–æ—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è ‚Äî —Ñ—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫.",
        ],
        motivation: "–¢–µ–ø–µ—Ä—å —É –Ω–∞—Å –µ—Å—Ç—å –±–∞–∑–∞ ‚Äî –º–µ—Å—Ç–æ, –≥–¥–µ –º—ã –±—É–¥–µ–º —Ö—Ä–∞–Ω–∏—Ç—å –≤—Å–µ –º–∞—Ä—à—Ä—É—Ç—ã. –≠—Ç–æ –æ—Å–Ω–æ–≤–∞ –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞!",
        whatWeLearned: [
          "‚úÖ –ß—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:",
          "- üè¢  <CodeHighlight>http</CodeHighlight> ‚Äî –º—ã –∞—Ä–µ–Ω–¥–æ–≤–∞–ª–∏ –∑–¥–∞–Ω–∏–µ –∏ –º–æ–∂–µ–º –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ø–∏—Å—å–º–∞ (–∑–∞–ø—Ä–æ—Å—ã).",
          "- üìÇ <CodeHighlight>routes</CodeHighlight>  ‚Äî —É –Ω–∞—Å –ø–æ—è–≤–∏–ª–∞—Å—å –ø–∞–ø–∫–∞ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏, –∫—É–¥–∞ –º—ã –±—É–¥–µ–º —Å–∫–ª–∞–¥—ã–≤–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–∏—Å–µ–º.",
        ],
        whatNext: ["üßë‚Äçüíº –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –ø–æ—Ä–∞ –Ω–∞–Ω–∏–º–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ ‚Äî –¥–æ–±–∞–≤–∏–º —Ñ—É–Ω–∫—Ü–∏—é `get(path, handler)` –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤!"],
      },

      {
        type: "code",
        title: "–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –º–∞—Ä—à—Ä—É—Ç—ã: –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –ø–∏—Å—å–º–∞ üì¨",
        content:
          "–¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º —Ñ—É–Ω–∫—Ü–∏—é <CodeHighlight>get(path, handler)</CodeHighlight>, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –º–∞—Ä—à—Ä—É—Ç –≤ –Ω–∞—à –æ–±—ä–µ–∫—Ç <CodeHighlight>routes</CodeHighlight>.\n\n" +
          "–ö–æ–≥–¥–∞ –º—ã –∑–∞—Ö–æ—Ç–∏–º –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å, –Ω–∞–ø—Ä–∏–º–µ—Ä, <CodeHighlight>GET</CodeHighlight>-–∑–∞–ø—Ä–æ—Å –Ω–∞ <CodeHighlight>/</CodeHighlight>, –º—ã –≤—ã–∑–æ–≤–µ–º:\n\n" +
          "<CodeHighlight>get('/', handler)</CodeHighlight> ‚Äî —ç—Ç–æ –∫–∞–∫ –¥–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: –µ—Å–ª–∏ –ø—Ä–∏–¥—ë—Ç –ø–∏—Å—å–º–æ –Ω–∞ <CodeHighlight>/</CodeHighlight>, –æ–±—Ä–∞–±–æ—Ç–∞–π –µ–≥–æ –≤–æ—Ç —Ç–∞–∫.\n\n" +
          "üìå –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–æ–≥–∏—á–Ω–∞ <CodeHighlight>app.get()</CodeHighlight> –≤ Express.js.",
        code: `const http = require('http');

        const routes = {
            GET: {}
        };

        function get(path, handler) {
            routes.GET[path] = handler;
        }`,
        metaphor: [
          "üë®‚Äçüíº –ú–µ—Ç–∞—Ñ–æ—Ä–∞:",
          "<CodeHighlight>get()</CodeHighlight> ‚Äî —ç—Ç–æ –∫–∞–∫ –µ—Å–ª–∏ –±—ã –º—ã –Ω–∞–Ω–∏–º–∞–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –∏ –≥–æ–≤–æ—Ä–∏–ª–∏ –µ–º—É:",
          "¬´–ï—Å–ª–∏ –ø—Ä–∏–¥—ë—Ç –ø–∏—Å—å–º–æ (GET-–∑–∞–ø—Ä–æ—Å) –Ω–∞ —Ç–∞–∫–æ–π-—Ç–æ –∞–¥—Ä–µ—Å <CodeHighlight>path</CodeHighlight>, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–π –µ–≥–æ –≤–æ—Ç —Ç–∞–∫ <CodeHighlight>handler</CodeHighlight>¬ª.",
          "–ö–∞–∂–¥—ã–π —Ç–∞–∫–æ–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –∑–Ω–∞–µ—Ç, –Ω–∞ –∫–∞–∫–æ–µ –ø–∏—Å—å–º–æ –æ–Ω –¥–æ–ª–∂–µ–Ω —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å, –∏ —á—Ç–æ —Å –Ω–∏–º –¥–µ–ª–∞—Ç—å.",
        ],
        motivation: "–¢–µ–ø–µ—Ä—å —É –Ω–∞—Å –µ—Å—Ç—å –º–µ—Ö–∞–Ω–∏–∑–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤! –≠—Ç–æ –∫–∞–∫ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –ø–∏—Å—å–º–∞–º–∏: –∫—Ç–æ –∑–∞ —á—Ç–æ –æ—Ç–≤–µ—á–∞–µ—Ç.",
        whatWeLearned: [
          "üß± –ß—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:",
          "- üè¢ <CodeHighlight>http</CodeHighlight> ‚Äî –º—ã –∞—Ä–µ–Ω–¥–æ–≤–∞–ª–∏ –∑–¥–∞–Ω–∏–µ –∏ –≥–æ—Ç–æ–≤—ã –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ø–∏—Å—å–º–∞.",
          "- üìÇ <CodeHighlight>routes</CodeHighlight> ‚Äî —É –Ω–∞—Å –µ—Å—Ç—å –ø–∞–ø–∫–∞ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –ø–æ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–∏—Å–µ–º.",
          "- üë®‚Äçüíº <CodeHighlight>get(path, handler)</CodeHighlight> ‚Äî –º—ã –Ω–∞—á–∞–ª–∏ –Ω–∞–Ω–∏–º–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –∑–Ω–∞—é—Ç, –∫–∞–∫ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –ø–∏—Å—å–º–∞ –ø–æ –∞–¥—Ä–µ—Å—É.",
        ],
        whatNext: ["üì® –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –¥–∞–≤–∞–π—Ç–µ –ø–æ—Å—Ç—Ä–æ–∏–º –º–µ—Ö–∞–Ω–∏–∑–º, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ø–∏—Å—å–º–∞ (–∑–∞–ø—Ä–æ—Å—ã) –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∏—Ö –Ω—É–∂–Ω–æ–º—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É (–æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É)!"],
      },

      {
        type: "code",
        title: "–°–æ–∑–¥–∞—ë–º —Å–µ—Ä–≤–µ—Ä ‚Äî –Ω–∞—à –ø—Ä–∏—ë–º–Ω—ã–π —Å—Ç–æ–ª –≤ –ø–æ—á—Ç–æ–≤–æ–º –æ—Ñ–∏—Å–µ üè§",
        content:
          "–¢–µ–ø–µ—Ä—å —Å–æ–∑–¥–∞–¥–∏–º —Å–∞–º —Å–µ—Ä–≤–µ—Ä —Å –ø–æ–º–æ—â—å—é <CodeHighlight>http.createServer()</CodeHighlight> ‚Äî —ç—Ç–æ –æ—Å–Ω–æ–≤–∞, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –º—ã –ø–æ—Å—Ç—Ä–æ–∏–º –≤—Å—é –Ω–∞—à—É –ª–æ–≥–∏–∫—É.\n\n" +
          "–°–µ–π—á–∞—Å –º—ã –ø–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ —Å—Ç–∞–≤–∏–º –ø—Ä–∏—ë–º–Ω—ã–π —Å—Ç–æ–ª, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤—Å–µ –ø–∏—Å—å–º–∞ (HTTP-–∑–∞–ø—Ä–æ—Å—ã), –Ω–æ –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞–µ–º, —á—Ç–æ —Å –Ω–∏–º–∏ –¥–µ–ª–∞—Ç—å.\n\n" +
          "–î–∞–≤–∞–π—Ç–µ —Ç–∞–∫–∂–µ —Ä–∞–∑–±–µ—Ä—ë–º—Å—è —Å –¥–≤—É–º—è –≤–∞–∂–Ω—ã–º–∏ –ø–æ–º–æ—â–Ω–∏–∫–∞–º–∏:\n\n" +
          "- <CodeHighlight>req</CodeHighlight> ‚Äî –æ–±—ä–µ–∫—Ç –∑–∞–ø—Ä–æ—Å–∞, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Ö–æ–¥—è—â–µ–º HTTP-–∑–∞–ø—Ä–æ—Å–µ: –æ—Ç–∫—É–¥–∞ –æ–Ω –ø—Ä–∏—à—ë–ª, –∫–∞–∫–æ–π —É –Ω–µ–≥–æ –∞–¥—Ä–µ—Å (URL), –º–µ—Ç–æ–¥ –∏ —Ç–µ–ª–æ.\n" +
          "- <CodeHighlight>res</CodeHighlight> ‚Äî –æ–±—ä–µ–∫—Ç –æ—Ç–≤–µ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º, —á—Ç–æ–±—ã —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç –∫–ª–∏–µ–Ω—Ç—É: –∑–∞–¥–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∏, —Å—Ç–∞—Ç—É—Å –∏ —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞.",
        code: `const server = http.createServer((req, res) => {
            // –ü–æ–∫–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
        });`,
        metaphor: [
          "üì¨ –ú–µ—Ç–∞—Ñ–æ—Ä–∞:",
          "<CodeHighlight>server</CodeHighlight> ‚Äî —ç—Ç–æ –∫–∞–∫ –ø—Ä–∏—ë–º–Ω—ã–π —Å—Ç–æ–ª –≤ –ø–æ—á—Ç–æ–≤–æ–º –æ—Ç–¥–µ–ª–µ–Ω–∏–∏, –≥–¥–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤—Å–µ –≤—Ö–æ–¥—è—â–∏–µ –ø–∏—Å—å–º–∞.",
          "<CodeHighlight>req</CodeHighlight> ‚Äî –Ω–∞—à —Å–æ—Ç—Ä—É–¥–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–≤—ã–º –±–µ—Ä—ë—Ç –ø–∏—Å—å–º–æ. –û–Ω –∑–Ω–∞–µ—Ç, –æ—Ç–∫—É–¥–∞ –æ–Ω–æ –ø—Ä–∏—à–ª–æ, –∫–∞–∫–æ–π —É –Ω–µ–≥–æ –∞–¥—Ä–µ—Å –∏ —á—Ç–æ –≤–Ω—É—Ç—Ä–∏.",
          "<CodeHighlight>res</CodeHighlight> ‚Äî –≤—Ç–æ—Ä–æ–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç –∫–ª–∏–µ–Ω—Ç—É. –û–Ω –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –ø–∏—Å—å–º–æ-–æ—Ç–≤–µ—Ç –∏ –∫–ª–∞–¥—ë—Ç –µ–≥–æ –≤ –∏—Å—Ö–æ–¥—è—â—É—é –ø–æ—á—Ç—É.",
          "–°–µ–π—á–∞—Å —É –Ω–∞—Å –µ—Å—Ç—å —Å—Ç–æ–ª –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏, –Ω–æ –ø–æ–∫–∞ –Ω–µ—Ç –ø—Ä–∞–≤–∏–ª: –∫—Ç–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–∞–∫–æ–µ –ø–∏—Å—å–º–æ.",
        ],
        motivation: "–≠—Ç–æ –ø–µ—Ä–≤—ã–π —Ä–µ–∞–ª—å–Ω—ã–π —à–∞–≥ –∫ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–º—É Express.js! –£ –Ω–∞—Å —É–∂–µ –µ—Å—Ç—å –æ—Å–Ω–æ–≤–∞ ‚Äî —Ç–µ–ø–µ—Ä—å –æ—Å—Ç–∞–ª–æ—Å—å –Ω–∞—É—á–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, —á—Ç–æ –¥–µ–ª–∞—Ç—å —Å –ø–∏—Å—å–º–∞–º–∏.",
        whatWeLearned: [
          "‚úÖ –ß—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:",
          "- üè¢ <CodeHighlight>http</CodeHighlight> ‚Äî –∞—Ä–µ–Ω–¥–æ–≤–∞–ª–∏ –∑–¥–∞–Ω–∏–µ.",
          "- üìÇ <CodeHighlight>routes</CodeHighlight> ‚Äî –∑–∞–≤–µ–ª–∏ –ø–∞–ø–∫—É —Å –º–∞—Ä—à—Ä—É—Ç–∞–º–∏.",
          "- üë®‚Äçüíº <CodeHighlight>get(path, handler)</CodeHighlight> ‚Äî –Ω–∞–Ω—è–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤.",
          "- üè§ <CodeHighlight>http.createServer</CodeHighlight> ‚Äî –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –ø—Ä–∏—ë–º–Ω—ã–π —Å—Ç–æ–ª –∏ –Ω–∞–∑–Ω–∞—á–∏–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∏ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –ø–∏—Å—å–º–∞.",
        ],
        whatNext: [
          "üìÆ –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –Ω–∞—É—á–∏–º –Ω–∞—à–µ–≥–æ –ø—Ä–∏—ë–º–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ (HTTP-—Å–µ—Ä–≤–µ—Ä) –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ —Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –∞–¥—Ä–µ—Å –ø–∏—Å—å–º–∞ (URL –∑–∞–ø—Ä–æ—Å–∞) –∏ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –µ–≥–æ —Ç–æ–º—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É (–æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É), –∫—Ç–æ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —ç—Ç–æ—Ç –∞–¥—Ä–µ—Å!",
        ],
      },

      {
        type: "code",
        title: "–ü–µ—Ä–µ–¥–∞—ë–º –ø–∏—Å—å–º–∞ –Ω—É–∂–Ω—ã–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º ‚Äî –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ üì¨‚û°Ô∏èüë®‚Äçüíº",
        content:
          "–¢–µ–ø–µ—Ä—å –Ω–∞—É—á–∏–º –Ω–∞—à —Å–µ—Ä–≤–µ—Ä –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ø–∏—Å—å–º–∞, –∞ —Ä–∞–∑–±–∏—Ä–∞—Ç—å –∏—Ö –∏ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –Ω—É–∂–Ω–æ–º—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É (–æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É).\n\n" +
          "–ö–æ–≥–¥–∞ –∫ –ø—Ä–∏—ë–º–Ω–æ–º—É —Å—Ç–æ–ª—É (—Å–µ—Ä–≤–µ—Ä—É) –ø—Ä–∏—Ö–æ–¥–∏—Ç –ø–∏—Å—å–º–æ (HTTP-–∑–∞–ø—Ä–æ—Å), –Ω–∞—à —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ <CodeHighlight>req</CodeHighlight> –±–µ—Ä—ë—Ç –µ–≥–æ –∏ —Å–º–æ—Ç—Ä–∏—Ç:\n\n" +
          "- üìç <CodeHighlight>req.url</CodeHighlight> ‚Äî –∞–¥—Ä–µ—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è: –∫—É–¥–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–∏—Å—å–º–æ.\n" +
          "- üßæ <CodeHighlight>req.method</CodeHighlight> ‚Äî —Ç–∏–ø –∑–∞–¥–∞—á–∏: —á—Ç–æ –æ—Ç –Ω–∞—Å —Ö–æ—Ç—è—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–æ—Å—Ç–æ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é ‚Äî <CodeHighlight>GET</CodeHighlight>, –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ ‚Äî <CodeHighlight>POST</CodeHighlight>).\n\n" +
          "–° —ç—Ç–∏–º –º–µ—Ç–æ–¥–æ–º –∏ –∞–¥—Ä–µ—Å–æ–º –º—ã –∏—â–µ–º –Ω—É–∂–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –≤ –ø–∞–ø–∫–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤ <CodeHighlight>routes</CodeHighlight>. –ï—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å ‚Äî –ø–µ—Ä–µ–¥–∞—ë–º –ø–∏—Å—å–º–æ –Ω—É–∂–Ω–æ–º—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É. –ï—Å–ª–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –Ω–µ—Ç ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤–µ–∂–ª–∏–≤—ã–π –æ—Ç–≤–µ—Ç: ¬´404 Not Found¬ª.",
        code: `const http = require('http');

            // —ç—Ç–æ –Ω–∞—à–∞ –ø–∞–ø–∫–∞ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
            const routes = {
              GET: {}
            };

            // –ú—ã –Ω–∞–Ω–∏–º–∞–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –∏ –¥–∞—ë–º –µ–º—É –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é:
            // ¬´–ï—Å–ª–∏ –ø–∏—Å—å–º–æ –ø—Ä–∏—à–ª–æ –Ω–∞ —Ç–∞–∫–æ–π-—Ç–æ –∞–¥—Ä–µ—Å, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–π –µ–≥–æ —Ç–∞–∫¬ª
            function get(path, handler) {
              routes.GET[path] = handler;
            }

            // –°–æ–∑–¥–∞—ë–º —Å–µ—Ä–≤–µ—Ä ‚Äî –ø—Ä–∏—ë–º–Ω—ã–π —Å—Ç–æ–ª
            const server = http.createServer((req, res) => {
              const method = req.method; // –¢–∏–ø –∑–∞–¥–∞—á–∏: GET, POST –∏ —Ç.–¥.
              const url = req.url;       // –ê–¥—Ä–µ—Å –∑–∞–ø—Ä–æ—Å–∞

              // –ò—â–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –≤ –Ω–∞—à–µ–π –ø–∞–ø–∫–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤
              const handler = routes[method] && routes[method][url];

              if (handler) {
                handler(req, res); // –ü–µ—Ä–µ–¥–∞—ë–º –ø–∏—Å—å–º–æ –Ω—É–∂–Ω–æ–º—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É
              } else {
                res.statusCode = 404;
                res.end('Not Found');
              }
            });`,
        metaphor: [
          "üì¨ –ú–µ—Ç–∞—Ñ–æ—Ä–∞:",
          "1. –ü–∏—Å—å–º–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç –∫ –ø—Ä–∏—ë–º–Ω–æ–º—É —Å—Ç–æ–ª—É (—Å–µ—Ä–≤–µ—Ä—É).",
          "2. –°–æ—Ç—Ä—É–¥–Ω–∏–∫ <CodeHighlight>req</CodeHighlight> –≥–æ–≤–æ—Ä–∏—Ç: ¬´–ü–∏—Å—å–º–æ —Å –∑–∞–¥–∞—á–µ–π GET –ø—Ä–∏—à–ª–æ –Ω–∞ –∞–¥—Ä–µ—Å `/`¬ª.",
          "3. –ú—ã –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –≤ –Ω–∞—à–µ–π –ø–∞–ø–∫–µ <CodeHighlight>routes</CodeHighlight> –¥–ª—è —Ç–∞–∫–æ–π –∑–∞–¥–∞—á–∏ –∏ –∞–¥—Ä–µ—Å–∞.",
          "4. –ï—Å–ª–∏ –µ—Å—Ç—å ‚Äî –¥—Ä—É–≥–æ–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏ –æ—Ç–≤–µ—á–∞–µ—Ç (handler).",
          "5. –ï—Å–ª–∏ –Ω–µ—Ç ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–µ–∂–ª–∏–≤—ã–π –æ—Ç–∫–∞–∑: ¬´–ê–¥—Ä–µ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω¬ª (404).",
        ],
        motivation:
          "–¢–µ–ø–µ—Ä—å –Ω–∞—à —Å–µ—Ä–≤–µ—Ä —É–º–µ–µ—Ç –ø–æ–Ω–∏–º–∞—Ç—å, —á—Ç–æ —Ö–æ—á–µ—Ç –∫–ª–∏–µ–Ω—Ç: –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–∞–ø—Ä–æ—Å, –∞ –æ—Å–º—ã—Å–ª–µ–Ω–Ω–æ –ø–µ—Ä–µ–¥–∞—ë—Ç –µ–≥–æ —Ç–µ–º, –∫—Ç–æ –∑–Ω–∞–µ—Ç, –∫–∞–∫ —Å –Ω–∏–º —Ä–∞–±–æ—Ç–∞—Ç—å.",
        whatWeLearned: [
          "‚úÖ –ß—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:",
          "- üè¢ <CodeHighlight>http</CodeHighlight> ‚Äî –∞—Ä–µ–Ω–¥–æ–≤–∞–ª–∏ –∑–¥–∞–Ω–∏–µ –¥–ª—è –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞.",
          "- üìÇ <CodeHighlight>routes</CodeHighlight> ‚Äî —Å–æ–∑–¥–∞–ª–∏ –ø–∞–ø–∫—É —Å –º–∞—Ä—à—Ä—É—Ç–∞–º–∏.",
          "- üë®‚Äçüíº <CodeHighlight>get(path, handler)</CodeHighlight> ‚Äî –Ω–∞–Ω—è–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤.",
          "- üè§ <CodeHighlight>server</CodeHighlight> ‚Äî –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –ø—Ä–∏—ë–º–Ω—ã–π —Å—Ç–æ–ª.",
          "- üì® <CodeHighlight>req.method</CodeHighlight> ‚Äî –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∫–∞–∫—É—é –∑–∞–¥–∞—á—É –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å: –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å, –æ–±–Ω–æ–≤–∏—Ç—å –∏ —Ç.–¥.",
          "- üß≠ <CodeHighlight>req.url</CodeHighlight> ‚Äî —É–∫–∞–∑—ã–≤–∞–µ—Ç, –Ω–∞ –∫–∞–∫–æ–π –∞–¥—Ä–µ—Å –ø—Ä–∏—à–ª–æ –ø–∏—Å—å–º–æ.",
          "- üîÑ –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è ‚Äî –æ–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ (handler) –¥–æ–ª–∂–µ–Ω –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–¥–∞—á—É.",
          "- ‚ùå 404 ‚Äî –µ—Å–ª–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω, –º—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤–µ–∂–ª–∏–≤—ã–π –æ—Ç–∫–∞–∑.",
        ],
        whatNext: ["üö™ –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –Ω–∞–∫–æ–Ω–µ—Ü-—Ç–æ –∑–∞–ø—É—Å—Ç–∏–º —Å–µ—Ä–≤–µ—Ä –∏ –æ—Ç–∫—Ä–æ–µ–º –¥–≤–µ—Ä–∏ –Ω–∞—à–µ–≥–æ –ø–æ—á—Ç–æ–≤–æ–≥–æ –æ—Ç–¥–µ–ª–µ–Ω–∏—è!"],
      },

      {
        type: "code",
        title: "–û—Ç–∫—Ä—ã–≤–∞–µ–º –¥–≤–µ—Ä–∏ ‚Äî –∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø—Ä–∏—ë–º–∞ –ø–∏—Å–µ–º üö™üì®",
        content:
          "–¢–µ–ø–µ—Ä—å, –∫–æ–≥–¥–∞ —É –Ω–∞—Å –µ—Å—Ç—å –∑–¥–∞–Ω–∏–µ, —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, –ø–æ—Ä–∞ –æ—Ç–∫—Ä—ã—Ç—å –¥–≤–µ—Ä–∏ –∏ –Ω–∞—á–∞—Ç—å –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ø–∏—Å—å–º–∞ –æ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤.\n\n" +
          "–ú—ã –∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä —Å –ø–æ–º–æ—â—å—é <CodeHighlight>server.listen(port, callback)</CodeHighlight> ‚Äî —É–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Ä—Ç –∏ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞.\n\n" +
          "–ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä –±—É–¥–µ—Ç —Å–ª—É—à–∞—Ç—å –≤—Ö–æ–¥—è—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã –∏ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∏—Ö –Ω—É–∂–Ω—ã–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º.",
        code: `server.listen(3000, () => {
              console.log('–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000');
          });`,
        metaphor: [
          "üö™ –ú–µ—Ç–∞—Ñ–æ—Ä–∞:",
          "–ú—ã –æ—Ç–∫—Ä—ã–ª–∏ –¥–≤–µ—Ä–∏ –Ω–∞—à–µ–≥–æ –ø–æ—á—Ç–æ–≤–æ–≥–æ –æ—Ç–¥–µ–ª–µ–Ω–∏—è (—Å–µ—Ä–≤–µ—Ä–∞) –Ω–∞ –ø–æ—Ä—Ç—É 3000.",
          "–¢–µ–ø–µ—Ä—å –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–∏ (–∫–ª–∏–µ–Ω—Ç—ã) –º–æ–≥—É—Ç –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –ø–∏—Å—å–º–∞ (HTTP-–∑–∞–ø—Ä–æ—Å—ã), –∏ –Ω–∞—à–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –≥–æ—Ç–æ–≤—ã –∏—Ö –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å.",
        ],
        motivation: "–≠—Ç–æ –≤–∞–∂–Ω—ã–π —à–∞–≥ ‚Äî —Å–µ—Ä–≤–µ—Ä –∑–∞—Ä–∞–±–æ—Ç–∞–ª –∏ –≥–æ—Ç–æ–≤ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã!",
        whatWeLearned: [
          "‚úÖ –ß—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:",
          "- üè¢ <CodeHighlight>http</CodeHighlight> ‚Äî –∑–¥–∞–Ω–∏–µ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞.",
          "- üìÇ <CodeHighlight>routes</CodeHighlight> ‚Äî –ø–∞–ø–∫–∞ —Å –º–∞—Ä—à—Ä—É—Ç–∞–º–∏ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏.",
          "- <CodeHighlight>get(path, handler)</CodeHighlight> ‚Äî —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏.",
          "- üè§ <CodeHighlight>server</CodeHighlight> ‚Äî –ø—Ä–∏—ë–º–Ω—ã–π —Å—Ç–æ–ª.",
          "- <CodeHighlight>–º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è</CodeHighlight> ‚Äî –º–µ—Ö–∞–Ω–∏–∑–º –ø–µ—Ä–µ–¥–∞—á–∏ –ø–∏—Å–µ–º –Ω—É–∂–Ω—ã–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º.",
          "- üö™ <CodeHighlight>server.listen()</CodeHighlight> ‚Äî –æ—Ç–∫—Ä—ã–ª–∏ –¥–≤–µ—Ä–∏ –∏ –≥–æ—Ç–æ–≤—ã –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ø–∏—Å—å–º–∞!",
        ],
        whatNext: ["üì° –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –Ω–∞—É—á–∏–º—Å—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ä–∞–∑–Ω—ã–µ –º–µ—Ç–æ–¥—ã –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ —Ä–∞—Å—à–∏—Ä–∏–º –Ω–∞—à —Å–µ—Ä–≤–µ—Ä."],
      },

      {
        type: "recap",
        title: "üì¶ –†–µ–∑—é–º–µ: —á—Ç–æ –º—ã –ø–æ—Å—Ç—Ä–æ–∏–ª–∏ –∏ –∫–∞–∫ –≤—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç –≤–º–µ—Å—Ç–µ",
        content:
          "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –ú—ã —Å –Ω—É–ª—è —Å–æ–∑–¥–∞–ª–∏ –º–∏–Ω–∏-–≤–µ—Ä—Å–∏—é Express.js ‚Äî –ø—Ä–æ—Å—Ç–æ–π, –Ω–æ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π HTTP-—Å–µ—Ä–≤–µ—Ä. –î–∞–≤–∞–π—Ç–µ –ø–æ–¥–≤–µ–¥—ë–º –∏—Ç–æ–≥–∏ –∏ –≤—Å–ø–æ–º–Ω–∏–º, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∂–¥–∞—è —á–∞—Å—Ç—å –Ω–∞—à–µ–≥–æ –ø–æ—á—Ç–æ–≤–æ–≥–æ –æ—Ñ–∏—Å–∞.\n\n" +
          "üß± –ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ—á–∫–∞ –∫–æ–¥–∞ ‚Äî —ç—Ç–æ –∫–∏—Ä–ø–∏—á–∏–∫ –≤ –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ. –í–æ—Ç –∫–∞–∫ –≤—Å—ë —É—Å—Ç—Ä–æ–µ–Ω–æ:\n\n" +
          "1. <CodeHighlight>http</CodeHighlight> ‚Äî —ç—Ç–æ –∫–∞–∫ –∞—Ä–µ–Ω–¥–æ–≤–∞–Ω–Ω–æ–µ –∑–¥–∞–Ω–∏–µ. –ë–µ–∑ –Ω–µ–≥–æ –Ω–µ –±—ã–ª–æ –±—ã –æ—Ñ–∏—Å–∞.\n" +
          "2. <CodeHighlight>routes</CodeHighlight> ‚Äî –ø–∞–ø–∫–∞ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏: –Ω–∞ –∫–∞–∫–∏–µ –ø–∏—Å—å–º–∞ –∫–∞–∫ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å.\n" +
          "3. <CodeHighlight>get(path, handler)</CodeHighlight> ‚Äî —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–∞—Ä—à—Ä—É—Ç–æ–≤. –¢—ã –≥–æ–≤–æ—Ä–∏—à—å: ¬´–µ—Å–ª–∏ –ø—Ä–∏–¥—ë—Ç –ø–∏—Å—å–º–æ –ø–æ –∞–¥—Ä–µ—Å—É `/`, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–π –µ–≥–æ —Ç–∞–∫-—Ç–æ¬ª.\n" +
          "4. <CodeHighlight>req</CodeHighlight> ‚Äî —Å–æ—Ç—Ä—É–¥–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–æ—Å–∏—Ç –ø–∏—Å—å–º–æ, –≥–æ–≤–æ—Ä–∏—Ç –æ—Ç–∫—É–¥–∞ –æ–Ω–æ –∏ —á—Ç–æ –≤ –Ω—ë–º.\n" +
          "5. <CodeHighlight>res</CodeHighlight> ‚Äî —Å–æ—Ç—Ä—É–¥–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –æ—Ñ–æ—Ä–º–ª—è–µ—Ç –æ—Ç–≤–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –æ–±—Ä–∞—Ç–Ω–æ –∫–ª–∏–µ–Ω—Ç—É.\n" +
          "6. <CodeHighlight>createServer()</CodeHighlight> ‚Äî –ø—Ä–∏—ë–º–Ω—ã–π —Å—Ç–æ–ª. –û–Ω –≤—Å—Ç—Ä–µ—á–∞–µ—Ç –≤—Å–µ –ø–∏—Å—å–º–∞ –∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∏—Ö.\n" +
          "7. <CodeHighlight>server.listen()</CodeHighlight> ‚Äî –æ—Ç–∫—Ä—ã—Ç–∏–µ –æ—Ñ–∏—Å–∞. –° —ç—Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞ –º—ã –≥–æ—Ç–æ–≤—ã –∫ —Ä–∞–±–æ—Ç–µ –∏ –ø—Ä–∏–Ω–∏–º–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã.",
        metaphor: [
          "üì¨ –ú–µ—Ç–∞—Ñ–æ—Ä–∞ ‚Äî –Ω–∞—à –ø–æ—á—Ç–æ–≤—ã–π –æ—Ñ–∏—Å –≤ –¥–µ–π—Å—Ç–≤–∏–∏:",
          "- –ö–ª–∏–µ–Ω—Ç—ã (–±—Ä–∞—É–∑–µ—Ä—ã) –ø—Ä–∏—Å—ã–ª–∞—é—Ç –ø–∏—Å—å–º–∞ (HTTP-–∑–∞–ø—Ä–æ—Å—ã).",
          "- –ü—Ä–∏—ë–º–Ω—ã–π —Å—Ç–æ–ª (—Å–µ—Ä–≤–µ—Ä) –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∏—Ö.",
          "- –°–æ—Ç—Ä—É–¥–Ω–∏–∫ <CodeHighlight>req</CodeHighlight> —Å–º–æ—Ç—Ä–∏—Ç, –∫—É–¥–∞ –ø–∏—Å—å–º–æ –∞–¥—Ä–µ—Å–æ–≤–∞–Ω–æ –∏ –∫–∞–∫–∏–º –º–µ—Ç–æ–¥–æ–º.",
          "- –ú—ã –∏—â–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –≤ –ø–∞–ø–∫–µ <CodeHighlight>routes</CodeHighlight>.",
          "- –ï—Å–ª–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –µ—Å—Ç—å ‚Äî –≤—ã–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ (–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —á–µ—Ä–µ–∑ <CodeHighlight>get()</CodeHighlight>).",
          "- –°–æ—Ç—Ä—É–¥–Ω–∏–∫ <CodeHighlight>res</CodeHighlight> —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–ª–∏–µ–Ω—Ç—É.",
        ],
        motivation: "–¢–µ–ø–µ—Ä—å —Ç—ã –ø–æ–Ω–∏–º–∞–µ—à—å, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç Express.js –∏–∑–Ω—É—Ç—Ä–∏. –≠—Ç–æ —É–∂–µ –Ω–µ —á—ë—Ä–Ω–∞—è –º–∞–≥–∏—è ‚Äî —Ç—ã —Å–∞–º –ø–æ—Å—Ç—Ä–æ–∏–ª —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç –¥–ª—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞!",
        whatWeLearned: [
          "‚úÖ –ß—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å —Å–µ–π—á–∞—Å:",
          "- üè¢ <CodeHighlight>http</CodeHighlight> ‚Äî –∑–¥–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞.",
          "- üìÇ <CodeHighlight>routes</CodeHighlight> ‚Äî –ø—Ä–∞–≤–∏–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–∏—Å–µ–º.",
          "- üë®‚Äçüíº <CodeHighlight>get()</CodeHighlight> ‚Äî —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —É–º–µ—é—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø–∏—Å—å–º–∞.",
          "- üßæ <CodeHighlight>req</CodeHighlight> –∏ üì¶ <CodeHighlight>res</CodeHighlight> ‚Äî –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –ø–æ–º–æ—â–Ω–∏–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞.",
          "- üè§ <CodeHighlight>createServer()</CodeHighlight> ‚Äî –ø—Ä–∏—ë–º–Ω—ã–π —Å—Ç–æ–ª.",
          "- üö™ <CodeHighlight>server.listen()</CodeHighlight> ‚Äî –æ—Ç–∫—Ä—ã–ª–∏ –¥–≤–µ—Ä–∏ –∏ –Ω–∞—á–∞–ª–∏ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π.",
          "- üîÑ –õ–æ–≥–∏–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ ‚Äî –ø–∏—Å—å–º–∞ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –Ω—É–∂–Ω–æ–º—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É.",
        ],
        whatNext: ["üì® –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É –º–∞—Ä—à—Ä—É—Ç–æ–≤ ‚Äî –ø—Ä–æ–≤–µ—Ä–∏–º, –∫–∞–∫ –Ω–∞—à –æ—Ñ–∏—Å –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ø–∏—Å—å–º–∞!"],
      },

      {
        type: "code",
        title: "–¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—à —Å–µ—Ä–≤–µ—Ä: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤–æ–µ –ø–∏—Å—å–º–æ ‚úâÔ∏èüì®",
        content:
          "–ü–æ—Ä–∞ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞—à–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –º–∏–Ω–∏-–±–∏–±–ª–∏–æ—Ç–µ–∫–∞ <CodeHighlight>Express.js</CodeHighlight> !\n\n" +
          "  –ú—ã —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–ª–∏ –µ—ë –∏–∑ —Ñ–∞–π–ª–∞ <CodeHighlight>MyExpress.js</CodeHighlight> –∏ —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ –ø—Ä–∏–≤—ã—á–Ω—ã–π Express:\n\n" +
          "- –í—ã–∑—ã–≤–∞–µ–º <CodeHighlight>express()</CodeHighlight>, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.\n" +
          "- –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –º–∞—Ä—à—Ä—É—Ç —Å –ø–æ–º–æ—â—å—é <CodeHighlight>app.get()</CodeHighlight>.\n" +
          "- –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä —á–µ—Ä–µ–∑ <CodeHighlight>app.listen()</CodeHighlight>.\n\n" +
          "<WarningHighlight>–í–∞–∂–Ω–æ</WarningHighlight>: –∫–æ–≥–¥–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç –∑–∞–ø—Ä–æ—Å, –Ω–∞—à —Å–µ—Ä–≤–µ—Ä –¥–æ–ª–∂–µ–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å **–æ—Ç–≤–µ—Ç** –∫–ª–∏–µ–Ω—Ç—É. –ï—Å–ª–∏ –º—ã –∑–∞–±—É–¥–µ–º –≤—ã–∑–≤–∞—Ç—å <CodeHighlight>res.end()</CodeHighlight>, –±—Ä–∞—É–∑–µ—Ä –±—É–¥–µ—Ç –∂–¥–∞—Ç—å –≤–µ—á–Ω–æ, –∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≤–∏–¥–∏—Ç —Ç–æ–ª—å–∫–æ –±–µ—Å–∫–æ–Ω–µ—á–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É.\n\n" +
          "–¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤ –±—Ä–∞—É–∑–µ—Ä–µ <CodeHighlight>http://localhost:3000</CodeHighlight> ‚Äî –µ—Å–ª–∏ –≤—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç, –º—ã —É–≤–∏–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞!",
        code: `// üìÅ index.js ‚Äî –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª, –≥–¥–µ –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—à—É –±–∏–±–ª–∏–æ—Ç–µ–∫—É

          const express = require('./MyExpress'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à—É –≤–µ—Ä—Å–∏—é Express
          const app = express(); // –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

          // üì® –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –º–∞—Ä—à—Ä—É—Ç –Ω–∞ GET /
          app.get('/', (req, res) => {
            res.statusCode = 200;
            res.setHeader('Content-Type', 'text/plain; charset=utf-8');
            // –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –≤—ã–∑—ã–≤–∞–µ–º res.end(), —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç –∫–ª–∏–µ–Ω—Ç—É
            res.end('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –ø–æ—á—Ç–æ–≤—ã–π –æ—Ñ–∏—Å!');
          });

          // üö™ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É 3000
          app.listen(3000, () => {
            console.log('–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000');
          });
          `,
        metaphor: [
          "üì´ –ú–µ—Ç–∞—Ñ–æ—Ä–∞:",
          "1. –ú—ã –ø–æ—Å—Ç—Ä–æ–∏–ª–∏ —Å–≤–æ—ë –∑–¥–∞–Ω–∏–µ (—Å–µ—Ä–≤–µ—Ä) —Å –ø–æ–º–æ—â—å—é —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ ‚Äî –∫–∞–∫ –±—É–¥—Ç–æ –æ—Ç–∫—Ä—ã–ª–∏ —Å–≤–æ–π –æ—Ñ–∏—Å —Å –Ω—É–ª—è.",
          "2. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ (handler) –¥–ª—è –≤—Ö–æ–¥—è—â–∏—Ö –ø–∏—Å–µ–º –ø–æ –∞–¥—Ä–µ—Å—É `/`.",
          "<WarningHighlight>3. –í–∞–∂–Ω–æ</WarningHighlight>: –µ—Å–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –ø–æ–ª—É—á–∏–ª –ø–∏—Å—å–º–æ, –æ–Ω –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –¥–æ–ª–∂–µ–Ω –æ—Ç–≤–µ—Ç–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É ‚Äî –∏–Ω–∞—á–µ –∫–ª–∏–µ–Ω—Ç –±—É–¥–µ—Ç –≤ –∑–∞–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–µ –∏ –∂–¥–∞—Ç—å –≤–µ—á–Ω–æ!",
        ],
        motivation: "–¢–µ–ø–µ—Ä—å —É –Ω–∞—Å –µ—Å—Ç—å –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–∞—è –∑–∞–≥–æ—Ç–æ–≤–∫–∞ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞! –ü—Ä–æ–≤–µ—Ä–∏–≤, —á—Ç–æ –æ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã, –º—ã —É–±–µ–¥–∏–º—Å—è: –Ω–∞—à –æ—Ñ–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç!",
        whatWeLearned: [
          "‚úÖ –ß—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:",
          "- üè¢ <CodeHighlight>http</CodeHighlight> ‚Äî –∞—Ä–µ–Ω–¥–æ–≤–∞–ª–∏ –∑–¥–∞–Ω–∏–µ –¥–ª—è –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞.",
          "- üìÇ <CodeHighlight>routes</CodeHighlight> ‚Äî —Å–æ–∑–¥–∞–ª–∏ –ø–∞–ø–∫—É —Å –º–∞—Ä—à—Ä—É—Ç–∞–º–∏.",
          "- <CodeHighlight>get(path, handler)</CodeHighlight> ‚Äî –Ω–∞–Ω—è–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤.",
          "- üè§ <CodeHighlight>server</CodeHighlight> ‚Äî –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –ø—Ä–∏—ë–º–Ω—ã–π —Å—Ç–æ–ª.",
          "- <CodeHighlight>req.method</CodeHighlight> ‚Äî –æ–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫—É—é –∑–∞–¥–∞—á—É –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å.",
          "- <CodeHighlight>req.url</CodeHighlight> ‚Äî —É–∫–∞–∑—ã–≤–∞–µ—Ç, –Ω–∞ –∫–∞–∫–æ–π –∞–¥—Ä–µ—Å –ø—Ä–∏—à–ª–æ –ø–∏—Å—å–º–æ.",
          "- üîÑ –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è ‚Äî –æ–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–ª–∂–µ–Ω –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–¥–∞—á—É.",
          "- ‚ùå 404 ‚Äî –µ—Å–ª–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤–µ–∂–ª–∏–≤—ã–π –æ—Ç–∫–∞–∑.",
          "- üö™ <CodeHighlight>server.listen()</CodeHighlight> ‚Äî –æ—Ç–∫—Ä—ã–ª–∏ –¥–≤–µ—Ä–∏ –∏ –≥–æ—Ç–æ–≤—ã –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ø–∏—Å—å–º–∞.",
          "- üß± –°–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –º–∏–Ω–∏-–±–∏–±–ª–∏–æ—Ç–µ–∫–∞ <CodeHighlight>MyExpress.js</CodeHighlight>.",
          "- üìÇ –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –º–∞—Ä—à—Ä—É—Ç—ã —á–µ—Ä–µ–∑ <CodeHighlight>app.get()</CodeHighlight>.",
          "- üìÆ –°–µ—Ä–≤–µ—Ä —Å–ª—É—à–∞–µ—Ç –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã.",
          "- <WarningHighlight>–í–∞–∂–Ω–æ</WarningHighlight>: –Ω–µ –∑–∞–±—ã–≤–∞–µ–º –≤—ã–∑—ã–≤–∞—Ç—å <CodeHighlight>res.end()</CodeHighlight> –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞.",
          "- üåê –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–µ—Ä —á–µ—Ä–µ–∑ <CodeHighlight>http://localhost:3000</CodeHighlight>.",
        ],
        whatNext: [
          "üöÄ –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –¥–æ–±–∞–≤–∏–º —É–¥–æ–±–Ω—ã–π –º–µ—Ç–æ–¥ <CodeHighlight>res.send()</CodeHighlight>, —á—Ç–æ–±—ã –æ—Ç–≤–µ—á–∞—Ç—å –∫–ª–∏–µ–Ω—Ç—É –±—ã–ª–æ –ø—Ä–æ—â–µ –∏ –±—ã—Å—Ç—Ä–µ–µ!",
          // "üîç –ê –∑–∞—Ç–µ–º ‚Äî –¥–æ–±–∞–≤–∏–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä, <CodeHighlight>/about</CodeHighlight> –∏ <CodeHighlight>/contact</CodeHighlight>, —á—Ç–æ–±—ã –Ω–∞—à –æ—Ñ–∏—Å —Å—Ç–∞–ª –±–æ–ª–µ–µ –º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º!",
        ],
      },

      {
        type: "code",
        title: "–£–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –æ—Ç–≤–µ—Ç—ã ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–æ–¥ res.send üì®‚ú®",
        content:
          "–ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –æ—Ç–≤–µ—Ç—ã –∫–ª–∏–µ–Ω—Ç—É –±—ã–ª–æ –ø—Ä–æ—â–µ –∏ —É–¥–æ–±–Ω–µ–µ, –¥–æ–±–∞–≤–∏–º –º–µ—Ç–æ–¥ <CodeHighlight>send</CodeHighlight> –≤ –æ–±—ä–µ–∫—Ç <CodeHighlight>res</CodeHighlight> ‚Äî —Ç–∞–∫ –∂–µ, –∫–∞–∫ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç –Ω–∞—Å—Ç–æ—è—â–∏–π Express.js.\n\n" +
          "–¢–µ–ø–µ—Ä—å –Ω–µ –Ω—É–∂–Ω–æ –≤—Ä—É—á–Ω—É—é –ø–∏—Å–∞—Ç—å <CodeHighlight>res.statusCode = 200</CodeHighlight>, <CodeHighlight>res.setHeader</CodeHighlight> –∏ <CodeHighlight>res.end</CodeHighlight> ‚Äî –≤—Å—ë —ç—Ç–æ –±—É–¥–µ—Ç –¥–µ–ª–∞—Ç—å <CodeHighlight>res.send()</CodeHighlight> –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!\n\n" +
          "–ú–µ—Ç–æ–¥ <CodeHighlight>send</CodeHighlight> –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç—Ä–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞:\n" +
          "- <CodeHighlight>body</CodeHighlight> ‚Äî —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ (—Å—Ç—Ä–æ–∫–∞ –∏–ª–∏ Buffer)\n" +
          "- <CodeHighlight>statusCode</CodeHighlight> ‚Äî HTTP —Å—Ç–∞—Ç—É—Å (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 200)\n" +
          "- <CodeHighlight>contentType</CodeHighlight> ‚Äî –∑–∞–≥–æ–ª–æ–≤–æ–∫ Content-Type (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 'text/plain; charset=utf-8')\n\n" +
          "–¢–µ–ø–µ—Ä—å –ø–∏—Å–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å—Ç–∞–ª–æ –ø—Ä–æ—â–µ –∏ –±—ã—Å—Ç—Ä–µ–µ!",
        code: `// üìÅ MyExpress.js

        const http = require('http');

        function express() {
          const routes = {
            GET: {},
          };

          function get(path, handler) {
            routes.GET[path] = handler;
          }

          function listen(port, callback) {
            const server = http.createServer((req, res) => {
              // üì¶ –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–æ–¥ send –≤ res
              res.send = (body, statusCode = 200, contentType = 'text/plain; charset=utf-8') => {
                res.statusCode = statusCode;
                res.setHeader('Content-Type', contentType);
                res.end(body);
              };

              const method = req.method;
              const url = req.url;

              const handler = routes[method] && routes[method][url];

              if (handler) {
                handler(req, res);
              } else {
                res.statusCode = 404;
                res.end('Not Found');
              }
            });

            server.listen(port, callback);
          }

          return {
            get,
            listen,
          };
        }

        module.exports = express;`,
        metaphor: [
          "üì¨ –ú–µ—Ç–∞—Ñ–æ—Ä–∞:",
          "–†–∞–Ω—å—à–µ –Ω–∞—à —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ (res) –≤—Ä—É—á–Ω—É—é —Å–æ–±–∏—Ä–∞–ª –∫–∞–∂–¥–æ–µ –ø–∏—Å—å–º–æ ‚Äî –∫–ª–µ–∏–ª –∫–æ–Ω–≤–µ—Ä—Ç, —Å—Ç–∞–≤–∏–ª –ø–µ—á–∞—Ç—å –∏ –ª–∏—á–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–ª.",
          "–¢–µ–ø–µ—Ä—å —É –Ω–µ–≥–æ –µ—Å—Ç—å —à–∞–±–ª–æ–Ω–Ω–æ–µ –ø–∏—Å—å–º–æ (send), –∫–æ—Ç–æ—Ä–æ–µ –æ–Ω –±—ã—Å—Ç—Ä–æ –∑–∞–ø–æ–ª–Ω—è–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç ‚Äî –º–µ–Ω—å—à–µ —Ä—É—Ç–∏–Ω—ã, –±–æ–ª—å—à–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏!",
          "–ú–µ—Ç–æ–¥ <CodeHighlight>send</CodeHighlight> ‚Äî —ç—Ç–æ –∫–∞–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–Ω–≤–µ–π–µ—Ä –¥–ª—è –∏—Å—Ö–æ–¥—è—â–∏—Ö –ø–∏—Å–µ–º.",
        ],
        motivation:
          "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ <CodeHighlight>res.send</CodeHighlight> ‚Äî —ç—Ç–æ —à–∞–≥ –≤ —Å—Ç–æ—Ä–æ–Ω—É –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ —É–¥–æ–±—Å—Ç–≤–∞. –í—Å—ë –∫–∞–∫ –≤ –Ω–∞—Å—Ç–æ—è—â–µ–º Express ‚Äî –∞ –≤–µ–¥—å –º—ã —Å–¥–µ–ª–∞–ª–∏ —ç—Ç–æ —Å–∞–º–∏!",
        metaphor: [
          "üì¨ –ú–µ—Ç–∞—Ñ–æ—Ä–∞:",
          "–†–∞–Ω—å—à–µ –Ω–∞—à —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ (<CodeHighlight>res</CodeHighlight>) –≤—Ä—É—á–Ω—É—é —Å–æ–±–∏—Ä–∞–ª –∫–∞–∂–¥–æ–µ –ø–∏—Å—å–º–æ ‚Äî –∫–ª–µ–∏–ª –∫–æ–Ω–≤–µ—Ä—Ç, —Å—Ç–∞–≤–∏–ª –ø–µ—á–∞—Ç—å –∏ –ª–∏—á–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–ª.",
          "–¢–µ–ø–µ—Ä—å —É –Ω–µ–≥–æ –µ—Å—Ç—å —à–∞–±–ª–æ–Ω–Ω–æ–µ –ø–∏—Å—å–º–æ (<CodeHighlight>send</CodeHighlight>), –∫–æ—Ç–æ—Ä–æ–µ –æ–Ω –±—ã—Å—Ç—Ä–æ –∑–∞–ø–æ–ª–Ω—è–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç ‚Äî –º–µ–Ω—å—à–µ —Ä—É—Ç–∏–Ω—ã, –±–æ–ª—å—à–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏!",
          "–ú–µ—Ç–æ–¥ <CodeHighlight>send</CodeHighlight> ‚Äî —ç—Ç–æ –∫–∞–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–Ω–≤–µ–π–µ—Ä –¥–ª—è –∏—Å—Ö–æ–¥—è—â–∏—Ö –ø–∏—Å–µ–º.",
          "",
          "‚úâÔ∏è –ß—Ç–æ —Ç–∞–∫–æ–µ <CodeHighlight>body</CodeHighlight>, <CodeHighlight>statusCode</CodeHighlight> –∏ <CodeHighlight>contentType</CodeHighlight>?",
          "- <CodeHighlight>body</CodeHighlight> ‚Äî —ç—Ç–æ —Å–∞–º–æ –ø–∏—Å—å–º–æ: –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ, —á—Ç–æ –∫–ª–∏–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –ø—Ä–æ—á–∏—Ç–∞—Ç—å.",
          "- <CodeHighlight>statusCode</CodeHighlight> ‚Äî —ç—Ç–æ –ø–µ—á–∞—Ç—å –Ω–∞ –ø–∏—Å—å–º–µ: –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –ø—Ä–æ—à–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ (—É—Å–ø–µ—à–Ω–æ, —Å –æ—à–∏–±–∫–æ–π –∏ —Ç.–¥.).",
          "- <CodeHighlight>contentType</CodeHighlight> ‚Äî —ç—Ç–æ —è—Ä–ª—ã–∫ –Ω–∞ –∫–æ–Ω–≤–µ—Ä—Ç–µ: –≥–æ–≤–æ—Ä–∏—Ç –∫–ª–∏–µ–Ω—Ç—É, –∫–∞–∫ —á–∏—Ç–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ (—Ç–µ–∫—Å—Ç, HTML, JSON –∏ —Ç.–¥.).",
        ],

        whatNext: ["üì¶ –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –¥–æ–±–∞–≤–∏–º –ø–æ–¥–¥–µ—Ä–∂–∫—É –¥—Ä—É–≥–∏—Ö HTTP –º–µ—Ç–æ–¥–æ–≤ ‚Äî –Ω–∞–π–º—ë–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–µ —Ç–æ–ª—å–∫–æ –¥–ª—è GET, –Ω–æ –∏ –¥–ª—è POST, PUT –∏ DELETE!"],
      },

      {
        type: "code",
        title: "–î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ –ø–∏—Å–µ–º ‚Äî POST, PUT, DELETE ‚úâÔ∏èüì¶üì§",
        content:
          "–°–µ–π—á–∞—Å –Ω–∞—à —Å–µ—Ä–≤–µ—Ä –ø–æ–Ω–∏–º–∞–µ—Ç —Ç–æ–ª—å–∫–æ –ø–∏—Å—å–º–∞, –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –æ–±—ã—á–Ω–æ–π –ø–æ—á—Ç–æ–π ‚Äî —Ç–æ –µ—Å—Ç—å –∑–∞–ø—Ä–æ—Å—ã —Å –º–µ—Ç–æ–¥–æ–º <CodeHighlight>GET</CodeHighlight>.\n\n" +
          "–ù–æ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –º–∏—Ä–µ –µ—Å—Ç—å –∏ –¥—Ä—É–≥–∏–µ –≤–∏–¥—ã –ø–∏—Å–µ–º:\n" +
          "- <CodeHighlight>POST</CodeHighlight> ‚Äî –∫–æ–≥–¥–∞ –∫–ª–∏–µ–Ω—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞–º –Ω–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é (–ø—Ä–∏–º–µ—Ä: –ø–∏—Å—å–º–æ-–∑–∞—è–≤–ª–µ–Ω–∏–µ)\n" +
          "- <CodeHighlight>PUT</CodeHighlight> ‚Äî –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ (–ø—Ä–∏–º–µ—Ä: –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –∫–æ–ø–∏—è –ø–∏—Å—å–º–∞)\n" +
          "- <CodeHighlight>DELETE</CodeHighlight> ‚Äî –∫–æ–≥–¥–∞ –ø—Ä–æ—Å—è—Ç —É–¥–∞–ª–∏—Ç—å —á—Ç–æ-—Ç–æ (–ø—Ä–∏–º–µ—Ä: –ø–∏—Å—å–º–æ —Å –ø—Ä–æ—Å—å–±–æ–π —É–±—Ä–∞—Ç—å –∏–∑ –±–∞–∑—ã)\n\n" +
          "–î–∞–≤–∞–π—Ç–µ —Ä–∞—Å—à–∏—Ä–∏–º –Ω–∞—à <CodeHighlight>routes</CodeHighlight> –∏ –¥–æ–±–∞–≤–∏–º —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–µ—Ç–æ–¥–∞!",
        code: `const routes = {
            GET: {},
            POST: {},
            PUT: {},
            DELETE: {}
          };

          function post(path, handler) {
            routes.POST[path] = handler;
          }

          function put(path, handler) {
            routes.PUT[path] = handler;
          }

          function del(path, handler) {
            routes.DELETE[path] = handler;
          }`,
        metaphor: [
          "üì¶ <CodeHighlight>–ú–µ—Ç–∞—Ñ–æ—Ä–∞:</CodeHighlight>",
          "<CodeHighlight>POST</CodeHighlight>, <CodeHighlight>PUT</CodeHighlight>, <CodeHighlight>DELETE</CodeHighlight> ‚Äî —ç—Ç–æ –∫–∞–∫ —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –ø–∏—Å–µ–º, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–Ω–æ—Å—è—Ç –∫–ª–∏–µ–Ω—Ç—ã:",
          "- <CodeHighlight>POST</CodeHighlight> ‚Äî –Ω–æ–≤–æ–µ –ø–∏—Å—å–º–æ, –∑–∞—è–≤–∫–∞, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å.",
          "- <CodeHighlight>PUT</CodeHighlight> ‚Äî –ø–∏—Å—å–º–æ —Å –ø—Ä–∞–≤–∫–∞–º–∏ ‚Äî –∫–ª–∏–µ–Ω—Ç –ø—Ä–æ—Å–∏—Ç –∑–∞–º–µ–Ω–∏—Ç—å —É–∂–µ –∏–º–µ—é—â–µ–µ—Å—è.",
          "- <CodeHighlight>DELETE</CodeHighlight> ‚Äî –ø–∏—Å—å–º–æ —Å –ø—Ä–æ—Å—å–±–æ–π —É–¥–∞–ª–∏—Ç—å —á—Ç–æ-—Ç–æ –∏–∑ –±–∞–∑—ã.",
          "–¢–µ–ø–µ—Ä—å —É –Ω–∞—Å –µ—Å—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–≤–µ—á–∞—é—Ç –∑–∞ –∫–∞–∂–¥—ã–π —Ç–∏–ø –ø–∏—Å–µ–º!",
        ],
        motivation:
          "–¢–µ–ø–µ—Ä—å –Ω–∞—à —Å–µ—Ä–≤–µ—Ä —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –Ω–∞—Å—Ç–æ—è—â–∏–º –æ—Ñ–∏—Å–æ–º, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–µ —Ç–æ–ª—å–∫–æ –∑–∞–ø—Ä–æ—Å—ã, –Ω–æ –∏ –¥–µ–π—Å—Ç–≤–∏—è: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ!",
        reminders: [
          "üìÇ <CodeHighlight>routes</CodeHighlight> ‚Äî –∫–∞–∫ –æ—Ñ–∏—Å–Ω—ã–π —à–∫–∞—Ñ —Å –ø–æ–ª–∫–∞–º–∏ –¥–ª—è –ø–∏—Å–µ–º —Ä–∞–∑–Ω–æ–≥–æ —Ç–∏–ø–∞: GET, POST, PUT, DELETE. –ú—ã –∑–∞—Ä–∞–Ω–µ–µ —Å–æ–∑–¥–∞—ë–º —è—á–µ–π–∫–∏, –∫—É–¥–∞ –∫–ª–∞–¥—ë–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ (–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏), —á—Ç–æ –¥–µ–ª–∞—Ç—å —Å –ø–∏—Å—å–º–∞–º–∏ –ø–æ –∫–∞–∂–¥–æ–º—É –∞–¥—Ä–µ—Å—É.",
          "üóÇÔ∏è <CodeHighlight>get(path, handler)</CodeHighlight>, <CodeHighlight>post()</CodeHighlight>, <CodeHighlight>put()</CodeHighlight>, <CodeHighlight>del()</CodeHighlight> ‚Äî —ç—Ç–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ—Å—Ç–æ —Å–∫–ª–∞–¥—ã–≤–∞—é—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤ –Ω—É–∂–Ω—ã–µ –ø–æ–ª–∫–∏ <CodeHighlight>routes</CodeHighlight>, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º –∏—Ö –Ω–∞—à–ª–∏ –∏ –≤—ã–ø–æ–ª–Ω–∏–ª–∏.",
        ],
        whatWeLearned: [
          "‚úÖ –ß—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:",
          "- üè¢ <CodeHighlight>http</CodeHighlight> ‚Äî –∞—Ä–µ–Ω–¥–æ–≤–∞–ª–∏ –∑–¥–∞–Ω–∏–µ –¥–ª—è –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞.",
          "- üìÇ <CodeHighlight>routes</CodeHighlight> ‚Äî —ç—Ç–æ –∫–∞–∫ –æ—Ñ–∏—Å–Ω—ã–π —à–∫–∞—Ñ —Å —è—á–µ–π–∫–∞–º–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø–∏—Å–µ–º: GET, POST, PUT, DELETE. –ú—ã —Ç—É–¥–∞ —Å–∫–ª–∞–¥—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, –∫–∞–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∫–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å.",
          "- üë®‚Äçüíº <CodeHighlight>get(path, handler)</CodeHighlight>, <CodeHighlight>post()</CodeHighlight>, <CodeHighlight>put()</CodeHighlight>, <CodeHighlight>del()</CodeHighlight> ‚Äî –Ω–∞—à–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–±–∞–≤–ª—è—é—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –æ—Ç–¥–µ–ª—ã —à–∫–∞—Ñ–∞ <CodeHighlight>routes</CodeHighlight>.",
          "- üè§ <CodeHighlight>server</CodeHighlight> ‚Äî –ø—Ä–∏—ë–º–Ω—ã–π —Å—Ç–æ–ª, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–∏—Å—å–º–∞ (–∑–∞–ø—Ä–æ—Å—ã).",
          "- ‚úâÔ∏è <CodeHighlight>req.method</CodeHighlight> ‚Äî –æ–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–æ–µ –ø–∏—Å—å–º–æ –ø—Ä–∏—à–ª–æ: GET, POST –∏ —Ç.–¥.",
          "- üó∫Ô∏è <CodeHighlight>req.url</CodeHighlight> ‚Äî –∞–¥—Ä–µ—Å, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏—à–ª–æ –ø–∏—Å—å–º–æ.",
          "- üîÑ –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è ‚Äî –æ–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–ª–∂–µ–Ω –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–¥–∞—á—É.",
          "- ‚ùå 404 ‚Äî –µ—Å–ª–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–µ–∂–ª–∏–≤—ã–π –æ—Ç–∫–∞–∑.",
          "- üö™ <CodeHighlight>server.listen()</CodeHighlight> ‚Äî –æ—Ç–∫—Ä—ã–ª–∏ –¥–≤–µ—Ä–∏ –∏ –Ω–∞—á–∞–ª–∏ —Ä–∞–±–æ—Ç—É.",
          "- üß± –°–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –º–∏–Ω–∏-–±–∏–±–ª–∏–æ—Ç–µ–∫–∞ <CodeHighlight>MyExpress.js</CodeHighlight> ‚Äî –Ω–∞—à —Å–∞–º–æ–¥–µ–ª—å–Ω—ã–π Express.",
          "- üìÇ –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –º–∞—Ä—à—Ä—É—Ç—ã —á–µ—Ä–µ–∑ <CodeHighlight>app.get()</CodeHighlight> –∏ –¥—Ä—É–≥–∏–µ –º–µ—Ç–æ–¥—ã.",
          "- üìÆ –°–µ—Ä–≤–µ—Ä —Å–ª—É—à–∞–µ—Ç –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã.",
          "- üß† –î–æ–±–∞–≤–∏–ª–∏ –º–µ—Ç–æ–¥ <CodeHighlight>res.send()</CodeHighlight> ‚Äî —Ç–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –æ—Ç–≤–µ—Ç—ã –ø—Ä–æ—â–µ.",
          "- üßæ <CodeHighlight>res.send()</CodeHighlight> –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã—Å—Ç–∞–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å, –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –æ—Ç–≤–µ—Ç.",
          "- üíå <CodeHighlight>body</CodeHighlight> ‚Äî —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: —Ç–æ, —á—Ç–æ —É–≤–∏–¥–∏—Ç –∫–ª–∏–µ–Ω—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ç–µ–∫—Å—Ç).",
          "- üè∑Ô∏è <CodeHighlight>statusCode</CodeHighlight> ‚Äî —Å—Ç–∞—Ç—É—Å, —Å –∫–æ—Ç–æ—Ä—ã–º –º—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 200).",
          "- üßæ <CodeHighlight>contentType</CodeHighlight> ‚Äî —Ñ–æ—Ä–º–∞—Ç –ø–∏—Å—å–º–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä <CodeHighlight>text/html</CodeHighlight> –∏–ª–∏ <CodeHighlight>application/json</CodeHighlight>.",
          "- <WarningHighlight>–í–∞–∂–Ω–æ</WarningHighlight>: –Ω–µ –∑–∞–±—ã–≤–∞–µ–º –≤—ã–∑—ã–≤–∞—Ç—å <CodeHighlight>res.end()</CodeHighlight>, –µ—Å–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º <CodeHighlight>send()</CodeHighlight>.",
          "- üåê –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–µ—Ä —á–µ—Ä–µ–∑ <CodeHighlight>http://localhost:3000</CodeHighlight>.",
        ],
        whatNext: ["üì• –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –¥–æ–±–∞–≤–∏–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞ (body), —á—Ç–æ–±—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –º–æ–≥–ª–∏ —á–∏—Ç–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∏—Å–µ–º!"],
      },

      {
        type: "code",
        title: "üéâ –ì–æ—Ç–æ–≤–æ! –ù–∞—à —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π HTTP-—Å–µ—Ä–≤–µ—Ä —Å –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–µ–π ‚Äî –º–∏–Ω–∏-Express.js!",
        content:
          "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –ú—ã —Å–æ–∑–¥–∞–ª–∏ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π HTTP-—Å–µ—Ä–≤–µ—Ä —Å –Ω—É–ª—è, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç:\n\n" +
          "‚úÖ –ü—Ä–∏–Ω–∏–º–∞—Ç—å HTTP-–∑–∞–ø—Ä–æ—Å—ã –æ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ (–±—Ä–∞—É–∑–µ—Ä–æ–≤)\n" +
          "‚úÖ –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ –∑–∞–ø—Ä–æ—Å–∞ (<CodeHighlight>GET</CodeHighlight>, <CodeHighlight>POST</CodeHighlight>, <CodeHighlight>PUT</CodeHighlight>, <CodeHighlight>DELETE</CodeHighlight>) –∏ <CodeHighlight>URL</CodeHighlight>\n" +
          "‚úÖ –ù–∞—Ö–æ–¥–∏—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤ –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤ ‚Äî <CodeHighlight>routes</CodeHighlight>\n" +
          "‚úÖ –ü–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å –Ω—É–∂–Ω–æ–º—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É —á–µ—Ä–µ–∑ <CodeHighlight>get()</CodeHighlight>, <CodeHighlight>post()</CodeHighlight> –∏ –¥—Ä—É–≥–∏–µ\n" +
          "‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è—Ç—å –æ—Ç–≤–µ—Ç—ã –∫–ª–∏–µ–Ω—Ç—É —Å –ø–æ–º–æ—â—å—é <CodeHighlight>res.end()</CodeHighlight> –∏–ª–∏ <CodeHighlight>res.send()</CodeHighlight>\n" +
          "‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∏ –∑–∞–≥–æ–ª–æ–≤–∫–∏ —á–µ—Ä–µ–∑ <CodeHighlight>res.send()</CodeHighlight>\n" +
          "‚úÖ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –º–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî <CodeHighlight>404 Not Found</CodeHighlight>\n\n" +
          "üß± –í—Å—ë —ç—Ç–æ ‚Äî –æ—Å–Ω–æ–≤–∞ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ <CodeHighlight>Express.js</CodeHighlight>. –¢–æ–ª—å–∫–æ —Ç–µ–ø–µ—Ä—å —Ç—ã —Å–∞–º –∑–Ω–∞–µ—à—å, –∫–∞–∫ –æ–Ω —É—Å—Ç—Ä–æ–µ–Ω –∏–∑–Ω—É—Ç—Ä–∏.\n\n" +
          "üöÄ –ú—ã –ø–æ—Å—Ç—Ä–æ–∏–ª–∏ —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –º–∏–Ω–∏-—Ñ—Ä–µ–π–º–≤–æ—Ä–∫, –∏ —ç—Ç–æ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–æ!",
        codeFiles: {
          "MyExpress.js": `// üìÅ MyExpress.js ‚Äî –Ω–∞—à–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –º–∏–Ω–∏-–±–∏–±–ª–∏–æ—Ç–µ–∫–∞ Express      
const http = require('http');
      
function express() {
  const routes = {
    GET: {},
    POST: {},
    PUT: {},
    DELETE: {}
  };

  function get(path, handler) {
    routes.GET[path] = handler;
  }

  function post(path, handler) {
    routes.POST[path] = handler;
  }

  function put(path, handler) {
    routes.PUT[path] = handler;
  }

  function del(path, handler) {
    routes.DELETE[path] = handler;
  }

  function listen(port, callback) {
    const server = http.createServer((req, res) => {
      // üì¶ –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–æ–¥ send –≤ res
      res.send = (body, statusCode = 200, contentType = 'text/plain; charset=utf-8') => {
        res.statusCode = statusCode;
        res.setHeader('Content-Type', contentType);
        res.end(body);
      };

      const method = req.method;
      const url = req.url;

      const handler = routes[method] && routes[method][url];

      if (handler) {
        handler(req, res);
      } else {
        res.statusCode = 404;
        res.end('Not Found');
      }
    });

    server.listen(port, callback);
  }

  return {
    get,
    post,
    put,
    del,
    listen,
    routes
  };
}

module.exports = express;`,
          "index.js": `// üìÅ index.js ‚Äî –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

const express = require("./MyExpress"); // –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–∞–∫ express

const app = express(); // —Å–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–µ—Ä–∞ (–Ω–∞—à "–æ—Ñ–∏—Å")


app.get("/money", (req, res) => { 
   // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç—É
   res.send('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –ø–æ—á—Ç–æ–≤—ã–π –æ—Ñ–∏—Å! get');

});

app.post("/auth", (req, res) => { 
   // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç—É
   res.send('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –ø–æ—á—Ç–æ–≤—ã–π –æ—Ñ–∏—Å! post');
});

app.listen(3000, () => {
  console.log("–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000");
});

console.log('routes',app.routes);
`,
        },
        metaphor: [
          "üéâ –ú–µ—Ç–∞—Ñ–æ—Ä–∞:",
          "–ú—ã –ø–æ—Å—Ç—Ä–æ–∏–ª–∏ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ –ø–æ—á—Ç–æ–≤–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ —Å –Ω—É–ª—è!",
          "üè¢ <CodeHighlight>http</CodeHighlight> ‚Äî –∞—Ä–µ–Ω–¥–æ–≤–∞–ª–∏ –∑–¥–∞–Ω–∏–µ –¥–ª—è –Ω–∞—à–µ–≥–æ –æ—Ñ–∏—Å–∞.",
          "üìÇ <CodeHighlight>routes</CodeHighlight> ‚Äî —Å–æ–∑–¥–∞–ª–∏ —Å–∏—Å—Ç–µ–º—É —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∏ —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π, –∫—É–¥–∞ –Ω–∞–ø—Ä–∞–≤–ª—è—Ç—å –ø–∏—Å—å–º–∞.",
          "üë®‚Äçüíº <CodeHighlight>get()</CodeHighlight>, <CodeHighlight>post()</CodeHighlight>, <CodeHighlight>put()</CodeHighlight>, <CodeHighlight>delete()</CodeHighlight> ‚Äî –Ω–∞–Ω—è–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å —á—ë—Ç–∫–∏–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –ø–∏—Å—å–º–∞.",
          "üè§ <CodeHighlight>server</CodeHighlight> ‚Äî –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –ø—Ä–∏—ë–º–Ω—ã–π —Å—Ç–æ–ª, –∫–æ—Ç–æ—Ä—ã–π –≤—Å—Ç—Ä–µ—á–∞–µ—Ç –≤—Å–µ –≤—Ö–æ–¥—è—â–∏–µ –ø–∏—Å—å–º–∞.",
          "üß† –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è ‚Äî –Ω–∞—É—á–∏–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —á–∏—Ç–∞—Ç—å –∞–¥—Ä–µ—Å–∞ –∏ –º–µ—Ç–æ–¥—ã, —á—Ç–æ–±—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞–ø—Ä–∞–≤–ª—è—Ç—å –ø–∏—Å—å–º–∞ –∫ –Ω—É–∂–Ω—ã–º –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è–º.",
          "üö™ <CodeHighlight>server.listen()</CodeHighlight> ‚Äî –æ—Ç–∫—Ä—ã–ª–∏ –¥–≤–µ—Ä–∏ –¥–ª—è –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π, —á—Ç–æ–±—ã –æ—Ñ–∏—Å –Ω–∞—á–∞–ª –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ø–∏—Å—å–º–∞.",
          "–¢–µ–ø–µ—Ä—å –Ω–∞—à–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –Ω–∞—Å—Ç–æ—è—â–µ–µ ‚Äî –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–∏—Å—å–º–∞ –∏ –¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏—Ö –ø–æ –∞–¥—Ä–µ—Å–∞–º!",
        ],

        motivation:
          "–¢—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–æ–∑–¥–∞–ª —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä —Å –Ω—É–ª—è! –≠—Ç–æ –æ—Å–Ω–æ–≤–∞ –≤—Å–µ—Ö —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–µ–±-—Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–≤. –¢–µ–ø–µ—Ä—å —Ç—ã –ø–æ–Ω–∏–º–∞–µ—à—å, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç Express.js –∏–∑–Ω—É—Ç—Ä–∏! –í —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ –º—ã –Ω–∞—É—á–∏–º—Å—è —á–∏—Ç–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∏—Å–µ–º ‚Äî –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç –∫–ª–∏–µ–Ω—Ç—ã.",

        whatWeLearned: [
          "‚úÖ –ß—Ç–æ –º—ã –∏–∑—É—á–∏–ª–∏ –∑–∞ –≤–µ—Å—å —É—Ä–æ–∫:",
          "- üè¢ <CodeHighlight>http</CodeHighlight> ‚Äî –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –º–æ–¥—É–ª—å Node.js –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è HTTP-—Å–µ—Ä–≤–µ—Ä–æ–≤",
          "- üìÇ <CodeHighlight>routes</CodeHighlight> ‚Äî –æ–±—ä–µ–∫—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤, –≥–¥–µ –∫–ª—é—á ‚Äî –ø—É—Ç—å, –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî –æ–±—Ä–∞–±–æ—Ç—á–∏–∫",
          "- üë®‚Äçüíº <CodeHighlight>get(path, handler)</CodeHighlight> ‚Äî —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ GET-–º–∞—Ä—à—Ä—É—Ç–æ–≤ (–∞–Ω–∞–ª–æ–≥ app.get() –≤ Express)",
          "- üóÇÔ∏è <CodeHighlight>post()</CodeHighlight>, <CodeHighlight>put()</CodeHighlight>, <CodeHighlight>del()</CodeHighlight> ‚Äî —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥—Ä—É–≥–∏—Ö HTTP-–º–µ—Ç–æ–¥–æ–≤",
          "- üè§ <CodeHighlight>http.createServer()</CodeHighlight> ‚Äî —Å–æ–∑–¥–∞–Ω–∏–µ HTTP-—Å–µ—Ä–≤–µ—Ä–∞ —Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–º –∑–∞–ø—Ä–æ—Å–æ–≤",
          "- üì¨ <CodeHighlight>req</CodeHighlight> ‚Äî –æ–±—ä–µ–∫—Ç –∑–∞–ø—Ä–æ—Å–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤—Ö–æ–¥—è—â–µ–º HTTP-–∑–∞–ø—Ä–æ—Å–µ",
          "- üì® <CodeHighlight>res</CodeHighlight> ‚Äî –æ–±—ä–µ–∫—Ç –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç—É",
          "- üîÑ <CodeHighlight>req.method</CodeHighlight> –∏ <CodeHighlight>req.url</CodeHighlight> ‚Äî –ø–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞ –∏ URL –∑–∞–ø—Ä–æ—Å–∞",
          "- üö™ <CodeHighlight>server.listen()</CodeHighlight> ‚Äî –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–º –ø–æ—Ä—Ç—É",
          "- üéØ –ü–æ–ª–Ω—ã–π —Ä–∞–±–æ—á–∏–π HTTP-—Å–µ—Ä–≤–µ—Ä —Å –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–µ–π ‚Äî –æ—Å–Ω–æ–≤–∞ –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è Express.js!",
        ],
        summary: [
          "üéØ <WarningHighlight>–ö—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ —É—Ä–æ–∫–∞</WarningHighlight>",
          "",
          "üè¢ <CodeHighlight>http</CodeHighlight> ‚Äî —ç—Ç–æ –∑–¥–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ –ø–æ—á—Ç–æ–≤–æ–≥–æ –æ—Ñ–∏—Å–∞, –≥–¥–µ –º—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–∞.",
          "",
          "üìÇ <CodeHighlight>routes</CodeHighlight> ‚Äî —ç—Ç–æ –Ω–∞—à —à–∫–∞—Ñ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π. –í –Ω—ë–º –µ—Å—Ç—å –ø–æ–ª–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –ø–∏—Å–µ–º: GET, POST, PUT, DELETE.",
          "",
          "üë®‚Äçüíº <CodeHighlight>get()</CodeHighlight>, <CodeHighlight>post()</CodeHighlight>, <CodeHighlight>put()</CodeHighlight>, <CodeHighlight>del()</CodeHighlight> ‚Äî —ç—Ç–æ –Ω–∞—à–∏ —á–µ—Ç—ã—Ä–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä—ã–µ —Å–∫–ª–∞–¥—ã–≤–∞—é—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤ –Ω—É–∂–Ω—ã–µ –ø–æ–ª–∫–∏ —à–∫–∞—Ñ–∞ <CodeHighlight>routes</CodeHighlight>.",
          "",
          "üè§ <CodeHighlight>server</CodeHighlight> ‚Äî —ç—Ç–æ –ø—Ä–∏—ë–º–Ω—ã–π —Å—Ç–æ–ª, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤—Å–µ –≤—Ö–æ–¥—è—â–∏–µ –ø–∏—Å—å–º–∞ –∏ —Å–º–æ—Ç—Ä–∏—Ç, –Ω–∞ –∫–∞–∫—É—é –ø–æ–ª–∫—É —à–∫–∞—Ñ–∞ –∏—Ö –ø–æ–ª–æ–∂–∏—Ç—å.",
          "",
          "üß† <CodeHighlight>req.method</CodeHighlight> –∏ <CodeHighlight>req.url</CodeHighlight> ‚Äî —ç—Ç–æ –∞–¥—Ä–µ—Å –∏ —Ç–∏–ø –ø–∏—Å—å–º–∞, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –º—ã –æ–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –≤–∑—è—Ç—å –∏–∑ —à–∫–∞—Ñ–∞.",
          "",
          "üö™ <CodeHighlight>server.listen()</CodeHighlight> ‚Äî —ç—Ç–æ –æ—Ç–∫—Ä—ã—Ç–∏–µ –¥–≤–µ—Ä–µ–π –æ—Ñ–∏—Å–∞, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ø–∏—Å—å–º–∞ –æ—Ç –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π.",
          "",
          "üéâ <WarningHighlight>–ò—Ç–æ–≥</WarningHighlight>: –ú—ã –ø–æ—Å—Ç—Ä–æ–∏–ª–∏ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –ø–æ—á—Ç–æ–≤—ã–π –æ—Ñ–∏—Å, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ø–∏—Å—å–º–∞, —á–∏—Ç–∞—Ç—å –∏—Ö –∞–¥—Ä–µ—Å–∞ –∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å –Ω—É–∂–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏!",
        ],
        whatNext: [
          "üöÄ –£—Ä–æ–∫ 2: –ö–∞–∫ –∫–ª–∏–µ–Ω—Ç –ø–µ—Ä–µ–¥–∞—ë—Ç –¥–∞–Ω–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—É ‚Äî params, query, body",
          "–¥–æ–±–∞–≤–∏–º –ø–æ–¥–¥–µ—Ä–∂–∫—É –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤ URL (`req.params`) –∏ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞ (`req.body`), —á—Ç–æ–±—ã —Å–µ—Ä–≤–µ—Ä –º–æ–≥ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤!",
        ],
      },
    ],
    []
  );

  // –ú–µ–º–æ–∏–∑–∏—Ä—É–µ–º —Ç–µ–∫—É—â–∏–π —à–∞–≥
  const currentStepData = useMemo(() => steps[currentStep], [steps, currentStep]);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Ä–æ–∫–∞
  const handleLessonCompletion = useCallback(async () => {
    if (isLessonCompleted) return;

    try {
      // –ó–∞–≤–µ—Ä—à–∞–µ–º —É—Ä–æ–∫ –ª–æ–∫–∞–ª—å–Ω–æ
      const success = await completeLesson();
      if (success) {
        setLessonCompleted(true);
        setShowCongratulations(true);
        setIsLessonPassed(true);
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ localStorage
        saveLessonProgress(3);
        console.log("–£—Ä–æ–∫ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!");

        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫—É—Ä—Å–∞ Express.js —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
          navigate("/js-libraries-course");
        }, 3000);
      } else {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Ä–æ–∫–∞");
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —É—Ä–æ–∫–∞:", error);
    }
  }, [completeLesson, isLessonCompleted, navigate, user?.userId]);

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —à–∞–≥–∞
  useEffect(() => {
    const stepAnswer = getStepAnswer(currentStep);
    if (stepAnswer && stepAnswer.answer) {
      setUserAnswer(stepAnswer.answer);
      // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –∑–∞–¥–∞–Ω–∏–π
      setIsCorrect(stepAnswer.isCorrect);
    } else {
      setUserAnswer("");
      setIsCorrect(null);
    }
  }, [currentStep, getStepAnswer, steps]);

  // –û—á–∏—Å—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —É—Ä–æ–∫–∞ (–µ—Å–ª–∏ —É—Ä–æ–∫ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω)
  useEffect(() => {
    if (!isLessonCompleted) {
      clearLessonProgress();
      console.log("–û—á–∏—â–µ–Ω—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è");
    }
  }, [isLessonCompleted, clearLessonProgress]);

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    if (lessonProgress.progress === 0) {
      updateCurrentStep(currentStep, steps.length);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–æ–π–¥–µ–Ω –ª–∏ —É—Ä–æ–∫
    const lessonPassed = checkLessonProgress(3);
    setIsLessonPassed(lessonPassed);
  }, [currentStep, steps.length, lessonProgress.progress, updateCurrentStep]);

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –≤ localStorage
  const saveAnswer = (answer) => {
    saveStepAnswer(currentStep, answer);
  };

  const handleNext = () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –ª–∏ —Ç–µ–∫—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ
    const currentStepData = steps[currentStep];
    let canProceed = true;

    if (currentStepData.type === "practice") {
      // –î–ª—è –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞–Ω–∏–π –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
      if (isCorrect !== true) {
        canProceed = false;
      }
    } else if (currentStepData.type === "quiz") {
      // –î–ª—è —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
      if (isCorrect !== true) {
        canProceed = false;
      }
    } else if (currentStepData.type === "theory_practice") {
      // –î–ª—è —Ç–µ–æ—Ä–∏–∏ —Å –ø—Ä–∞–∫—Ç–∏–∫–æ–π –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
      if (isCorrect !== true) {
        canProceed = false;
      }
    } else if (currentStepData.type === "additional_practice") {
      // –î–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–¥–∞—á –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ 5 –∑–∞–¥–∞—á –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ
      const completedTasks = currentStepData.tasks.filter((_, index) => additionalTaskAnswers[`${index}_correct`] === true);
      if (completedTasks.length < 5) {
        canProceed = false;
      }
    }

    // –ù–µ–ª—å–∑—è –ø–µ—Ä–µ–π—Ç–∏ –¥–∞–ª—å—à–µ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–º —à–∞–≥–µ
    if (currentStep >= steps.length - 1) {
      canProceed = false;
    }

    if (canProceed && currentStep < steps.length - 1) {
      updateCurrentStep(currentStep + 1);
      setShowHint(false);
      setShowAnswer(false);
      setUserAnswer("");
      setAdditionalTaskAnswers({});
      setAdditionalTaskHints({});
      setAdditionalTaskAttempts({});
      setAdditionalTaskShowAnswer({});
      setIsCorrect(null);
    } else if (!canProceed) {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
      if (currentStep >= steps.length - 1) {
        alert("üéØ –≠—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥ —É—Ä–æ–∫–∞. –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å –≤—ã—à–µ!");
      } else if (currentStepData.type === "additional_practice") {
        const completedTasks = currentStepData.tasks.filter((_, index) => additionalTaskAnswers[`${index}_correct`] === true);
        alert(`‚ö†Ô∏è –í—ã–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ 5 –∑–∞–¥–∞—á –ø—Ä–∞–≤–∏–ª—å–Ω–æ! –í—ã–ø–æ–ª–Ω–µ–Ω–æ: ${completedTasks.length}/5`);
      } else {
        alert("‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Ç–µ–∫—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ!");
      }
    }
  };

  const handlePrevious = () => {
    if (currentStep > 0) {
      updateCurrentStep(currentStep - 1);
      setShowHint(false);
      setShowAnswer(false);
      setUserAnswer("");
      setAdditionalTaskAnswers({});
      setAdditionalTaskHints({});
      setAdditionalTaskAttempts({});
      setAdditionalTaskShowAnswer({});
      setIsCorrect(null);
    }
  };

  // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
  const handleTextChange = useCallback((e) => {
    setUserAnswer(e.target.value);
  }, []);

  // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –≤ —Ç–µ—Å—Ç–µ
  const handleQuizAnswerChange = useCallback((e) => {
    console.log("=== –ò–ó–ú–ï–ù–ï–ù–ò–ï –û–¢–í–ï–¢–ê –í –¢–ï–°–¢–ï ===");
    console.log("e.target.value:", e.target.value);
    console.log("typeof e.target.value:", typeof e.target.value);
    setUserAnswer(e.target.value);
    console.log("setUserAnswer –≤—ã–∑–≤–∞–Ω —Å:", e.target.value);
  }, []);

  // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∫–∞–∑–∞ –ø–æ–¥—Å–∫–∞–∑–∫–∏
  const toggleHint = useCallback(() => {
    setShowHint((prev) => !prev);
  }, []);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ JSX —Ç–µ–≥–æ–≤ –≤ —Ç–µ–∫—Å—Ç–µ
  const parseJSXInText = (text) => {
    if (!text) return [];

    const parts = [];
    let currentIndex = 0;

    while (currentIndex < text.length) {
      // –ò—â–µ–º CodeHighlight —Ç–µ–≥–∏
      const codeOpenTagIndex = text.indexOf("<CodeHighlight>", currentIndex);
      // –ò—â–µ–º WarningHighlight —Ç–µ–≥–∏
      const warningOpenTagIndex = text.indexOf("<WarningHighlight>", currentIndex);

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–æ–π —Ç–µ–≥ –±–ª–∏–∂–µ
      let openTagIndex = -1;
      let tagType = "";
      let openTagLength = 0;
      let closeTagLength = 0;

      if (codeOpenTagIndex !== -1 && (warningOpenTagIndex === -1 || codeOpenTagIndex < warningOpenTagIndex)) {
        openTagIndex = codeOpenTagIndex;
        tagType = "code";
        openTagLength = 15; // "<CodeHighlight>".length
        closeTagLength = 16; // "</CodeHighlight>".length
      } else if (warningOpenTagIndex !== -1) {
        openTagIndex = warningOpenTagIndex;
        tagType = "warning";
        openTagLength = 18; // "<WarningHighlight>".length
        closeTagLength = 19; // "</WarningHighlight>".length
      }

      if (openTagIndex === -1) {
        // –ù–µ—Ç –±–æ–ª—å—à–µ —Ç–µ–≥–æ–≤, –¥–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–π—Å—è —Ç–µ–∫—Å—Ç
        parts.push({ type: "text", content: text.slice(currentIndex) });
        break;
      }

      // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –¥–æ —Ç–µ–≥–∞
      if (openTagIndex > currentIndex) {
        parts.push({ type: "text", content: text.slice(currentIndex, openTagIndex) });
      }

      // –ò—â–µ–º –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥
      const closeTagName = tagType === "code" ? "</CodeHighlight>" : "</WarningHighlight>";
      const closeTagIndex = text.indexOf(closeTagName, openTagIndex);

      if (closeTagIndex === -1) {
        // –ù–µ—Ç –∑–∞–∫—Ä—ã–≤–∞—é—â–µ–≥–æ —Ç–µ–≥–∞, –¥–æ–±–∞–≤–ª—è–µ–º –∫–∞–∫ –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç
        parts.push({ type: "text", content: text.slice(currentIndex) });
        break;
      }

      // –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ–≥–∞
      const tagContent = text.slice(openTagIndex + openTagLength, closeTagIndex);
      parts.push({ type: tagType, content: tagContent });

      currentIndex = closeTagIndex + closeTagLength;
    }

    return parts;
  };

  // –£–ª—É—á—à–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞ —Å –±–æ–ª–µ–µ –≥–∏–±–∫–∏–º —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ–º
  const normalizeAnswer = (answer) => {
    return answer
      .trim()
      .replace(/\s+/g, "") // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –ø—Ä–æ–±–µ–ª—ã
      .replace(/["""]/g, '"') // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∫–∞–≤—ã—á–∫–∏
      .replace(/[''']/g, "'") // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –æ–¥–∏–Ω–∞—Ä–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏
      .toLowerCase();
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ—à–∏–±–æ–∫ –≤ –∫–æ–¥–µ
  const analyzeCodeErrors = (userCode, correctCode) => {
    const userLines = userCode
      .trim()
      .split("\n")
      .filter((line) => line.trim());
    const correctLines = correctCode
      .trim()
      .split("\n")
      .filter((line) => line.trim());

    const errors = [];

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫
    if (userLines.length < correctLines.length) {
      errors.push(`–ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ —Ç—ã –Ω–∞–ø–∏—Å–∞–ª –≤—Å–µ ${correctLines.length} —Å—Ç—Ä–æ–∫–∏ –∫–æ–¥–∞`);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    if (!userCode.includes("print")) {
      errors.push("–ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ —Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å —Ñ—É–Ω–∫—Ü–∏—é print() –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞");
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã
    const operators = ["+", "-", "*", "/", "//", "%", "**"];
    const missingOperators = operators.filter((op) => correctCode.includes(op) && !userCode.includes(op));
    if (missingOperators.length > 0) {
      if (missingOperators.length === 1) {
        errors.push(`–ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ —Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –æ–ø–µ—Ä–∞—Ç–æ—Ä ${missingOperators[0]}`);
      } else {
        errors.push(`–ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ —Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã: ${missingOperators.join(", ")}`);
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ –∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è
    const variablePattern = /([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*([^#\n]+)/g;
    const correctVars = {};
    const userVars = {};

    // –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞
    let match;
    while ((match = variablePattern.exec(correctCode)) !== null) {
      const varName = match[1].trim();
      const varValue = match[2].trim();
      correctVars[varName] = varValue;
    }

    // –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ –∫–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    variablePattern.lastIndex = 0; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    while ((match = variablePattern.exec(userCode)) !== null) {
      const varName = match[1].trim();
      const varValue = match[2].trim();
      userVars[varName] = varValue;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    const missingVars = Object.keys(correctVars).filter((varName) => !userVars[varName]);
    if (missingVars.length > 0) {
      errors.push(`–ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ —Ç—ã —Å–æ–∑–¥–∞–ª –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é ${missingVars[0]}`);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    Object.keys(correctVars).forEach((varName) => {
      if (userVars[varName] && userVars[varName] !== correctVars[varName]) {
        errors.push(`–ü—Ä–æ–≤–µ—Ä—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é ${varName} - –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ —Ç—ã –Ω–∞–ø–∏—Å–∞–ª —á–∏—Å–ª–æ ${correctVars[varName]}`);
      }
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    const comparisonOps = ["==", "!=", ">", "<", ">=", "<="];
    const missingComparison = comparisonOps.filter((op) => correctCode.includes(op) && !userCode.includes(op));
    if (missingComparison.length > 0) {
      if (missingComparison.length === 1) {
        errors.push(`–ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ —Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –æ–ø–µ—Ä–∞—Ç–æ—Ä —Å—Ä–∞–≤–Ω–µ–Ω–∏—è ${missingComparison[0]}`);
      } else {
        errors.push(`–ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ —Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã —Å—Ä–∞–≤–Ω–µ–Ω–∏—è: ${missingComparison.join(", ")}`);
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å
    if (userCode.includes("==") && !userCode.includes("print")) {
      errors.push("–ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ —Ç—ã –≤—ã–≤–æ–¥–∏—à—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ print()");
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã
    const logicalOps = ["and", "or", "not"];
    const missingLogical = logicalOps.filter((op) => correctCode.includes(op) && !userCode.includes(op));
    if (missingLogical.length > 0) {
      if (missingLogical.length === 1) {
        errors.push(`–ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ —Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –ª–æ–≥–∏—á–µ—Å–∫–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä ${missingLogical[0]}`);
      } else {
        errors.push(`–ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ —Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –ª–æ–≥–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã: ${missingLogical.join(", ")}`);
      }
    }

    return errors;
  };

  const handleAnswerSubmit = useCallback(() => {
    console.log("=== –ù–ê–ß–ê–õ–û handleAnswerSubmit ===");
    console.log("currentStep:", currentStep);
    console.log("userAnswer:", userAnswer);
    console.log("typeof userAnswer:", typeof userAnswer);

    const currentStepData = steps[currentStep];
    console.log("currentStepData:", currentStepData);
    console.log("currentStepData.type:", currentStepData.type);

    let isAnswerCorrect = false;

    if (currentStepData.type === "practice") {
      const normalizedUserAnswer = normalizeAnswer(userAnswer);
      const normalizedCorrectAnswer = normalizeAnswer(currentStepData.answer);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
      const isExactMatch = normalizedUserAnswer === normalizedCorrectAnswer;

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∑–∞–¥–∞–Ω–∏–π
      const hasInput = normalizedUserAnswer.includes("input");
      const hasPrint = normalizedUserAnswer.includes("print");
      const hasInt = normalizedUserAnswer.includes("int");
      const hasFString = normalizedUserAnswer.includes('f"') || normalizedUserAnswer.includes("f'");
      const hasQuotes = normalizedUserAnswer.includes('"') || normalizedUserAnswer.includes("'");

      if (isExactMatch) {
        setIsCorrect(true);
        isAnswerCorrect = true;
      } else {
        // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
        const errors = analyzeCodeErrors(userAnswer, currentStepData.answer);
        if (errors.length > 0) {
          setIsCorrect({ type: "error", errors });
        } else {
          setIsCorrect("almost");
        }
        isAnswerCorrect = false;
      }
    } else if (currentStepData.type === "quiz") {
      console.log("=== –û–ë–†–ê–ë–û–¢–ö–ê –¢–ï–°–¢–ê ===");
      console.log("userAnswer:", userAnswer);
      console.log("currentStepData.correct:", currentStepData.correct);
      console.log("typeof userAnswer:", typeof userAnswer);
      console.log("typeof currentStepData.correct:", typeof currentStepData.correct);

      // –ü—Ä–∏–≤–æ–¥–∏–º –æ–±–∞ –∑–Ω–∞—á–µ–Ω–∏—è –∫ —Å—Ç—Ä–æ–∫–∞–º –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
      const userAnswerStr = userAnswer.toString();
      const correctAnswerStr = currentStepData.correct.toString();

      console.log("userAnswerStr:", userAnswerStr);
      console.log("correctAnswerStr:", correctAnswerStr);

      isAnswerCorrect = userAnswerStr === correctAnswerStr;
      console.log("isAnswerCorrect:", isAnswerCorrect);

      setIsCorrect(isAnswerCorrect);
      console.log("setIsCorrect –≤—ã–∑–≤–∞–Ω —Å:", isAnswerCorrect);
    } else if (currentStepData.type === "additional_practice") {
      // –î–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–¥–∞—á –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç—ã –ø–æ –æ—á–µ—Ä–µ–¥–∏
      const normalizedUserAnswer = normalizeAnswer(userAnswer);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∑–∞–¥–∞—á–∏ –≤ —Ç–µ–∫—É—â–µ–º –±–ª–æ–∫–µ
      let foundCorrectAnswer = false;
      for (const task of currentStepData.tasks) {
        const normalizedCorrectAnswer = normalizeAnswer(task.answer);
        if (normalizedUserAnswer === normalizedCorrectAnswer) {
          foundCorrectAnswer = true;
          break;
        }
      }

      setIsCorrect(foundCorrectAnswer);
      isAnswerCorrect = foundCorrectAnswer;
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
    console.log("=== –°–û–•–†–ê–ù–ï–ù–ò–ï –û–¢–í–ï–¢–ê ===");
    console.log("currentStep:", currentStep);
    console.log("userAnswer:", userAnswer);
    console.log("isAnswerCorrect:", isAnswerCorrect);

    saveStepAnswer(currentStep, userAnswer, isAnswerCorrect);
    console.log("=== –ö–û–ù–ï–¶ handleAnswerSubmit ===");
  }, [currentStep, steps, userAnswer, normalizeAnswer, saveStepAnswer]);

  return (
    <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} className="max-w-4xl mx-auto p-6 mb-5 bg-gray-50 min-h-screen">
      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ–º */}
      {showCongratulations && (
        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <motion.div
            initial={{ scale: 0.5, opacity: 0 }}
            animate={{ scale: 1, opacity: 1 }}
            className="bg-white rounded-2xl p-8 max-w-md mx-4 text-center shadow-2xl"
          >
            <div className="text-6xl mb-4 animate-bounce">üéâ</div>
            <h2 className="text-2xl font-bold text-gray-800 mb-4">–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</h2>
            <p className="text-gray-600 mb-6">–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª–∏ —É—Ä–æ–∫ "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ. –í—ã–≤–æ–¥ –∏ –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö"!</p>
            <div className="bg-green-50 rounded-lg p-4 mb-6">
              <p className="text-green-800 font-medium mb-2">üéØ –í—ã –∏–∑—É—á–∏–ª–∏:</p>
              <ul className="text-green-700 text-sm space-y-1">
                <li>‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö</li>
                <li>‚Ä¢ –§—É–Ω–∫—Ü–∏–∏ print() –∏ input()</li>
                <li>‚Ä¢ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö</li>
                <li>‚Ä¢ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫</li>
              </ul>
            </div>
            <p className="text-gray-500 text-sm">–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫—É—Ä—Å–æ–≤ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã...</p>
            <div className="mt-4">
              <div className="w-full bg-gray-200 rounded-full h-2">
                <motion.div className="bg-green-500 h-2 rounded-full" initial={{ width: 0 }} animate={{ width: "100%" }} transition={{ duration: 3 }} />
              </div>
            </div>
          </motion.div>
        </motion.div>
      )}

      {/* –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä */}
      <div className="mb-8">
        <div className="flex justify-between items-center mb-2">
          <div className="flex items-center space-x-2">
            <span className="text-sm font-medium text-gray-600">üìö –£—Ä–æ–∫ 1: –í–≤–µ–¥–µ–Ω–∏–µ –≤ Express</span>
            {isLessonPassed && <span className="text-xs bg-green-100 text-green-800 px-2 py-1 rounded-full font-medium">‚úÖ –ü—Ä–æ–π–¥–µ–Ω</span>}
          </div>
          <div className="flex items-center space-x-4">
            <span className="text-sm font-medium text-gray-600">
              üìç {currentStep + 1} –∏–∑ {steps.length}
            </span>
            <span className="text-sm font-medium text-green-600">{Math.round(((currentStep + 1) / steps.length) * 100)}%</span>
          </div>
        </div>
        <div className="w-full bg-gray-200 rounded-full h-3">
          <motion.div
            className="bg-gradient-to-r from-green-500 to-blue-500 h-3 rounded-full"
            initial={{ width: 0 }}
            animate={{ width: `${((currentStep + 1) / steps.length) * 100}%` }}
            transition={{ duration: 0.5 }}
          />
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="bg-white rounded-xl shadow-xl p-8 mb-8 border border-gray-100">
        <motion.h1
          key={currentStep}
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          className="text-3xl font-bold text-gray-800 mb-6 text-center"
        >
          {currentStepData.title}
        </motion.h1>

        <motion.div key={`content-${currentStep}`} initial={{ opacity: 0, x: 20 }} animate={{ opacity: 1, x: 0 }} className="space-y-6">
          {/* –¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
          {currentStepData.content && (
            <div className="text-gray-700 leading-relaxed text-lg">
              {currentStepData.content.split("\n").map((line, index) => (
                <p key={index} className="mb-3">
                  {parseJSXInText(line).map((part, partIndex) =>
                    part.type === "code" ? (
                      <CodeHighlight key={partIndex}>{part.content}</CodeHighlight>
                    ) : part.type === "warning" ? (
                      <WarningHighlight key={partIndex}>{part.content}</WarningHighlight>
                    ) : (
                      <span key={partIndex}>{part.content}</span>
                    )
                  )}
                </p>
              ))}
            </div>
          )}

          {/* –ú–µ—Ç–∞—Ñ–æ—Ä–∞ */}
          {currentStepData.metaphor && (
            <div className="bg-gradient-to-r from-purple-50 to-pink-50 border-2 border-purple-300 rounded-xl p-6 shadow-lg mb-6">
              <div className="flex items-center mb-4">
                <span className="text-2xl mr-3">üé≠</span>
                <span className="text-purple-800 font-bold text-xl">–ú–µ—Ç–∞—Ñ–æ—Ä–∞</span>
              </div>
              <div className="space-y-3">
                {currentStepData.metaphor.map((line, i) => (
                  <p key={i} className="text-purple-700 text-lg">
                    {parseJSXInText(line).map((part, partIndex) =>
                      part.type === "code" ? (
                        <CodeHighlight key={partIndex}>{part.content}</CodeHighlight>
                      ) : part.type === "warning" ? (
                        <WarningHighlight key={partIndex}>{part.content}</WarningHighlight>
                      ) : (
                        <span key={partIndex}>{part.content}</span>
                      )
                    )}
                  </p>
                ))}
              </div>
            </div>
          )}

          {/* –ö–æ–¥ —Å –≤–∫–ª–∞–¥–∫–∞–º–∏ */}
          {currentStepData.codeFiles && (
            <div className="bg-gray-50 border border-gray-200 rounded-xl p-6 shadow-lg">
              <div className="flex items-center justify-between mb-4">
                <div className="flex space-x-2">
                  {Object.keys(currentStepData.codeFiles).map((fileName) => (
                    <button
                      key={fileName}
                      onClick={() => setActiveCodeTab(fileName)}
                      className={`px-4 py-2 rounded-lg font-medium transition-all duration-200 ${
                        activeCodeTab === fileName ? "bg-blue-600 text-white shadow-lg" : "bg-gray-200 text-gray-700 hover:bg-gray-300"
                      }`}
                    >
                      üìÅ {fileName}
                    </button>
                  ))}
                </div>
                <button
                  onClick={() => navigator.clipboard.writeText(currentStepData.codeFiles[activeCodeTab])}
                  className="text-gray-500 hover:text-gray-700 transition-colors flex items-center space-x-2"
                >
                  <span>üìã</span>
                  <span>–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å</span>
                </button>
              </div>
              <div className="overflow-y-auto p-4 border border-gray-200 rounded-lg">
                <code className="whitespace-pre text-base font-mono text-gray-800">
                  {currentStepData.codeFiles[activeCodeTab].split("\n").map((line, lineIndex) => (
                    <div key={lineIndex} className="leading-relaxed">
                      {line.split(" ").map((word, wordIndex) => {
                        // –ü—Ä–æ—Å—Ç–∞—è –ø–æ–¥—Å–≤–µ—Ç–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
                        let className = "text-gray-800";

                        // –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ (–ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–º, —á—Ç–æ–±—ã –æ–Ω–∏ –∏–º–µ–ª–∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
                        if (word.startsWith("//") || line.trim().startsWith("//")) {
                          className = "text-gray-500 italic";
                        }
                        // –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
                        else if (["const", "let", "var", "function", "if", "else", "return", "require", "module", "exports"].includes(word)) {
                          className = "text-blue-600 font-semibold";
                        }
                        // –°—Ç—Ä–æ–∫–∏
                        else if (word.includes("'") || word.includes('"')) {
                          className = "text-green-600";
                        }
                        // –ß–∏—Å–ª–∞
                        else if (/^\d+$/.test(word)) {
                          className = "text-orange-600";
                        }
                        // –ú–µ—Ç–æ–¥—ã
                        else if (word.includes("(") && !word.startsWith("(")) {
                          className = "text-purple-600";
                        }

                        return (
                          <span key={wordIndex} className={className}>
                            {word}{" "}
                          </span>
                        );
                      })}
                    </div>
                  ))}
                </code>
              </div>
            </div>
          )}

          {/* –û–±—ã—á–Ω—ã–π –∫–æ–¥ (–¥–ª—è –¥—Ä—É–≥–∏—Ö —à–∞–≥–æ–≤) */}
          {currentStepData.code && !currentStepData.codeFiles && currentStepData.type !== "theory_practice" && (
            <div className="bg-gray-50 border border-gray-200 rounded-xl p-6 shadow-lg">
              <div className="flex items-center justify-between mb-4">
                <span className="text-gray-700 font-medium flex items-center"> JavaScript</span>
                <button
                  onClick={() => navigator.clipboard.writeText(currentStepData.code)}
                  className="text-gray-500 hover:text-gray-700 transition-colors flex items-center space-x-2"
                >
                  <span>üìã</span>
                  <span>–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å</span>
                </button>
              </div>
              <div className="overflow-y-auto p-4 border border-gray-200 rounded-lg">
                <code className="whitespace-pre text-base font-mono text-gray-800">
                  {currentStepData.code.split("\n").map((line, lineIndex) => (
                    <div key={lineIndex} className="leading-relaxed">
                      {line.split(" ").map((word, wordIndex) => {
                        // –ü—Ä–æ—Å—Ç–∞—è –ø–æ–¥—Å–≤–µ—Ç–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
                        let className = "text-gray-800";

                        // –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ (–ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–º, —á—Ç–æ–±—ã –æ–Ω–∏ –∏–º–µ–ª–∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
                        if (word.startsWith("//") || line.trim().startsWith("//")) {
                          className = "text-gray-500 italic";
                        }
                        // –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
                        else if (["const", "let", "var", "function", "if", "else", "return", "require", "module", "exports"].includes(word)) {
                          className = "text-blue-600 font-semibold";
                        }
                        // –°—Ç—Ä–æ–∫–∏
                        else if (word.includes("'") || word.includes('"')) {
                          className = "text-green-600";
                        }
                        // –ß–∏—Å–ª–∞
                        else if (/^\d+$/.test(word)) {
                          className = "text-orange-600";
                        }
                        // –ú–µ—Ç–æ–¥—ã
                        else if (word.includes("(") && !word.startsWith("(")) {
                          className = "text-purple-600";
                        }

                        return (
                          <span key={wordIndex} className={className}>
                            {word}{" "}
                          </span>
                        );
                      })}
                    </div>
                  ))}
                </code>
              </div>
            </div>
          )}

          {/* –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –∫–æ–¥–∞ */}
          {currentStepData.explanation && currentStepData.type !== "theory_practice" && (
            <div className="bg-gradient-to-r from-blue-50 to-indigo-50 border-l-4 border-blue-400 p-6 rounded-xl">
              <div className="flex items-center mb-2">
                <span className="text-2xl mr-2">üí°</span>
                <span className="text-blue-800 font-semibold">–û–±—ä—è—Å–Ω–µ–Ω–∏–µ</span>
              </div>
              <div className="text-blue-800 text-lg">
                {currentStepData.explanation.split("\n").map((line, index) => (
                  <p key={index} className="mb-3">
                    {line}
                  </p>
                ))}
              </div>
            </div>
          )}

          {/* –ß–∞—Å—Ç—ã–µ –æ—à–∏–±–∫–∏ –Ω–æ–≤–∏—á–∫–æ–≤ */}
          {currentStepData.errorExample && (
            <div className="bg-gradient-to-r from-red-50 to-pink-50 border-l-4 border-red-400 p-4 rounded-xl mb-4">
              <div className="flex items-center mb-2">
                <span className="text-xl mr-2">‚ö†Ô∏è</span>
                <span className="text-red-800 font-semibold">–ß–∞—Å—Ç—ã–µ –æ—à–∏–±–∫–∏ –Ω–æ–≤–∏—á–∫–æ–≤:</span>
              </div>
              <div className="text-red-800 text-lg">
                <pre className="bg-gray-900 rounded-lg p-3 text-red-300 text-sm mb-2 overflow-x-auto">{currentStepData.errorExample.code}</pre>
                <div>{currentStepData.errorExample.explanation}</div>
              </div>
            </div>
          )}

          {/* –ì–¥–µ –ø—Ä–∏–≥–æ–¥–∏—Ç—Å—è (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–∏–º–µ—Ä) */}
          {currentStepData.examples && (
            <div className="space-y-8 mb-4">
              <div className="flex items-center mb-2">
                <span className="text-xl mr-2">üõ†Ô∏è</span>
                <span className="text-green-800 font-semibold text-lg">–†–∞–∑–±–æ—Ä –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤:</span>
              </div>
              {/* –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ —Ç–∏–ø–∞–º –¥–∞–Ω–Ω—ã—Ö –∏ —Å–±–æ—Ä —Ä–µ–∑—é–º–µ */}
              {(() => {
                // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ç–∏–ø–∞–º –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–±–∏—Ä–∞–µ–º —Ä–µ–∑—é–º–µ –æ—Ç–¥–µ–ª—å–Ω–æ
                const groups = [];
                let currentGroup = null;
                let currentType = null;
                const typeRegex = /–ì–¥–µ –ø—Ä–∏–≥–æ–¥–∏—Ç—Å—è (.+)\?:/i;
                const resumeBlocks = [];

                let inResume = false;
                let currentResume = [];
                currentStepData.examples.forEach((ex, i) => {
                  // –ù–∞—á–∞–ª–æ —Ä–µ–∑—é–º–µ
                  if (ex.trim().startsWith("–†–µ–∑—é–º–∏—Ä—É—è:") || ex.trim().startsWith("–†–µ–∑—é–º–∏—Ä—É—è:")) {
                    if (currentResume.length > 0) {
                      resumeBlocks.push([...currentResume]);
                      currentResume = [];
                    }
                    inResume = true;
                    currentResume.push(ex);
                    return;
                  }
                  // –ï—Å–ª–∏ –≤—Å—Ç—Ä–µ—Ç–∏–ª–∏ –Ω–æ–≤—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö ‚Äî –∑–∞–∫—Ä—ã–≤–∞–µ–º —Ä–µ–∑—é–º–µ, –µ—Å–ª–∏ –æ–Ω–æ –±—ã–ª–æ
                  const match = ex.match(typeRegex);
                  if (match) {
                    if (inResume && currentResume.length > 0) {
                      resumeBlocks.push([...currentResume]);
                      currentResume = [];
                      inResume = false;
                    }
                    if (currentGroup) groups.push(currentGroup);
                    currentType = match[1].trim();
                    currentGroup = {
                      type: currentType,
                      items: [
                        {
                          type: "header",
                          content: ex,
                        },
                      ],
                    };
                    return;
                  }
                  // –ï—Å–ª–∏ –º—ã –≤ —Ä–µ–∑—é–º–µ ‚Äî –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å–æ–±–∏—Ä–∞—Ç—å
                  if (inResume) {
                    currentResume.push(ex);
                    return;
                  }
                  // –û–±—ã—á–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö
                  if (currentGroup) {
                    currentGroup.items.push({ type: "item", content: ex });
                  }
                });
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Ä–µ–∑—é–º–µ, –µ—Å–ª–∏ –æ–Ω–æ –±—ã–ª–æ
                if (inResume && currentResume.length > 0) {
                  resumeBlocks.push([...currentResume]);
                }
                if (currentGroup) groups.push(currentGroup);
                // –†–µ–Ω–¥–µ—Ä–∏–º –≥—Ä—É–ø–ø—ã —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö
                return (
                  <>
                    {groups.map((group, idx) => (
                      <div
                        key={idx}
                        className="bg-gradient-to-r from-gray-50 to-gray-100 border-2 border-green-300 rounded-2xl shadow-lg p-6 space-y-4 animate-fade-in"
                      >
                        <div className="flex items-center mb-2">
                          <span className="text-2xl mr-2">üîπ</span>
                          <span className="text-green-900 font-bold text-xl">{group.type}</span>
                        </div>
                        <div className="space-y-4">
                          {group.items.map((item, i) => {
                            const ex = item.content;
                            // –ë–ª–æ–∫: –ì–¥–µ –ø—Ä–∏–≥–æ–¥–∏—Ç—Å—è ... (–∑–∞–≥–æ–ª–æ–≤–æ–∫)
                            if (item.type === "header") {
                              return (
                                <div
                                  key={i}
                                  className="bg-gradient-to-r from-yellow-100 to-yellow-50 border-l-4 border-yellow-400 shadow-md rounded-xl p-4 flex items-center space-x-3 animate-fade-in"
                                >
                                  <span className="text-2xl">üì¶</span>
                                  <span className="text-yellow-900 font-semibold text-base">{ex}</span>
                                </div>
                              );
                            }
                            // –ë–ª–æ–∫: –û—à–∏–±–∫–∞
                            if (ex.trim().startsWith("‚ö†Ô∏è") || ex.trim().startsWith("‚ùå")) {
                              return (
                                <div
                                  key={i}
                                  className="bg-gradient-to-r from-red-100 to-pink-50 border-l-4 border-red-400 shadow-md rounded-xl p-4 flex items-center space-x-3 animate-fade-in"
                                >
                                  <span className="text-2xl">‚ö†Ô∏è</span>
                                  <span className="text-red-900 font-semibold text-base">{ex}</span>
                                </div>
                              );
                            }
                            // –ë–ª–æ–∫: –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ
                            if (ex.trim().startsWith("‚úÖ")) {
                              return (
                                <div
                                  key={i}
                                  className="bg-gradient-to-r from-green-100 to-emerald-50 border-l-4 border-green-400 shadow-md rounded-xl p-4 flex items-center space-x-3 animate-fade-in"
                                >
                                  <span className="text-2xl">‚úÖ</span>
                                  <span className="text-green-900 font-semibold text-base">{ex}</span>
                                </div>
                              );
                            }
                            // –ë–ª–æ–∫: –ü—Ä–∏–º–µ—Ä (–∫–æ–¥)
                            const isCode =
                              ex.trim().match(/^[a-zA-Z_][a-zA-Z0-9_ ]* ?=|print\(|total ?=|score ?=|item[12] ?=|result ?=|^#|^\d+\./) ||
                              ex.trim() === "score + 10";
                            if (isCode) {
                              return (
                                <pre
                                  key={i}
                                  className="bg-gray-900 rounded-xl p-3 text-green-300 text-sm mb-2 overflow-x-auto border border-gray-700 animate-fade-in"
                                >
                                  {ex}
                                </pre>
                              );
                            }

                            // –ë–ª–æ–∫: –û–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç
                            return (
                              <div
                                key={i}
                                className="bg-gradient-to-r from-blue-50 to-blue-100 border-l-4 border-blue-400 shadow rounded-xl p-4 text-blue-900 animate-fade-in"
                              >
                                {ex}
                              </div>
                            );
                          })}
                        </div>
                      </div>
                    ))}
                    {/* –†–µ–∑—é–º–µ –æ—Ç–¥–µ–ª—å–Ω—ã–º–∏ —Å–µ–∫—Ü–∏—è–º–∏ */}
                    {resumeBlocks.length > 0 && (
                      <div className="space-y-6 mt-16">
                        {resumeBlocks.map((resumeArr, i) => (
                          <div key={i} className="bg-white border border-gray-200 shadow rounded-2xl p-6 flex items-start space-x-4 animate-fade-in">
                            <span className="text-3xl mt-1 text-blue-400">üìå</span>
                            <div className="space-y-2 w-full">
                              {resumeArr.map((ex, j) =>
                                j === 0 ? (
                                  <div key={j} className="text-lg font-semibold text-blue-800 mb-1">
                                    {ex.replace(/–†–µ–∑—é–º–∏—Ä—É—è:/, "–†–µ–∑—é–º–∏—Ä—É—è:")}
                                  </div>
                                ) : (
                                  <div key={j} className="text-base text-gray-800 leading-relaxed">
                                    {ex}
                                  </div>
                                )
                              )}
                            </div>
                          </div>
                        ))}
                      </div>
                    )}
                  </>
                );
              })()}
            </div>
          )}

          {/* –ü–æ—è—Å–Ω–µ–Ω–∏–µ –æ —Ç–∏–ø–∞—Ö –¥–∞–Ω–Ω—ã—Ö */}
          {/* {currentStepData.examples && (
            <div className="mt-4 text-green-900 text-base bg-green-50 border-l-4 border-green-400 rounded p-3">
              <span className="font-semibold">–í–∞–∂–Ω–æ:</span> –≠—Ç–æ –Ω–µ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –Ω—É–∂–Ω–æ –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä,{" "}
              <span className="font-mono">int</span>). –ü—Ä–æ—Å—Ç–æ –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–¥–∞—á–∏ –µ—Å—Ç—å —Å–≤–æ–π –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö: –¥–ª—è —á–∏—Å–µ–ª ‚Äî{" "}
              <span className="font-mono">int</span> –∏–ª–∏ <span className="font-mono">float</span>, –¥–ª—è —Ç–µ–∫—Å—Ç–∞ ‚Äî <span className="font-mono">str</span>, –¥–ª—è
              –æ—Ç–≤–µ—Ç–æ–≤ "–¥–∞/–Ω–µ—Ç" ‚Äî <span className="font-mono">bool</span>. –ì–ª–∞–≤–Ω–æ–µ ‚Äî –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ—Ç —Ç–∏–ø, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –≤–∞—à–µ–π –∑–∞–¥–∞—á–∏!"
            </div>
          )} */}

          {/* –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ */}
          {currentStepData.type === "practice" && (
            <div className="bg-gradient-to-r from-yellow-50 to-orange-50 border border-yellow-200 rounded-xl p-6 shadow-lg">
              <h3 className="text-xl font-semibold text-yellow-800 mb-4 flex items-center">
                <span className="text-2xl mr-2">üéØ</span>
                –ó–∞–¥–∞–Ω–∏–µ
              </h3>
              <p className="text-yellow-700 mb-4 text-lg">{currentStepData.task}</p>

              <div className="space-y-4">
                <textarea
                  value={userAnswer}
                  onChange={handleTextChange}
                  placeholder="‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫–æ–¥ –∑–¥–µ—Å—å..."
                  className="w-full h-60 p-4 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent text-lg font-mono resize-none"
                  spellCheck="false"
                />

                <div className="flex space-x-4">
                  <button
                    onClick={handleAnswerSubmit}
                    className="px-6 py-3 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-lg hover:from-green-600 hover:to-green-700 transition-all duration-200 flex items-center space-x-2 shadow-lg"
                  >
                    <span>‚úÖ</span>
                    <span>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</span>
                  </button>
                  <button
                    onClick={toggleHint}
                    className="px-6 py-3 bg-gradient-to-r from-blue-500 to-blue-600 text-white rounded-lg hover:from-blue-600 hover:to-blue-700 transition-all duration-200 flex items-center space-x-2 shadow-lg"
                  >
                    <span>üí°</span>
                    <span>–ü–æ–¥—Å–∫–∞–∑–∫–∞</span>
                  </button>
                </div>

                {showHint && (
                  <div className="bg-gradient-to-r from-blue-100 to-indigo-100 border border-blue-300 rounded-lg p-4">
                    <div className="flex items-center mb-2">
                      <span className="text-xl mr-2">üí°</span>
                      <span className="text-blue-800 font-semibold">–ü–æ–¥—Å–∫–∞–∑–∫–∞</span>
                    </div>
                    <div className="text-blue-800 text-lg">
                      {currentStepData.hint.split("\n").map((line, index) => (
                        <p key={index} className="mb-3">
                          {line}
                        </p>
                      ))}
                    </div>
                  </div>
                )}

                {isCorrect !== null && (
                  <div
                    className={`p-4 rounded-lg ${
                      isCorrect === true
                        ? "bg-gradient-to-r from-green-100 to-emerald-100 border border-green-300"
                        : isCorrect === "almost"
                        ? "bg-gradient-to-r from-yellow-100 to-orange-100 border border-yellow-300"
                        : "bg-gradient-to-r from-red-100 to-pink-100 border border-red-300"
                    }`}
                  >
                    {isCorrect === true ? (
                      <p className="text-green-800 text-lg font-semibold">üéâ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É.</p>
                    ) : isCorrect === "almost" ? (
                      <p className="text-yellow-800 text-lg font-semibold">
                        ‚ö†Ô∏è –û—Ç–≤–µ—Ç –ø–æ—á—Ç–∏ –≤–µ—Ä–Ω—ã–π, –Ω–æ –ø—Ä–æ–≤–µ—Ä—å —Å–∫–æ–±–∫–∏ –∏ –∫–∞–≤—ã—á–∫–∏. –£–±–µ–¥–∏—Å—å, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ –∏ –Ω–µ—Ç –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤.
                      </p>
                    ) : isCorrect.type === "error" ? (
                      <div className="text-red-800">
                        <p className="text-lg font-semibold mb-3">‚ùå –ü—Ä–æ–≤–µ—Ä—å —Å–≤–æ–π –∫–æ–¥:</p>
                        <ul className="space-y-2">
                          {isCorrect.errors.map((error, index) => (
                            <li key={index} className="flex items-start space-x-2">
                              <span className="text-red-600 mt-1">‚Ä¢</span>
                              <span className="text-base">{error}</span>
                            </li>
                          ))}
                        </ul>
                      </div>
                    ) : (
                      <p className="text-red-800 text-lg font-semibold">‚ùå –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å.</p>
                    )}
                  </div>
                )}

                {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è */}
                {currentStepData.type === "practice" && isCorrect === null && (
                  <div className="bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-lg p-4">
                    <div className="flex items-center">
                      <span className="text-xl mr-2">‚ÑπÔ∏è</span>
                      <p className="text-blue-800 text-lg">–í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É</p>
                    </div>
                  </div>
                )}
              </div>
            </div>
          )}

          {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–¥–∞—á–∏ */}
          {currentStepData.type === "additional_practice" && (
            <div className="bg-gradient-to-r from-indigo-50 to-purple-50 border border-indigo-200 rounded-xl p-6 shadow-lg">
              <div className="flex items-center justify-between mb-4">
                <h3 className="text-xl font-semibold text-indigo-800 flex items-center">{currentStepData.title}</h3>
                <div className="flex items-center space-x-2">
                  <span className="text-sm font-medium text-indigo-700">
                    –í—ã–ø–æ–ª–Ω–µ–Ω–æ: {currentStepData.tasks.filter((_, index) => additionalTaskAnswers[`${index}_correct`] === true).length}/5
                  </span>
                  <div className="w-16 h-2 bg-indigo-200 rounded-full overflow-hidden">
                    <div
                      className="h-full bg-gradient-to-r from-green-500 to-green-600 transition-all duration-300"
                      style={{
                        width: `${(currentStepData.tasks.filter((_, index) => additionalTaskAnswers[`${index}_correct`] === true).length / 5) * 100}%`,
                      }}
                    />
                  </div>
                </div>
              </div>
              <p className="text-indigo-700 mb-6 text-lg">{currentStepData.content}</p>

              <div className="space-y-6">
                {currentStepData.tasks.map((task, index) => (
                  <div key={index} className="bg-white border border-indigo-200 rounded-lg p-4 shadow-md">
                    <h4 className="text-lg font-semibold text-indigo-800 mb-3">–ó–∞–¥–∞—á–∞ {index + 1}:</h4>
                    <p className="text-gray-700 mb-4 text-lg">{task.task}</p>

                    <div className="space-y-3">
                      <textarea
                        value={additionalTaskAnswers[index] || ""}
                        onChange={(e) => {
                          setAdditionalTaskAnswers((prev) => ({
                            ...prev,
                            [index]: e.target.value,
                          }));
                        }}
                        placeholder="‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫–æ–¥ –∑–¥–µ—Å—å..."
                        className="w-full h-40 p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent text-base font-mono resize-none"
                        spellCheck="false"
                      />

                      <div className="flex space-x-3">
                        <button
                          onClick={() => {
                            const answer = additionalTaskAnswers[index] || "";
                            const normalizedUserAnswer = normalizeAnswer(answer);
                            const normalizedCorrectAnswer = normalizeAnswer(task.answer);
                            const isCorrect = normalizedUserAnswer === normalizedCorrectAnswer;

                            // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø–æ–ø—ã—Ç–æ–∫ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
                            if (!isCorrect) {
                              const currentAttempts = additionalTaskAttempts[index] || 0;
                              const newAttempts = currentAttempts + 1;
                              setAdditionalTaskAttempts((prev) => ({
                                ...prev,
                                [index]: newAttempts,
                              }));
                            }

                            let result;
                            if (isCorrect) {
                              result = true;
                            } else {
                              const errors = analyzeCodeErrors(answer, task.answer);
                              result = { type: "error", errors };
                            }

                            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∑–∞–¥–∞—á–∏
                            setAdditionalTaskAnswers((prev) => ({
                              ...prev,
                              [`${index}_correct`]: result,
                            }));
                          }}
                          disabled={!additionalTaskAnswers[index] || additionalTaskAnswers[index].trim() === ""}
                          className={`px-4 py-2 rounded-lg transition-all duration-200 flex items-center space-x-2 shadow-md text-sm ${
                            additionalTaskAnswers[index] && additionalTaskAnswers[index].trim() !== ""
                              ? "bg-gradient-to-r from-indigo-500 to-indigo-600 text-white hover:from-indigo-600 hover:to-indigo-700"
                              : "bg-gray-300 text-gray-500 cursor-not-allowed"
                          }`}
                        >
                          <span>‚úÖ</span>
                          <span>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</span>
                        </button>
                        <button
                          onClick={() => {
                            setAdditionalTaskHints((prev) => ({
                              ...prev,
                              [index]: !prev[index],
                            }));
                          }}
                          className="px-4 py-2 bg-gradient-to-r from-blue-500 to-blue-600 text-white rounded-lg hover:from-blue-600 hover:to-blue-700 transition-all duration-200 flex items-center space-x-2 shadow-md text-sm"
                        >
                          <span>üí°</span>
                          <span>–ü–æ–¥—Å–∫–∞–∑–∫–∞</span>
                        </button>
                        <button
                          onClick={() => {
                            setAdditionalTaskShowAnswer((prev) => ({
                              ...prev,
                              [index]: !prev[index],
                            }));
                          }}
                          disabled={additionalTaskAnswers[`${index}_correct`] !== true && (additionalTaskAttempts[index] || 0) < 5}
                          className={`px-4 py-2 rounded-lg transition-all duration-200 flex items-center space-x-2 shadow-md text-sm ${
                            additionalTaskAnswers[`${index}_correct`] === true || (additionalTaskAttempts[index] || 0) >= 5
                              ? "bg-gradient-to-r from-purple-500 to-purple-600 text-white hover:from-purple-600 hover:to-purple-700"
                              : "bg-gray-300 text-gray-500 cursor-not-allowed"
                          }`}
                        >
                          <span>üéØ</span>
                          <span>–ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç–≤–µ—Ç</span>
                          {additionalTaskAnswers[`${index}_correct`] !== true && (additionalTaskAttempts[index] || 0) < 5 && (
                            <span className="text-xs">({additionalTaskAttempts[index] || 0}/5)</span>
                          )}
                        </button>
                      </div>

                      {additionalTaskHints[index] && (
                        <div className="bg-gradient-to-r from-blue-100 to-indigo-100 border border-blue-300 rounded-lg p-3">
                          <div className="flex items-center mb-2">
                            <span className="text-lg mr-2">üí°</span>
                            <span className="text-blue-800 font-semibold">–ü–æ–¥—Å–∫–∞–∑–∫–∞</span>
                          </div>
                          <div className="text-blue-800 text-base">{task.hint}</div>
                        </div>
                      )}

                      {additionalTaskAnswers[`${index}_correct`] !== undefined && (
                        <div
                          className={`p-3 rounded-lg ${
                            additionalTaskAnswers[`${index}_correct`] === true
                              ? "bg-gradient-to-r from-green-100 to-emerald-100 border border-green-300"
                              : "bg-gradient-to-r from-red-100 to-pink-100 border border-red-300"
                          }`}
                        >
                          {additionalTaskAnswers[`${index}_correct`] === true ? (
                            <p className="text-green-800 text-base font-semibold">üéâ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!</p>
                          ) : additionalTaskAnswers[`${index}_correct`].type === "error" ? (
                            <div className="text-red-800">
                              <p className="text-base font-semibold mb-2">‚ùå –ü—Ä–æ–≤–µ—Ä—å —Å–≤–æ–π –∫–æ–¥:</p>
                              <ul className="space-y-1">
                                {additionalTaskAnswers[`${index}_correct`].errors.map((error, errorIndex) => (
                                  <li key={errorIndex} className="flex items-start space-x-2">
                                    <span className="text-red-600 mt-1">‚Ä¢</span>
                                    <span className="text-sm">{error}</span>
                                  </li>
                                ))}
                              </ul>
                            </div>
                          ) : (
                            <p className="text-red-800 text-base font-semibold">‚ùå –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å.</p>
                          )}
                        </div>
                      )}

                      {/* –ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç–≤–µ—Ç */}
                      {additionalTaskShowAnswer[index] && (
                        <div className="bg-gradient-to-r from-purple-50 to-pink-50 border border-purple-200 rounded-lg p-3">
                          <div className="flex items-center mb-2">
                            <span className="text-lg mr-2">üéØ</span>
                            <span className="text-purple-800 font-semibold">–û—Ç–≤–µ—Ç:</span>
                          </div>
                          <div className="bg-white border border-gray-200 rounded-lg p-4 shadow-lg">
                            <div className="flex items-center mb-2">
                              <span className="text-gray-700 font-medium text-sm"> JavaScript</span>
                            </div>
                            <div className="overflow-y-auto p-3 bg-gray-50 border border-gray-200 rounded">
                              <code className="whitespace-pre text-sm font-mono text-gray-800">
                                {task.answer.split("\n").map((line, lineIndex) => (
                                  <div key={lineIndex} className="leading-relaxed">
                                    {line.split(" ").map((word, wordIndex) => {
                                      let className = "text-gray-800";

                                      if (["const", "let", "var", "function", "if", "else", "return", "require", "module", "exports"].includes(word)) {
                                        className = "text-blue-600 font-semibold";
                                      } else if (word.includes("'") || word.includes('"')) {
                                        className = "text-green-600";
                                      } else if (/^\d+$/.test(word)) {
                                        className = "text-orange-600";
                                      } else if (word.startsWith("//")) {
                                        className = "text-gray-500 italic";
                                      } else if (word.includes("(") && !word.startsWith("(")) {
                                        className = "text-purple-600";
                                      }

                                      return (
                                        <span key={wordIndex} className={className}>
                                          {word}{" "}
                                        </span>
                                      );
                                    })}
                                  </div>
                                ))}
                              </code>
                            </div>
                          </div>
                        </div>
                      )}
                    </div>
                  </div>
                ))}
              </div>

              {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–¥–∞—á */}
              {(() => {
                const completedTasks = currentStepData.tasks.filter((_, index) => additionalTaskAnswers[`${index}_correct`] === true);
                const totalTasks = currentStepData.tasks.length;

                if (completedTasks.length === 0) {
                  return (
                    <div className="bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-lg p-4 mt-6">
                      <div className="flex items-center">
                        <span className="text-xl mr-2">‚ÑπÔ∏è</span>
                        <p className="text-blue-800 text-lg">–í—ã–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ 5 –∑–∞–¥–∞—á –ø—Ä–∞–≤–∏–ª—å–Ω–æ, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É</p>
                      </div>
                    </div>
                  );
                } else if (completedTasks.length < totalTasks) {
                  return (
                    <div className="bg-gradient-to-r from-yellow-50 to-orange-50 border border-yellow-200 rounded-lg p-4 mt-6">
                      <div className="flex items-center">
                        <span className="text-xl mr-2">üéØ</span>
                        <p className="text-yellow-800 text-lg">
                          –û—Ç–ª–∏—á–Ω–æ! –í—ã–ø–æ–ª–Ω–µ–Ω–æ {completedTasks.length} –∏–∑ {totalTasks} –∑–∞–¥–∞—á. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ!
                        </p>
                      </div>
                    </div>
                  );
                } else {
                  return (
                    <div className="bg-gradient-to-r from-green-50 to-emerald-50 border border-green-200 rounded-lg p-4 mt-6">
                      <div className="flex items-center">
                        <span className="text-xl mr-2">üéâ</span>
                        <p className="text-green-800 text-lg font-semibold">–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ! –í—Å–µ –∑–∞–¥–∞—á–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ! –ú–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É.</p>
                      </div>
                    </div>
                  );
                }
              })()}
            </div>
          )}

          {/* –¢–µ–æ—Ä–∏—è —Å –ø—Ä–∞–∫—Ç–∏–∫–æ–π */}
          {currentStepData.type === "theory_practice" && (
            <div className="bg-gradient-to-r from-emerald-50 to-teal-50 border border-emerald-200 rounded-xl p-6 shadow-lg">
              <h3 className="text-xl font-semibold text-emerald-800 mb-4 flex items-center">
                <span className="text-2xl mr-2">üíª</span>
                –°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞
              </h3>

              <div className="space-y-6">
                {/* –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç */}
                <div className="bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-lg p-4">
                  <div className="flex items-center mb-2">
                    <span className="text-xl mr-2">üéØ</span>
                    <span className="text-blue-800 font-semibold">–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:</span>
                  </div>
                  <div className="bg-gray-900 rounded-lg p-4">
                    <pre className="text-green-400 text-lg font-mono">{currentStepData.expectedOutput}</pre>
                  </div>
                </div>

                {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
                <div className="bg-gradient-to-r from-yellow-50 to-orange-50 border border-yellow-200 rounded-lg p-4">
                  <div className="flex items-center mb-2">
                    <span className="text-xl mr-2">üìù</span>
                    <span className="text-yellow-800 font-semibold">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:</span>
                  </div>
                  <ol className="text-yellow-700 text-lg space-y-2">
                    <li>1. –û—Ç–∫—Ä–æ–π—Ç–µ –≤–∞—à —Ä–µ–¥–∞–∫—Ç–æ—Ä –∫–æ–¥–∞ (PyCharm, VS Code, IDLE –∏–ª–∏ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π)</li>
                    <li>2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —Ñ–∞–π–ª —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .py</li>
                    <li>3. –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥ —Å–æ–≥–ª–∞—Å–Ω–æ –∑–∞–¥–∞–Ω–∏—é</li>
                    <li>4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç</li>
                    <li>5. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã–≤–æ–¥ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –æ–∂–∏–¥–∞–µ–º—ã–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º</li>
                    <li>6. –ö–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã, –Ω–∞–∂–º–∏—Ç–µ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"</li>
                  </ol>
                </div>

                {/* –ö–Ω–æ–ø–∫–∏ */}
                <div className="flex space-x-4">
                  <button
                    onClick={() => {
                      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–º–µ—á–∞–µ–º –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ
                      setIsCorrect(true);
                      saveStepAnswer(currentStep, "theory_practice_completed", true);
                    }}
                    className="px-6 py-3 bg-gradient-to-r from-emerald-500 to-emerald-600 text-white rounded-lg hover:from-emerald-600 hover:to-emerald-700 transition-all duration-200 flex items-center space-x-2 shadow-lg"
                  >
                    <span>‚úÖ</span>
                    <span>–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å</span>
                  </button>
                  <button
                    onClick={toggleHint}
                    className="px-6 py-3 bg-gradient-to-r from-blue-500 to-blue-600 text-white rounded-lg hover:from-blue-600 hover:to-blue-700 transition-all duration-200 flex items-center space-x-2 shadow-lg"
                  >
                    <span>üí°</span>
                    <span>–ü–æ–¥—Å–∫–∞–∑–∫–∞</span>
                  </button>
                  <button
                    onClick={() => setShowAnswer((prev) => !prev)}
                    className="px-6 py-3 bg-gradient-to-r from-purple-500 to-purple-600 text-white rounded-lg hover:from-purple-600 hover:to-purple-700 transition-all duration-200 flex items-center space-x-2 shadow-lg"
                  >
                    <span>üéØ</span>
                    <span>{showAnswer ? "–°–∫—Ä—ã—Ç—å –æ—Ç–≤–µ—Ç" : "–ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç–≤–µ—Ç"}</span>
                  </button>
                </div>

                {/* –ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç–≤–µ—Ç */}
                {showAnswer && (
                  <div className="bg-gradient-to-r from-purple-50 to-pink-50 border border-purple-200 rounded-lg p-4">
                    <div className="flex items-center mb-2">
                      <span className="text-xl mr-2">üéØ</span>
                      <span className="text-purple-800 font-semibold">–†–µ—à–µ–Ω–∏–µ:</span>
                    </div>
                    <div className="bg-gradient-to-r from-gray-900 to-gray-800 rounded-xl p-6 shadow-lg">
                      <div className="flex items-center justify-between mb-4">
                        <span className="text-green-400 font-medium flex items-center">üêç Python</span>
                        <button
                          onClick={() => navigator.clipboard.writeText(currentStepData.code)}
                          className="text-gray-400 hover:text-white transition-colors flex items-center space-x-2"
                        >
                          <span>üìã</span>
                          <span>–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å</span>
                        </button>
                      </div>
                      <pre className="text-green-400 overflow-x-auto text-lg">
                        <code>{currentStepData.code}</code>
                      </pre>
                    </div>
                    {currentStepData.explanation && (
                      <div className="bg-gradient-to-r from-blue-50 to-indigo-50 border-l-4 border-blue-400 p-4 rounded-xl mt-4">
                        <div className="flex items-center mb-2">
                          <span className="text-2xl mr-2">üí°</span>
                          <span className="text-blue-800 font-semibold">–û–±—ä—è—Å–Ω–µ–Ω–∏–µ</span>
                        </div>
                        <div className="text-blue-800 text-lg">
                          {currentStepData.explanation.split("\n").map((line, index) => (
                            <p key={index} className="mb-3">
                              {line}
                            </p>
                          ))}
                        </div>
                      </div>
                    )}
                  </div>
                )}

                {showHint && currentStepData.hint && (
                  <div className="bg-gradient-to-r from-blue-100 to-indigo-100 border border-blue-300 rounded-lg p-4">
                    <div className="flex items-center mb-2">
                      <span className="text-xl mr-2">üí°</span>
                      <span className="text-blue-800 font-semibold">–ü–æ–¥—Å–∫–∞–∑–∫–∞</span>
                    </div>
                    <div className="text-blue-800 text-lg">
                      {currentStepData.hint.split("\n").map((line, index) => (
                        <p key={index} className="mb-3">
                          {line}
                        </p>
                      ))}
                    </div>
                  </div>
                )}

                {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ */}
                {isCorrect === null && (
                  <div className="bg-gradient-to-r from-emerald-50 to-teal-50 border border-emerald-200 rounded-lg p-4">
                    <div className="flex items-center">
                      <span className="text-xl mr-2">‚ÑπÔ∏è</span>
                      <p className="text-emerald-800 text-lg">–í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ –≤ —Å–≤–æ–µ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ –∫–æ–¥–∞, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"</p>
                    </div>
                  </div>
                )}

                {isCorrect === true && (
                  <div className="bg-gradient-to-r from-green-100 to-emerald-100 border border-green-300 rounded-lg p-4">
                    <div className="flex items-center">
                      <span className="text-xl mr-2">üéâ</span>
                      <p className="text-green-800 text-lg font-semibold">–û—Ç–ª–∏—á–Ω–æ! –í—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É.</p>
                    </div>
                  </div>
                )}
              </div>
            </div>
          )}

          {/* –¢–µ—Å—Ç */}
          {currentStepData.type === "quiz" && (
            <div className="bg-gradient-to-r from-purple-50 to-pink-50 border border-purple-200 rounded-xl p-6 shadow-lg">
              <h3 className="text-xl font-semibold text-purple-800 mb-4 flex items-center">
                <span className="text-2xl mr-2">üß†</span>
                –í–æ–ø—Ä–æ—Å
              </h3>
              <p className="text-purple-700 mb-6 text-lg">{currentStepData.question}</p>

              <div className="space-y-3">
                {currentStepData.options.map((option, index) => (
                  <label key={index} className="flex items-center space-x-3 cursor-pointer p-3 rounded-lg hover:bg-purple-100 transition-colors">
                    <input
                      type="radio"
                      name="quiz"
                      value={index}
                      checked={userAnswer === index.toString()}
                      onChange={handleQuizAnswerChange}
                      className="text-purple-600 focus:ring-purple-500"
                    />
                    <span className="text-purple-700 text-lg">{option}</span>
                  </label>
                ))}
              </div>

              <div className="flex space-x-4 mt-4">
                <button
                  onClick={() => {
                    console.log('=== –ö–ù–û–ü–ö–ê "–ü–†–û–í–ï–†–ò–¢–¨ –û–¢–í–ï–¢" –ù–ê–ñ–ê–¢–ê ===');
                    console.log("userAnswer –ø–µ—Ä–µ–¥ –≤—ã–∑–æ–≤–æ–º:", userAnswer);
                    console.log("typeof userAnswer:", typeof userAnswer);
                    console.log("disabled:", !userAnswer);
                    handleAnswerSubmit();
                  }}
                  disabled={!userAnswer}
                  className={`px-6 py-3 rounded-lg transition-all duration-200 flex items-center space-x-2 shadow-lg ${
                    userAnswer
                      ? "bg-gradient-to-r from-purple-500 to-purple-600 text-white hover:from-purple-600 hover:to-purple-700"
                      : "bg-gray-300 text-gray-500 cursor-not-allowed"
                  }`}
                >
                  <span>‚úÖ</span>
                  <span>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç</span>
                </button>
                <button
                  onClick={toggleHint}
                  className="px-6 py-3 bg-gradient-to-r from-blue-500 to-blue-600 text-white rounded-lg hover:from-blue-600 hover:to-blue-700 transition-all duration-200 flex items-center space-x-2 shadow-lg"
                >
                  <span>üí°</span>
                  <span>–ü–æ–¥—Å–∫–∞–∑–∫–∞</span>
                </button>
              </div>

              {showHint && currentStepData.hint && (
                <div className="bg-gradient-to-r from-blue-100 to-indigo-100 border border-blue-300 rounded-lg p-4 mt-4">
                  <div className="flex items-center mb-2">
                    <span className="text-xl mr-2">üí°</span>
                    <span className="text-blue-800 font-semibold">–ü–æ–¥—Å–∫–∞–∑–∫–∞</span>
                  </div>
                  <div className="text-blue-800 text-lg">
                    {currentStepData.hint.split("\n").map((line, index) => (
                      <p key={index} className="mb-3">
                        {line}
                      </p>
                    ))}
                  </div>
                </div>
              )}

              {isCorrect !== null && (
                <div
                  className={`mt-4 p-4 rounded-lg ${
                    isCorrect
                      ? "bg-gradient-to-r from-green-100 to-emerald-100 border border-green-300"
                      : "bg-gradient-to-r from-red-100 to-pink-100 border border-red-300"
                  }`}
                >
                  <p className={`text-lg font-semibold ${isCorrect ? "text-green-800" : "text-red-800"}`}>
                    {isCorrect
                      ? "üéâ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! input() –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É, –¥–∞–∂–µ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª —á–∏—Å–ª–æ. –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É."
                      : "‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."}
                  </p>
                </div>
              )}

              {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å */}
              {currentStepData.type === "quiz" && isCorrect === null && (
                <div className="bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-lg p-4 mt-4">
                  <div className="flex items-center">
                    <span className="text-xl mr-2">‚ÑπÔ∏è</span>
                    <p className="text-blue-800 text-lg">
                      {userAnswer ? "–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É" : "–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å –≤—ã—à–µ"}
                    </p>
                  </div>
                </div>
              )}
            </div>
          )}

          {/* –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–∑ –∫—É—Ä—Å–∞ */}
          {currentStepData.reminders && <ReminderBlock reminders={currentStepData.reminders} />}

          {/* –ß—Ç–æ –º—ã –∏–∑—É—á–∏–ª–∏ */}
          {currentStepData.whatWeLearned && (
            <div className="bg-gradient-to-r from-green-50 to-emerald-50 border border-green-200 rounded-xl p-6 shadow-lg">
              <h3 className="text-xl font-semibold text-green-800 mb-4 flex items-center">
                <span className="text-2xl mr-2">‚úÖ</span>
                –ß—Ç–æ –º—ã –∏–∑—É—á–∏–ª–∏
              </h3>
              <div className="space-y-3">
                {currentStepData.whatWeLearned.map((item, index) => (
                  <div key={index} className="text-green-800 text-lg">
                    {parseJSXInText(item).map((part, partIndex) =>
                      part.type === "code" ? (
                        <CodeHighlight key={partIndex}>{part.content}</CodeHighlight>
                      ) : part.type === "warning" ? (
                        <WarningHighlight key={partIndex}>{part.content}</WarningHighlight>
                      ) : (
                        <span key={partIndex}>{part.content}</span>
                      )
                    )}
                  </div>
                ))}
              </div>
            </div>
          )}

          {/* –ö—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ */}
          {currentStepData.summary && (
            <div className="bg-gradient-to-r from-purple-50 to-pink-50 border border-purple-200 rounded-xl p-6 shadow-lg">
              <h3 className="text-xl font-semibold text-purple-800 mb-4 flex items-center">
                <span className="text-2xl mr-2">üéØ</span>
                –ö—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ —É—Ä–æ–∫–∞
              </h3>
              <div className="space-y-3">
                {currentStepData.summary.map((item, index) => (
                  <div key={index} className="text-purple-800 text-lg">
                    {parseJSXInText(item).map((part, partIndex) =>
                      part.type === "code" ? (
                        <CodeHighlight key={partIndex}>{part.content}</CodeHighlight>
                      ) : part.type === "warning" ? (
                        <WarningHighlight key={partIndex}>{part.content}</WarningHighlight>
                      ) : (
                        <span key={partIndex}>{part.content}</span>
                      )
                    )}
                  </div>
                ))}
              </div>
            </div>
          )}

          {/* –ß—Ç–æ –¥–∞–ª—å—à–µ */}
          {currentStepData.whatNext && (
            <div className="bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-xl p-6 shadow-lg">
              <h3 className="text-xl font-semibold text-blue-800 mb-4 flex items-center">
                <span className="text-2xl mr-2">üöÄ</span>
                –ß—Ç–æ –¥–∞–ª—å—à–µ
              </h3>
              <div className="space-y-3">
                {currentStepData.whatNext.map((item, index) => (
                  <div key={index} className="text-blue-800 text-lg">
                    {parseJSXInText(item).map((part, partIndex) =>
                      part.type === "code" ? (
                        <CodeHighlight key={partIndex}>{part.content}</CodeHighlight>
                      ) : part.type === "warning" ? (
                        <WarningHighlight key={partIndex}>{part.content}</WarningHighlight>
                      ) : (
                        <span key={partIndex}>{part.content}</span>
                      )
                    )}
                  </div>
                ))}
              </div>
            </div>
          )}
        </motion.div>
      </div>

      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
      <div className="flex justify-between items-center">
        <button
          onClick={handlePrevious}
          disabled={currentStep === 0}
          className={`px-6 py-3 rounded-lg transition-all duration-200 flex items-center space-x-2 ${
            currentStep === 0
              ? "bg-gray-300 text-gray-500 cursor-not-allowed"
              : "bg-gradient-to-r from-gray-600 to-gray-700 text-white hover:from-gray-700 hover:to-gray-800 shadow-lg"
          }`}
        >
          <span>‚Üê</span>
          <span>–ù–∞–∑–∞–¥</span>
        </button>

        <div className="flex space-x-4">
          <Link
            to="/python-course"
            className="px-6 py-3 bg-gradient-to-r from-gray-500 to-gray-600 text-white rounded-lg hover:from-gray-600 hover:to-gray-700 transition-all duration-200 flex items-center space-x-2 shadow-lg"
          >
            <span>üìö</span>
            <span>–ö Python –∫—É—Ä—Å—É</span>
          </Link>

          {lessonCompleted ? (
            <div className="px-6 py-3 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-lg flex items-center space-x-2 shadow-lg animate-pulse">
              <span>üéâ</span>
              <span>–£—Ä–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω! –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ...</span>
            </div>
          ) : isLessonPassed ? (
            <button
              onClick={() => {
                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å —É—Ä–æ–∫–∞ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è
                clearLessonProgress();
                setLessonCompleted(false);
                setShowCongratulations(false);
                setIsLessonPassed(false);
                updateCurrentStep(0, steps.length);
                setUserAnswer("");
                setIsCorrect(null);
                setShowHint(false);

                // –£–¥–∞–ª—è–µ–º —É—Ä–æ–∫ –∏–∑ localStorage –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Å–±—Ä–æ—Å–∞
                try {
                  const completedLessons = JSON.parse(localStorage.getItem("completedLessons") || "[]");
                  const updatedLessons = completedLessons.filter((id) => id !== 3);
                  localStorage.setItem("completedLessons", JSON.stringify(updatedLessons));
                  console.log("–£—Ä–æ–∫ —É–¥–∞–ª–µ–Ω –∏–∑ localStorage –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è");
                } catch (error) {
                  console.error("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —É—Ä–æ–∫–∞ –∏–∑ localStorage:", error);
                }
              }}
              className="px-6 py-3 bg-gradient-to-r from-blue-500 to-blue-600 text-white rounded-lg hover:from-blue-600 hover:to-blue-700 transition-all duration-200 flex items-center space-x-2 shadow-lg"
            >
              <span>üîÑ</span>
              <span>–ü–æ–≤—Ç–æ—Ä–∏—Ç—å —É—Ä–æ–∫</span>
            </button>
          ) : currentStep === steps.length - 1 && isCorrect === true ? (
            <button
              onClick={handleLessonCompletion}
              className="px-6 py-3 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-lg hover:from-green-600 hover:to-green-700 transition-all duration-200 flex items-center space-x-2 shadow-lg"
            >
              <span>üéâ</span>
              <span>–ó–∞–≤–µ—Ä—à–∏—Ç—å —É—Ä–æ–∫</span>
            </button>
          ) : currentStep === steps.length - 1 ? (
            <div className="px-6 py-3 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-lg flex items-center space-x-2 shadow-lg">
              <span>üéØ</span>
              <span>–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å –≤—ã—à–µ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Ä–æ–∫–∞</span>
            </div>
          ) : (
            <button
              onClick={handleNext}
              disabled={(() => {
                const currentStepData = steps[currentStep];
                if (currentStepData.type === "practice" || currentStepData.type === "quiz" || currentStepData.type === "theory_practice") {
                  // –ï—Å–ª–∏ —É—Ä–æ–∫ —É–∂–µ –±—ã–ª –ø—Ä–æ–π–¥–µ–Ω, –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
                  return isCorrect !== true && !isLessonPassed;
                } else if (currentStepData.type === "additional_practice") {
                  // –î–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–¥–∞—á –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ 5 –∑–∞–¥–∞—á –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ
                  const completedTasks = currentStepData.tasks.filter((_, index) => additionalTaskAnswers[`${index}_correct`] === true);
                  return completedTasks.length < 5;
                }
                return false;
              })()}
              className={`px-6 py-3 rounded-lg transition-all duration-200 flex items-center space-x-2 ${(() => {
                const currentStepData = steps[currentStep];
                if (currentStepData.type === "practice" || currentStepData.type === "quiz" || currentStepData.type === "theory_practice") {
                  return isCorrect !== true && !isLessonPassed
                    ? "bg-gray-300 text-gray-500 cursor-not-allowed"
                    : "bg-gradient-to-r from-green-500 to-green-600 text-white hover:from-green-600 hover:to-green-700 shadow-lg";
                } else if (currentStepData.type === "additional_practice") {
                  const completedTasks = currentStepData.tasks.filter((_, index) => additionalTaskAnswers[`${index}_correct`] === true);
                  return completedTasks.length < 5
                    ? "bg-gray-300 text-gray-500 cursor-not-allowed"
                    : "bg-gradient-to-r from-green-500 to-green-600 text-white hover:from-green-600 hover:to-green-700 shadow-lg";
                }
                return "bg-gradient-to-r from-green-500 to-green-600 text-white hover:from-green-600 hover:to-green-700 shadow-lg";
              })()}`}
            >
              <span>–î–∞–ª–µ–µ</span>
              <span>‚Üí</span>
            </button>
          )}
        </div>
      </div>

      {/* –ú–æ—Ç–∏–≤–∞—Ü–∏—è */}
      {currentStepData.motivation && (
        <div className="bg-gradient-to-r from-yellow-50 to-orange-50 border-l-4 border-yellow-400 p-4 rounded-xl mt-8">
          <div className="flex items-center mb-2">
            <span className="text-xl mr-2">üí™</span>
            <span className="text-yellow-800 font-semibold">–ú–æ—Ç–∏–≤–∞—Ü–∏—è:</span>
          </div>
          <div className="text-yellow-800 text-lg">
            {parseJSXInText(currentStepData.motivation).map((part, partIndex) =>
              part.type === "code" ? (
                <CodeHighlight key={partIndex}>{part.content}</CodeHighlight>
              ) : part.type === "warning" ? (
                <WarningHighlight key={partIndex}>{part.content}</WarningHighlight>
              ) : (
                <span key={partIndex}>{part.content}</span>
              )
            )}
          </div>
        </div>
      )}
    </motion.div>
  );
}

export default ExpressLesson1;
