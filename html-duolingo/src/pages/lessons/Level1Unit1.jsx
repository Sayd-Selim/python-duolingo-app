import React, { useState, useEffect, useCallback, useMemo } from 'react';
import { motion } from 'framer-motion';
import { Link, useNavigate } from 'react-router-dom';
import { useLessonProgress } from '../../hooks/useLessonProgress';
import { useAuth } from '../../context/AuthContext';
import { useProgress } from '../../context/ProgressContext';

function Level1Unit1() {
  const [showHint, setShowHint] = useState(false);
  const [userAnswer, setUserAnswer] = useState('');
  const [isCorrect, setIsCorrect] = useState(null);
  const [lessonCompleted, setLessonCompleted] = useState(false);
  const [showCongratulations, setShowCongratulations] = useState(false);
  const [isLessonPassed, setIsLessonPassed] = useState(false);
  const navigate = useNavigate();
  // –ó–ê–ö–û–ú–ú–ï–ù–¢–ò–†–û–í–ê–ù–û: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  // const { user } = useAuth();
  const { refreshUserProgress } = useProgress();
  
  // –°–æ–∑–¥–∞–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const user = { userId: 'demo_user_123' };
  
  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å localStorage
  const saveLessonProgress = (lessonId) => {
    try {
      const completedLessons = JSON.parse(localStorage.getItem('completedLessons') || '[]');
      if (!completedLessons.includes(lessonId)) {
        completedLessons.push(lessonId);
        localStorage.setItem('completedLessons', JSON.stringify(completedLessons));
      }
      console.log('–£—Ä–æ–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ localStorage:', lessonId);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ localStorage:', error);
    }
  };

  const checkLessonProgress = (lessonId) => {
    try {
      const completedLessons = JSON.parse(localStorage.getItem('completedLessons') || '[]');
      return completedLessons.includes(lessonId);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ localStorage:', error);
      return false;
    }
  };
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π —Ö—É–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
  const {
    currentStep,
    lessonProgress,
    isLoading,
    updateCurrentStep,
    saveStepAnswer,
    getStepAnswer,
    isLessonCompleted,
    completeLesson,
    clearLessonProgress,
    loadProgressFromServer
  } = useLessonProgress(1);

  // –ú–µ–º–æ–∏–∑–∏—Ä—É–µ–º —à–∞–≥–∏ —É—Ä–æ–∫–∞
  const steps = useMemo(() => [
    {
      type: 'intro',
      title: 'üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä Python! üêç',
      content: 'üéØ Python - —ç—Ç–æ –≤—ã—Å–æ–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π –∏–∑–≤–µ—Å—Ç–µ–Ω —Å–≤–æ–µ–π –ø—Ä–æ—Å—Ç–æ—Ç–æ–π –∏ —á–∏—Ç–∞–µ–º–æ—Å—Ç—å—é. –û–Ω –æ—Ç–ª–∏—á–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤.\n\nüí° –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ Python –∫–∞–∫ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞ –º–µ–∂–¥—É –≤–∞–º–∏ –∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º. –í—ã –≥–æ–≤–æ—Ä–∏—Ç–µ –Ω–∞ –ø—Ä–æ—Å—Ç–æ–º —è–∑—ã–∫–µ, –∞ Python –ø–µ—Ä–µ–≤–æ–¥–∏—Ç —ç—Ç–æ –≤ –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–ø—å—é—Ç–µ—Ä –ø–æ–Ω–∏–º–∞–µ—Ç!\n\nüöÄ –ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –≤ –º–∏—Ä –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è?',
      code: null
    },
    {
      type: 'theory',
      title: 'ü§î –ü–æ—á–µ–º—É Python?',
      content: '‚ú® Python –ø–æ–ø—É–ª—è—Ä–µ–Ω –±–ª–∞–≥–æ–¥–∞—Ä—è:\n\nüìù –ü—Ä–æ—Å—Ç–æ–º—É –∏ –ø–æ–Ω—è—Ç–Ω–æ–º—É —Å–∏–Ω—Ç–∞–∫—Å–∏—Å—É\nüìö –ë–æ–ª—å—à–æ–º—É –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –±–∏–±–ª–∏–æ—Ç–µ–∫\nüë• –ê–∫—Ç–∏–≤–Ω–æ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É\nüåç –®–∏—Ä–æ–∫–æ–º—É –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –æ–±–ª–∞—Å—Ç—è—Ö\n\nüéÆ Python ‚Äî –∫–∞–∫ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä LEGO –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤. –£ –≤–∞—Å –µ—Å—Ç—å –≥–æ—Ç–æ–≤—ã–µ –±–ª–æ–∫–∏ (–±–∏–±–ª–∏–æ—Ç–µ–∫–∏), –∏ –≤—ã –ø—Ä–æ—Å—Ç–æ —Å–æ–µ–¥–∏–Ω—è–µ—Ç–µ –∏—Ö, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —á—Ç–æ-—Ç–æ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ–µ!\n\nüí™ –ù–∞—á–Ω–µ–º —Å –ø—Ä–æ—Å—Ç–æ–≥–æ –∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –ø–µ—Ä–µ–π–¥–µ–º –∫ —Å–ª–æ–∂–Ω–æ–º—É!',
      code: null
    },
    {
      type: 'code',
      title: 'üéâ –í–∞—à–∞ –ø–µ—Ä–≤–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞',
      content: 'üéØ –í Python –¥–∞–∂–µ —Å–∞–º–∞—è –ø—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –º–æ–∂–µ—Ç —Å–æ—Å—Ç–æ—è—Ç—å –≤—Å–µ–≥–æ –∏–∑ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏:\n\nüí≠ –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ, —á—Ç–æ print() ‚Äî —ç—Ç–æ –∫–∞–∫ –∫—Ä–∏–∫–Ω—É—Ç—å "–≠–π!" –≤ –∫–æ–º–Ω–∞—Ç–µ. –í—ã –≥–æ–≤–æ—Ä–∏—Ç–µ —á—Ç–æ-—Ç–æ, –∏ –≤—Å–µ —ç—Ç–æ —Å–ª—ã—à–∞—Ç. –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –∫–æ–º–ø—å—é—Ç–µ—Ä "—Å–ª—ã—à–∏—Ç" –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —ç—Ç–æ –Ω–∞ —ç–∫—Ä–∞–Ω–µ.\n\nüé™ –≠—Ç–æ –∫–∞–∫ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ü–µ–Ω–µ - –≤—ã –≥–æ–≤–æ—Ä–∏—Ç–µ, –∞ –∑—Ä–∏—Ç–µ–ª–∏ (–∫–æ–º–ø—å—é—Ç–µ—Ä) –≤–∞—Å —Å–ª—É—à–∞—é—Ç!',
      code: 'print("Hello, World!")',
      explanation: 'üîç print() ‚Äî —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞ Python: "–ø–æ–∫–∞–∂–∏ –Ω–∞ —ç–∫—Ä–∞–Ω–µ". –°—Ç—Ä–æ–∫–∞ ‚Äî —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç –≤ –∫–∞–≤—ã—á–∫–∞—Ö: "Hello, World!"\n\nüìù –≠—Ç–æ –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –¥–æ—Å–∫–µ ‚Äî –≤—ã –±–µ—Ä–µ—Ç–µ –º–µ–ª (print) –∏ –ø–∏—à–µ—Ç–µ —Å–ª–æ–≤–∞ (—Ç–µ–∫—Å—Ç –≤ –∫–∞–≤—ã—á–∫–∞—Ö).\n\nüé® –¢–µ–ø–µ—Ä—å –≤—ã —Ö—É–¥–æ–∂–Ω–∏–∫, –∞ —ç–∫—Ä–∞–Ω - –≤–∞—à —Ö–æ–ª—Å—Ç!'
    },
    {
      type: 'practice',
      title: 'üéØ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–∞–º–∏!',
      content: '‚úçÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç "–ü—Ä–∏–≤–µ—Ç, Python!"\n\nüó£Ô∏è –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ, —á—Ç–æ –≤—ã —É—á–∏—Ç–µ –∫–æ–º–ø—å—é—Ç–µ—Ä –≥–æ–≤–æ—Ä–∏—Ç—å –ø–æ-—Ä—É—Å—Å–∫–∏. –í—ã –¥–∞–µ—Ç–µ –µ–º—É –∫–æ–º–∞–Ω–¥—É "—Å–∫–∞–∂–∏ —ç—Ç–æ" –∏ —É–∫–∞–∑—ã–≤–∞–µ—Ç–µ, —á—Ç–æ –∏–º–µ–Ω–Ω–æ —Å–∫–∞–∑–∞—Ç—å.\n\nüé≠ –≠—Ç–æ –∫–∞–∫ —Ä–µ–ø–µ—Ç–∏—Ü–∏—è —Å–ø–µ–∫—Ç–∞–∫–ª—è - –≤—ã —É—á–∏—Ç–µ –∞–∫—Ç–µ—Ä–∞ (–∫–æ–º–ø—å—é—Ç–µ—Ä) –ø—Ä–æ–∏–∑–Ω–æ—Å–∏—Ç—å —Å–≤–æ–∏ —Ä–µ–ø–ª–∏–∫–∏!',
      code: 'print("–ü—Ä–∏–≤–µ—Ç, Python!")',
      task: '–í—ã–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç "–ü—Ä–∏–≤–µ—Ç, Python!"',
      answer: 'print("–ü—Ä–∏–≤–µ—Ç, Python!")',
      hint: 'üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é print() –∏ –ø–æ–º–µ—Å—Ç–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤ –∫–∞–≤—ã—á–∫–∏. –ü–æ–º–Ω–∏—Ç–µ: print() ‚Äî —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞ Python –¥–ª—è –≤—ã–≤–æ–¥–∞ –Ω–∞ —ç–∫—Ä–∞–Ω.\n\nüìù –≠—Ç–æ –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å –ø–∏—Å—å–º–æ ‚Äî —É –≤–∞—Å –µ—Å—Ç—å –∫–æ–Ω–≤–µ—Ä—Ç (print) –∏ –≤—ã –∫–ª–∞–¥–µ—Ç–µ –≤ –Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ (—Ç–µ–∫—Å—Ç –≤ –∫–∞–≤—ã—á–∫–∞—Ö).\n\nüéØ –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ —Å–∫–æ–±–∫–∏ –∏ –∫–∞–≤—ã—á–∫–∏!'
    },
    {
      type: 'theory',
      title: 'üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ Python',
      content: 'üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø–æ–º–æ–≥–∞—é—Ç –æ–±—ä—è—Å–Ω–∏—Ç—å –∫–æ–¥. –û–Ω–∏ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å —Å–∏–º–≤–æ–ª–∞ # –∏ –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã.\n\nüìñ –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫–∞–∫ –∑–∞–º–µ—Ç–∫–∏ –Ω–∞ –ø–æ–ª—è—Ö –∫–Ω–∏–≥–∏. –í—ã —á–∏—Ç–∞–µ—Ç–µ –∫–Ω–∏–≥—É (–∫–æ–¥), –∞ –∑–∞–º–µ—Ç–∫–∏ (–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏) –ø–æ–º–æ–≥–∞—é—Ç –ø–æ–Ω—è—Ç—å, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç. –ö–æ–º–ø—å—é—Ç–µ—Ä —á–∏—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é, –∞ –≤–∞—à–∏ –∑–∞–º–µ—Ç–∫–∏ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç.\n\nüé® –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ - —ç—Ç–æ –≤–∞—à–∏ –ª–∏—á–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏ –≤ –∫–æ–¥–µ!',
      code: '# –≠—Ç–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π\nprint("–≠—Ç–æ –∫–æ–¥")  # –ê —ç—Ç–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏',
      explanation: 'üîç –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π ‚Äî —ç—Ç–æ –ø–æ–¥—Å–∫–∞–∑–∫–∞ –≤ –∫–æ–¥–µ –¥–ª—è —Ç–µ–±—è –∏–ª–∏ –¥—Ä—É–≥–∏—Ö. –°–∏–º–≤–æ–ª # –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è "—Å–∏–º–≤–æ–ª –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è" –∏ –≥–æ–≤–æ—Ä–∏—Ç Python: "–Ω–µ –≤—ã–ø–æ–ª–Ω—è–π —ç—Ç—É —Å—Ç—Ä–æ–∫—É, –æ–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è".\n\nüìå –≠—Ç–æ –∫–∞–∫ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –∑–Ω–∞–∫ –Ω–∞ –≤–∞–∂–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ ‚Äî –≤—ã –ø–æ–º–µ—á–∞–µ—Ç–µ —á—Ç–æ-—Ç–æ –≤–∞–∂–Ω–æ–µ, –Ω–æ —ç—Ç–æ –Ω–µ —á–∞—Å—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞.\n\nüí≠ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø–æ–º–æ–≥–∞—é—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –≤–∞–º, –Ω–æ –∏ –¥—Ä—É–≥–∏–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞–º –ø–æ–Ω—è—Ç—å –≤–∞—à –∫–æ–¥!'
    },
    {
      type: 'practice',
      title: 'üìù –ó–∞–¥–∞—á–∞ 1: –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ',
      content: 'üéØ –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ "–î–æ–±—Ä—ã–π –¥–µ–Ω—å!"\n\nüí≠ –≠—Ç–æ –ø—Ä–æ—Å—Ç–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –ø–æ–º–æ–∂–µ—Ç –∑–∞–∫—Ä–µ–ø–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ print().\n\nüé™ –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ, —á—Ç–æ –≤—ã —Å–æ–∑–¥–∞–µ—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É-–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π!',
      code: 'print("–î–æ–±—Ä—ã–π –¥–µ–Ω—å!")',
      task: '–í—ã–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç "–î–æ–±—Ä—ã–π –¥–µ–Ω—å!"',
      answer: 'print("–î–æ–±—Ä—ã–π –¥–µ–Ω—å!")',
      hint: 'üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é print() —Å —Ç–µ–∫—Å—Ç–æ–º –≤ –∫–∞–≤—ã—á–∫–∞—Ö. –≠—Ç–æ –æ—á–µ–Ω—å –ø–æ—Ö–æ–∂–µ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ!\n\nüìù –§–æ—Ä–º–∞—Ç: print("–≤–∞—à —Ç–µ–∫—Å—Ç")\n\nüéØ –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ –∫–∞–≤—ã—á–∫–∏ –∏ —Å–∫–æ–±–∫–∏!'
    },
    {
      type: 'practice',
      title: 'üìù –ó–∞–¥–∞—á–∞ 2: –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π',
      content: 'üéØ –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç "–ú–æ–π –ø–µ—Ä–≤—ã–π –∫–æ–¥"\n\nüí≠ –î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, –æ–±—ä—è—Å–Ω—è—é—â–∏–π, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∞.\n\nüé® –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø–æ–º–æ–≥–∞—é—Ç –ø–æ–Ω—è—Ç—å –∫–æ–¥ –∏ —Å–µ–±–µ, –∏ –¥—Ä—É–≥–∏–º!',
      code: '# –≠—Ç–æ –º–æ—è –ø–µ—Ä–≤–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞\nprint("–ú–æ–π –ø–µ—Ä–≤—ã–π –∫–æ–¥")',
      task: '–°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º –∏ –≤—ã–≤–æ–¥–æ–º "–ú–æ–π –ø–µ—Ä–≤—ã–π –∫–æ–¥"',
      answer: '# –≠—Ç–æ –º–æ—è –ø–µ—Ä–≤–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞\nprint("–ú–æ–π –ø–µ—Ä–≤—ã–π –∫–æ–¥")',
      hint: 'üí° –ù–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è (—Å–∏–º–≤–æ–ª #), –∑–∞—Ç–µ–º –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ –¥–æ–±–∞–≤—å—Ç–µ print() —Å —Ç–µ–∫—Å—Ç–æ–º.\n\nüìù –°—Ç—Ä—É–∫—Ç—É—Ä–∞:\n# –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π\nprint("—Ç–µ–∫—Å—Ç")\n\nüéØ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–æ–ª–∂–µ–Ω –æ–±—ä—è—Å–Ω—è—Ç—å, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∞!'
    },
    {
      type: 'practice',
      title: 'üìù –ó–∞–¥–∞—á–∞ 3: –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –≤—ã–≤–æ–¥',
      content: 'üéØ –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç –¥–≤–µ —Å—Ç—Ä–æ–∫–∏:\n1. "Python - —ç—Ç–æ –∫—Ä—É—Ç–æ!"\n2. "–Ø –∏–∑—É—á–∞—é –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ"\n\nüí≠ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–≤–∞ print() –ø–æ–¥—Ä—è–¥.\n\nüé™ –≠—Ç–æ –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å –¥–≤–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –¥–æ—Å–∫–µ!',
      code: 'print("Python - —ç—Ç–æ –∫—Ä—É—Ç–æ!")\nprint("–Ø –∏–∑—É—á–∞—é –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ")',
      task: '–í—ã–≤–µ–¥–∏—Ç–µ –¥–≤–µ —Å—Ç—Ä–æ–∫–∏: "Python - —ç—Ç–æ –∫—Ä—É—Ç–æ!" –∏ "–Ø –∏–∑—É—á–∞—é –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ"',
      answer: 'print("Python - —ç—Ç–æ –∫—Ä—É—Ç–æ!")\nprint("–Ø –∏–∑—É—á–∞—é –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ")',
      hint: 'üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–≤–∞ print() –æ–¥–∏–Ω –∑–∞ –¥—Ä—É–≥–∏–º. –ö–∞–∂–¥—ã–π print() –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ.\n\nüìù –§–æ—Ä–º–∞—Ç:\nprint("–ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞")\nprint("–≤—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞")\n\nüéØ –ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º print()!'
    },
    {
      type: 'practice',
      title: 'üìù –ó–∞–¥–∞—á–∞ 4: –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ —Å—Ç—Ä–æ–∫–µ',
      content: 'üéØ –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç "–†–µ–∑—É–ª—å—Ç–∞—Ç: 42" —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º –≤ —Ç–æ–π –∂–µ —Å—Ç—Ä–æ–∫–µ\n\nüí≠ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –≤ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏ –ø–æ—Å–ª–µ –∫–æ–¥–∞.\n\nüé® –≠—Ç–æ —É–¥–æ–±–Ω–æ –¥–ª—è –∫—Ä–∞—Ç–∫–∏—Ö –ø–æ—è—Å–Ω–µ–Ω–∏–π!',
      code: 'print("–†–µ–∑—É–ª—å—Ç–∞—Ç: 42")  # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏—è',
      task: '–í—ã–≤–µ–¥–∏—Ç–µ "–†–µ–∑—É–ª—å—Ç–∞—Ç: 42" —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º –≤ —Ç–æ–π –∂–µ —Å—Ç—Ä–æ–∫–µ',
      answer: 'print("–†–µ–∑—É–ª—å—Ç–∞—Ç: 42")  # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏—è',
      hint: 'üí° –°–Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏—Ç–µ print(), –∑–∞—Ç–µ–º –¥–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å —Å–∏–º–≤–æ–ª–æ–º # –≤ —Ç–æ–π –∂–µ —Å—Ç—Ä–æ–∫–µ.\n\nüìù –§–æ—Ä–º–∞—Ç: print("—Ç–µ–∫—Å—Ç")  # –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π\n\nüéØ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏–¥–µ—Ç –ø–æ—Å–ª–µ –∫–æ–¥–∞, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–π –ø—Ä–æ–±–µ–ª–∞–º–∏!'
    },
    {
      type: 'practice',
      title: 'üìù –ó–∞–¥–∞—á–∞ 5: –°–ª–æ–∂–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞',
      content: 'üéØ –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç:\n1. "–ù–∞—á–∏–Ω–∞–µ–º –∏–∑—É—á–µ–Ω–∏–µ Python"\n2. "–≠—Ç–æ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ!"\n\nüí≠ –î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, –æ–±—ä—è—Å–Ω—è—é—â–∏–µ –∫–∞–∂–¥—ã–π —à–∞–≥.\n\nüé™ –≠—Ç–æ –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å –º–∏–Ω–∏-–∏—Å—Ç–æ—Ä–∏—é —Å –ø–æ—è—Å–Ω–µ–Ω–∏—è–º–∏!',
      code: '# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è Python\nprint("–ù–∞—á–∏–Ω–∞–µ–º –∏–∑—É—á–µ–Ω–∏–µ Python")  # –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\nprint("–≠—Ç–æ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ!")  # –í—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
      task: '–°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏, –≤—ã–≤–æ–¥—è—â—É—é "–ù–∞—á–∏–Ω–∞–µ–º –∏–∑—É—á–µ–Ω–∏–µ Python" –∏ "–≠—Ç–æ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ!"',
      answer: '# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è Python\nprint("–ù–∞—á–∏–Ω–∞–µ–º –∏–∑—É—á–µ–Ω–∏–µ Python")  # –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\nprint("–≠—Ç–æ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ!")  # –í—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
      hint: 'üí° –ù–∞—á–Ω–∏—Ç–µ —Å –æ–±—â–µ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è, –∑–∞—Ç–µ–º –¥–æ–±–∞–≤—å—Ç–µ –¥–≤–∞ print() —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏ –≤ —Å—Ç—Ä–æ–∫–∞—Ö.\n\nüìù –°—Ç—Ä—É–∫—Ç—É—Ä–∞:\n# –æ–±—â–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π\nprint("—Ç–µ–∫—Å—Ç1")  # –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π1\nprint("—Ç–µ–∫—Å—Ç2")  # –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π2\n\nüéØ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¥–æ–ª–∂–Ω—ã –æ–±—ä—è—Å–Ω—è—Ç—å, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –∫–∞–∂–¥–∞—è —á–∞—Å—Ç—å!'
    },
    {
      type: 'quiz',
      title: 'üß† –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è',
      question: '–ö–∞–∫–æ–π —Å–∏–º–≤–æ–ª –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –≤ Python?',
      options: ['//', '#', '/*', '--'],
      correct: 1,
      hint: 'üí° –ü–æ–¥—É–º–∞–π: —á—Ç–æ –≤ –∫–æ–¥–µ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è, –∞ –ø—Ä–æ—Å—Ç–æ –æ–±—ä—è—Å–Ω—è–µ—Ç? –ö–∞–∫–æ–π —Å–∏–º–≤–æ–ª –≥–æ–≤–æ—Ä–∏—Ç Python "–Ω–µ –≤—ã–ø–æ–ª–Ω—è–π —ç—Ç—É —Å—Ç—Ä–æ–∫—É"?\n\nüîç –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ: –∫–∞–∫–æ–π –∑–Ω–∞–∫ –≤—ã –±—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –Ω–∞ –≤–∞–∂–Ω–æ–π –∑–∞–º–µ—Ç–∫–µ, —á—Ç–æ–±—ã –≤—ã–¥–µ–ª–∏—Ç—å –µ—ë?\n\nüéØ –í—Å–ø–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –º—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –∏–∑—É—á–∏–ª–∏ –ø—Ä–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏!'
    },
    {
      type: 'theory_practice',
      title: 'üéØ –ü—Ä–∞–∫—Ç–∏–∫–∞: –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
      content: 'üíª –¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ!\n\nüéØ –ó–∞–¥–∞—á–∞: –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è!"\n\nüí≠ –≠—Ç–æ –ø—Ä–æ—Å—Ç–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –ø–æ–º–æ–∂–µ—Ç –∑–∞–∫—Ä–µ–ø–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ print().\n\nüé™ –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ, —á—Ç–æ –≤—ã —Å–æ–∑–¥–∞–µ—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É-–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π –≤–∞—à–µ–≥–æ —Å–∞–π—Ç–∞!',
      code: 'print("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è!")',
      explanation: 'üîç –§—É–Ω–∫—Ü–∏—è print() –≤—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç –Ω–∞ —ç–∫—Ä–∞–Ω. –¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –∫–∞–≤—ã—á–∫–∞—Ö.\n\nüìù –≠—Ç–æ –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –¥–æ—Å–∫–µ ‚Äî –≤—ã –±–µ—Ä–µ—Ç–µ –º–µ–ª (print) –∏ –ø–∏—à–µ—Ç–µ —Å–ª–æ–≤–∞ (—Ç–µ–∫—Å—Ç –≤ –∫–∞–≤—ã—á–∫–∞—Ö).\n\nüé® –¢–µ–ø–µ—Ä—å –≤—ã —Ö—É–¥–æ–∂–Ω–∏–∫, –∞ —ç–∫—Ä–∞–Ω - –≤–∞—à —Ö–æ–ª—Å—Ç!',
      expectedOutput: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è!',
      hint: 'üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é print() –∏ –ø–æ–º–µ—Å—Ç–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤ –∫–∞–≤—ã—á–∫–∏. –ü–æ–º–Ω–∏—Ç–µ: print() ‚Äî —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞ Python –¥–ª—è –≤—ã–≤–æ–¥–∞ –Ω–∞ —ç–∫—Ä–∞–Ω.\n\nüìù –≠—Ç–æ –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å –ø–∏—Å—å–º–æ ‚Äî —É –≤–∞—Å –µ—Å—Ç—å –∫–æ–Ω–≤–µ—Ä—Ç (print) –∏ –≤—ã –∫–ª–∞–¥–µ—Ç–µ –≤ –Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ (—Ç–µ–∫—Å—Ç –≤ –∫–∞–≤—ã—á–∫–∞—Ö).\n\nüéØ –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ —Å–∫–æ–±–∫–∏ –∏ –∫–∞–≤—ã—á–∫–∏!'
    },
    {
      type: 'theory_practice',
      title: 'üéØ –ü—Ä–∞–∫—Ç–∏–∫–∞: –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è',
      content: 'üíª –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏!\n\nüéØ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç —Ç—Ä–∏ —Å—Ç—Ä–æ–∫–∏:\n1. "–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!"\n2. "–Ø –∏–∑—É—á–∞—é Python"\n3. "–≠—Ç–æ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ!"\n\nüí≠ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç—Ä–∏ print() –ø–æ–¥—Ä—è–¥.\n\nüé™ –≠—Ç–æ –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å —Ç—Ä–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –¥–æ—Å–∫–µ!',
      code: 'print("–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!")\nprint("–Ø –∏–∑—É—á–∞—é Python")\nprint("–≠—Ç–æ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ!")',
      explanation: 'üîç –ö–∞–∂–¥—ã–π print() –≤—ã–≤–æ–¥–∏—Ç –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É. Python –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ print().\n\nüìù –≠—Ç–æ –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å —Ç—Ä–∏ —Å—Ç—Ä–æ—á–∫–∏ –≤ —Ç–µ—Ç—Ä–∞–¥–∏ ‚Äî –∫–∞–∂–¥–∞—è –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ.\n\nüé® –ö–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ!',
      expectedOutput: '–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!\n–Ø –∏–∑—É—á–∞—é Python\n–≠—Ç–æ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ!',
      hint: 'üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç—Ä–∏ print() –æ–¥–∏–Ω –∑–∞ –¥—Ä—É–≥–∏–º. –ö–∞–∂–¥—ã–π print() –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ.\n\nüìù –§–æ—Ä–º–∞—Ç:\nprint("–ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞")\nprint("–≤—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞")\nprint("—Ç—Ä–µ—Ç—å—è —Å—Ç—Ä–æ–∫–∞")\n\nüéØ –ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º print()!'
    },
    {
      type: 'theory_practice',
      title: 'üéØ –ü—Ä–∞–∫—Ç–∏–∫–∞: –ü—Ä–æ–≥—Ä–∞–º–º–∞ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏',
      content: 'üíª –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏!\n\nüéØ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç "–ú–æ—è –ø–µ—Ä–≤–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∞ Python"\n\nüí≠ –î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, –æ–±—ä—è—Å–Ω—è—é—â–∏–π, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∞.\n\nüé® –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø–æ–º–æ–≥–∞—é—Ç –ø–æ–Ω—è—Ç—å –∫–æ–¥ –∏ —Å–µ–±–µ, –∏ –¥—Ä—É–≥–∏–º!',
      code: '# –≠—Ç–æ –º–æ—è –ø–µ—Ä–≤–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∞ Python\nprint("–ú–æ—è –ø–µ—Ä–≤–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∞ Python")',
      explanation: 'üîç –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å —Å–∏–º–≤–æ–ª–∞ # –∏ –æ–±—ä—è—Å–Ω—è–µ—Ç –∫–æ–¥. –ö–æ–º–ø—å—é—Ç–µ—Ä –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏.\n\nüìù –≠—Ç–æ –∫–∞–∫ –∑–∞–º–µ—Ç–∫–∞ –Ω–∞ –ø–æ–ª—è—Ö ‚Äî –≤—ã —á–∏—Ç–∞–µ—Ç–µ –∫–Ω–∏–≥—É (–∫–æ–¥), –∞ –∑–∞–º–µ—Ç–∫–∏ (–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏) –ø–æ–º–æ–≥–∞—é—Ç –ø–æ–Ω—è—Ç—å.\n\nüí≠ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ ‚Äî —ç—Ç–æ –≤–∞—à–∏ –ª–∏—á–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏ –≤ –∫–æ–¥–µ!',
      expectedOutput: '–ú–æ—è –ø–µ—Ä–≤–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∞ Python',
      hint: 'üí° –ù–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è (—Å–∏–º–≤–æ–ª #), –∑–∞—Ç–µ–º –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ –¥–æ–±–∞–≤—å—Ç–µ print() —Å —Ç–µ–∫—Å—Ç–æ–º.\n\nüìù –°—Ç—Ä—É–∫—Ç—É—Ä–∞:\n# –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π\nprint("—Ç–µ–∫—Å—Ç")\n\nüéØ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–æ–ª–∂–µ–Ω –æ–±—ä—è—Å–Ω—è—Ç—å, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∞!'
    },
    {
      type: 'theory_practice',
      title: 'üéØ –ü—Ä–∞–∫—Ç–∏–∫–∞: –°–ª–æ–∂–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞',
      content: 'üíª –°–æ–∑–¥–∞–π—Ç–µ –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É!\n\nüéØ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç:\n1. "=== –ú–û–Ø –ü–†–û–ì–†–ê–ú–ú–ê ==="\n2. "–ü—Ä–∏–≤–µ—Ç, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!"\n3. "–°–µ–≥–æ–¥–Ω—è —è –∏–∑—É—á–∞—é Python"\n4. "–≠—Ç–æ –æ—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ!"\n5. "=================="\n\nüí≠ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—è—Ç—å print() –∏ –¥–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ –Ω–∞—á–∞–ª–µ.\n\nüé™ –≠—Ç–æ –∫–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∫—Ä–∞—Å–∏–≤—É—é —Ä–∞–º–∫—É —Å —Ç–µ–∫—Å—Ç–æ–º!',
      code: '# –ü—Ä–æ–≥—Ä–∞–º–º–∞-–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å —Ä–∞–º–∫–æ–π\nprint("=== –ú–û–Ø –ü–†–û–ì–†–ê–ú–ú–ê ===")\nprint("–ü—Ä–∏–≤–µ—Ç, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!")\nprint("–°–µ–≥–æ–¥–Ω—è —è –∏–∑—É—á–∞—é Python")\nprint("–≠—Ç–æ –æ—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ!")\nprint("==================")',
      explanation: 'üîç –°–∏–º–≤–æ–ª—ã === —Å–æ–∑–¥–∞—é—Ç –≤–∏–∑—É–∞–ª—å–Ω—É—é —Ä–∞–º–∫—É. –≠—Ç–æ –¥–µ–ª–∞–µ—Ç –≤—ã–≤–æ–¥ –±–æ–ª–µ–µ –∫—Ä–∞—Å–∏–≤—ã–º –∏ —á–∏—Ç–∞–µ–º—ã–º.\n\nüìù –≠—Ç–æ –∫–∞–∫ –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å —Ä–∞–º–∫—É –≤–æ–∫—Ä—É–≥ –∫–∞—Ä—Ç–∏–Ω—ã ‚Äî –æ–Ω–∞ –≤—ã–¥–µ–ª—è–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ.\n\nüé® –ö—Ä–∞—Å–∏–≤—ã–π –∫–æ–¥ ‚Äî —ç—Ç–æ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ª–µ–≥–∫–æ —á–∏—Ç–∞—Ç—å –∏ –ø–æ–Ω–∏–º–∞—Ç—å!',
      expectedOutput: '=== –ú–û–Ø –ü–†–û–ì–†–ê–ú–ú–ê ===\n–ü—Ä–∏–≤–µ—Ç, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!\n–°–µ–≥–æ–¥–Ω—è —è –∏–∑—É—á–∞—é Python\n–≠—Ç–æ –æ—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ!\n==================',
      hint: 'üí° –ù–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è, –∑–∞—Ç–µ–º –¥–æ–±–∞–≤—å—Ç–µ –ø—è—Ç—å print() —Å —Ä–∞–∑–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º.\n\nüìù –°—Ç—Ä—É–∫—Ç—É—Ä–∞:\n# –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π\nprint("=== –ú–û–Ø –ü–†–û–ì–†–ê–ú–ú–ê ===")\nprint("–ü—Ä–∏–≤–µ—Ç, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!")\nprint("–°–µ–≥–æ–¥–Ω—è —è –∏–∑—É—á–∞—é Python")\nprint("–≠—Ç–æ –æ—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ!")\nprint("==================")\n\nüéØ –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ –∫–∞–≤—ã—á–∫–∏ –∏ —Å–∏–º–≤–æ–ª—ã ===!'
    }
  ], []);

  // –ú–µ–º–æ–∏–∑–∏—Ä—É–µ–º —Ç–µ–∫—É—â–∏–π —à–∞–≥
  const currentStepData = useMemo(() => steps[currentStep], [steps, currentStep]);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Ä–æ–∫–∞
  const handleLessonCompletion = useCallback(async () => {
    if (isLessonCompleted) return;
    
    try {
      // –ó–∞–≤–µ—Ä—à–∞–µ–º —É—Ä–æ–∫ –ª–æ–∫–∞–ª—å–Ω–æ (—ç—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä)
      const success = await completeLesson();
      if (success) {
        setLessonCompleted(true);
        setShowCongratulations(true);
        setIsLessonPassed(true);
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ localStorage
        saveLessonProgress(1);
        console.log('–£—Ä–æ–∫ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!');
        
        // –ó–ê–ö–û–ú–ú–ï–ù–¢–ò–†–û–í–ê–ù–û: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
        /*
        if (user?.userId) {
          try {
            await fetch(`http://localhost:5000/api/user/${user.userId}/activity`, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({ currentLesson: 1 }),
            });
            console.log('–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
          } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:', error);
          }
        }
        */
        console.log('–î–µ–º–æ —Ä–µ–∂–∏–º: –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è');
        
        // –ó–ê–ö–û–ú–ú–ï–ù–¢–ò–†–û–í–ê–ù–û: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ (—Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
        // await refreshUserProgress();
        console.log('–î–µ–º–æ —Ä–µ–∂–∏–º: –ø—Ä–æ–≥—Ä–µ—Å—Å –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ');
        
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫—É—Ä—Å–æ–≤ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
          navigate('/python-course');
        }, 3000);
      } else {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Ä–æ–∫–∞');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —É—Ä–æ–∫–∞:', error);
    }
  }, [completeLesson, isLessonCompleted, navigate, refreshUserProgress, user?.userId]);

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —à–∞–≥–∞
  useEffect(() => {
    const stepAnswer = getStepAnswer(currentStep);
    if (stepAnswer && stepAnswer.answer) {
      setUserAnswer(stepAnswer.answer);
      // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –∑–∞–¥–∞–Ω–∏–π
      setIsCorrect(stepAnswer.isCorrect);
    } else {
      setUserAnswer('');
      setIsCorrect(null);
    }
  }, [currentStep, getStepAnswer, steps]);

  // –û—á–∏—Å—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —É—Ä–æ–∫–∞ (–µ—Å–ª–∏ —É—Ä–æ–∫ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω)
  useEffect(() => {
    if (!isLessonCompleted) {
      clearLessonProgress();
      console.log('–û—á–∏—â–µ–Ω—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è');
    }
  }, [isLessonCompleted, clearLessonProgress]);

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    if (lessonProgress.progress === 0) {
      updateCurrentStep(currentStep, steps.length);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–æ–π–¥–µ–Ω –ª–∏ —É—Ä–æ–∫
    const lessonPassed = checkLessonProgress(1);
    setIsLessonPassed(lessonPassed);
    
    console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É—Ä–æ–∫–∞:', { lessonPassed, currentStep, lessonProgress });
    
    // –ó–ê–ö–û–ú–ú–ï–ù–¢–ò–†–û–í–ê–ù–û: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —É—Ä–æ–∫–∞
    /*
    if (user?.userId) {
      fetch(`http://localhost:5000/api/user/${user.userId}/activity`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ currentLesson: 1 }),
      }).catch(error => {
        console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ:', error);
      });
    }
    */
    console.log('–î–µ–º–æ —Ä–µ–∂–∏–º: –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ');
  }, [currentStep, steps.length, lessonProgress.progress, updateCurrentStep, user?.userId]);

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Ä–æ–∫–∞ –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —à–∞–≥–∞
  useEffect(() => {
    // –£–±–∏—Ä–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —É—Ä–æ–∫–∞
    // –¢–µ–ø–µ—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω —Å–∞–º –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    console.log('useEffect –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Ä–æ–∫–∞:', {
      currentStep,
      isCorrect,
      isLessonCompleted,
      isLastStep: currentStep === steps.length - 1
    });
  }, [currentStep, steps, isCorrect, isLessonCompleted, handleLessonCompletion]);

  const handleNext = useCallback(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –ª–∏ —Ç–µ–∫—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ
    const currentStepData = steps[currentStep];
    let canProceed = true;
    
    if (currentStepData.type === 'practice') {
      // –î–ª—è –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞–Ω–∏–π –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
      if (isCorrect !== true) {
        canProceed = false;
      }
    } else if (currentStepData.type === 'quiz') {
      // –î–ª—è —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
      if (isCorrect !== true) {
        canProceed = false;
      }
    } else if (currentStepData.type === 'theory_practice') {
      // –î–ª—è —Ç–µ–æ—Ä–∏–∏ —Å –ø—Ä–∞–∫—Ç–∏–∫–æ–π –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
      if (isCorrect !== true) {
        canProceed = false;
      }
    }
    
    // –ù–µ–ª—å–∑—è –ø–µ—Ä–µ–π—Ç–∏ –¥–∞–ª—å—à–µ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–º —à–∞–≥–µ
    if (currentStep >= steps.length - 1) {
      canProceed = false;
    }
    
    if (canProceed && currentStep < steps.length - 1) {
      updateCurrentStep(currentStep + 1, steps.length);
      setShowHint(false);
      
      // –ó–ê–ö–û–ú–ú–ï–ù–¢–ò–†–û–í–ê–ù–û: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
      /*
      if (user?.userId) {
        fetch(`http://localhost:5000/api/user/${user.userId}/activity`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ currentLesson: 1 }),
        }).catch(error => {
          console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:', error);
        });
      }
      */
      console.log('–î–µ–º–æ —Ä–µ–∂–∏–º: –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ');
    } else if (!canProceed) {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
      if (currentStep >= steps.length - 1) {
        alert('üéØ –≠—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥ —É—Ä–æ–∫–∞. –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å –≤—ã—à–µ!');
      } else {
        alert('‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Ç–µ–∫—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ!');
      }
    }
  }, [currentStep, steps, isCorrect, updateCurrentStep, user?.userId]);

  const handlePrevious = useCallback(() => {
    if (currentStep > 0) {
      updateCurrentStep(currentStep - 1, steps.length);
      setShowHint(false);
    }
  }, [currentStep, updateCurrentStep, steps.length]);

  // –£–ª—É—á—à–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞ —Å –±–æ–ª–µ–µ –≥–∏–±–∫–∏–º —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ–º
  const normalizeAnswer = useCallback((answer) => {
    const normalized = answer
      .trim()
      // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –ø—Ä–æ–±–µ–ª—ã –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö - —É–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –ø–æ—Å–ª–µ #
      .replace(/#\s+/g, '# ') // –û–¥–∏–Ω –ø—Ä–æ–±–µ–ª –ø–æ—Å–ª–µ #
      .replace(/\s+#/g, ' #') // –û–¥–∏–Ω –ø—Ä–æ–±–µ–ª –ø–µ—Ä–µ–¥ #
      // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –ø—Ä–æ–±–µ–ª—ã –≤ –∫–æ–¥–µ
      .replace(/\s+/g, ' ') // –ó–∞–º–µ–Ω—è–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã –Ω–∞ –æ–¥–∏–Ω
      .replace(/["""]/g, '"') // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∫–∞–≤—ã—á–∫–∏
      .replace(/[''']/g, "'") // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –æ–¥–∏–Ω–∞—Ä–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏
      .toLowerCase();
    
    console.log('–ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è:', { original: answer, normalized });
    return normalized;
  }, []);

  const handleAnswerSubmit = useCallback(() => {
    console.log('handleAnswerSubmit –≤—ã–∑–≤–∞–Ω–∞!', {
      currentStep,
      userAnswer,
      stepType: steps[currentStep]?.type
    });
    
    const currentStepData = steps[currentStep];
    let isAnswerCorrect = false;
    
    console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç:', {
      userAnswer,
      correctAnswer: currentStepData.answer,
      type: currentStepData.type
    });
    
    if (currentStepData.type === 'practice') {
      const normalizedUserAnswer = normalizeAnswer(userAnswer);
      const normalizedCorrectAnswer = normalizeAnswer(currentStepData.answer);
      
      console.log('–ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã:', {
        user: normalizedUserAnswer,
        correct: normalizedCorrectAnswer
      });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
      const isExactMatch = normalizedUserAnswer === normalizedCorrectAnswer;
      
      console.log('–¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ:', isExactMatch);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∑–∞–¥–∞–Ω–∏–π
      const hasInput = normalizedUserAnswer.includes('input');
      const hasPrint = normalizedUserAnswer.includes('print');
      const hasInt = normalizedUserAnswer.includes('int');
      const hasFString = normalizedUserAnswer.includes('f"') || normalizedUserAnswer.includes("f'");
      const hasQuotes = normalizedUserAnswer.includes('"') || normalizedUserAnswer.includes("'");
      const hasComment = normalizedUserAnswer.includes('#');
      
      // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –∑–∞–¥–∞–Ω–∏–π —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏
      if (hasComment) {
        // –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —Å—Ç—Ä–æ–∫–∏ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é
        const userLines = normalizedUserAnswer.split('\n').filter(line => line.trim());
        const correctLines = normalizedCorrectAnswer.split('\n').filter(line => line.trim());
        
        if (userLines.length === correctLines.length) {
          let allLinesMatch = true;
          for (let i = 0; i < userLines.length; i++) {
            const userLine = userLines[i].trim();
            const correctLine = correctLines[i].trim();
            
            // –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç —Ç–æ—á–Ω–æ, –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
            if (userLine !== correctLine) {
              // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ —Å—Ç—Ä–æ–∫–µ –µ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã (print, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏ —Ç.–¥.)
              const hasRequiredElements = 
                (userLine.includes('print') && correctLine.includes('print')) ||
                (userLine.startsWith('#') && correctLine.startsWith('#'));
              
              if (!hasRequiredElements) {
                allLinesMatch = false;
                break;
              }
            }
          }
          
          if (allLinesMatch) {
            setIsCorrect(true);
            isAnswerCorrect = true;
            console.log('‚úÖ –û—Ç–≤–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π (—Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏)!');
          }
        }
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –±—ã–ª–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏
      if (!isAnswerCorrect) {
        if (isExactMatch) {
          setIsCorrect(true);
          isAnswerCorrect = true;
          console.log('‚úÖ –û—Ç–≤–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π!');
        } else if (
          (hasInput && hasPrint && hasQuotes) || // –î–ª—è –∑–∞–¥–∞–Ω–∏–π —Å input
          (hasInt && hasInput && hasPrint) || // –î–ª—è –∑–∞–¥–∞–Ω–∏–π —Å int(input)
          (hasFString && hasInput && hasInt) // –î–ª—è –∑–∞–¥–∞–Ω–∏–π —Å f-—Å—Ç—Ä–æ–∫–∞–º–∏
        ) {
          setIsCorrect('almost');
          isAnswerCorrect = false; // –ü–æ—á—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –Ω–æ –Ω–µ —Å–æ–≤—Å–µ–º
          console.log('‚ö†Ô∏è –û—Ç–≤–µ—Ç –ø–æ—á—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π');
        } else {
          setIsCorrect(false);
          isAnswerCorrect = false;
          console.log('‚ùå –û—Ç–≤–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π');
        }
      }
    } else if (currentStepData.type === 'quiz') {
      console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ—Å—Ç:', {
        userAnswer,
        correctAnswer: currentStepData.correct,
        userAnswerType: typeof userAnswer,
        correctAnswerType: typeof currentStepData.correct
      });
      
      // –ü—Ä–∏–≤–æ–¥–∏–º –æ–±–∞ –∑–Ω–∞—á–µ–Ω–∏—è –∫ —Å—Ç—Ä–æ–∫–∞–º –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
      isAnswerCorrect = userAnswer.toString() === currentStepData.correct.toString();
      setIsCorrect(isAnswerCorrect);
      console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞:', { 
        isAnswerCorrect, 
        isCorrect: isAnswerCorrect,
        userAnswer: userAnswer.toString(),
        correctAnswer: currentStepData.correct.toString(),
        currentStep,
        isLastStep: currentStep === steps.length - 1
      });
    } else if (currentStepData.type === 'theory_practice') {
      // –î–ª—è —Ç–µ–æ—Ä–∏–∏ —Å –ø—Ä–∞–∫—Ç–∏–∫–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–º–µ—á–∞–µ–º –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ
      // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∞–º –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Å–≤–æ–µ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ
      isAnswerCorrect = true;
      setIsCorrect(true);
      console.log('‚úÖ –¢–µ–æ—Ä–∏—è —Å –ø—Ä–∞–∫—Ç–∏–∫–æ–π –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!');
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
    saveStepAnswer(currentStep, userAnswer, isAnswerCorrect);
    
    // –£–±–∏—Ä–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —É—Ä–æ–∫–∞
    // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω —Å–∞–º –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
  }, [currentStep, steps, userAnswer, normalizeAnswer, saveStepAnswer]);

  // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
  const handleTextChange = useCallback((e) => {
    setUserAnswer(e.target.value);
  }, []);

  // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∫–∞–∑–∞ –ø–æ–¥—Å–∫–∞–∑–∫–∏
  const toggleHint = useCallback(() => {
    setShowHint(prev => !prev);
  }, []);

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
  if (isLoading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-green-50 via-white to-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-green-500 mx-auto mb-4"></div>
          <p className="text-gray-600">–ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...</p>
        </div>
      </div>
    );
  }

  // –ï—Å–ª–∏ —É—Ä–æ–∫ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è
  if (isLessonCompleted && !showCongratulations) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-green-50 via-white to-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="text-6xl mb-4">üéâ</div>
          <h1 className="text-3xl font-bold text-green-600 mb-4">–£—Ä–æ–∫ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω!</h1>
          <p className="text-gray-600 mb-6">–í—ã —É–∂–µ –ø—Ä–æ—à–ª–∏ —ç—Ç–æ—Ç —É—Ä–æ–∫. –ü—Ä–æ–≥—Ä–µ—Å—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.</p>
          <div className="space-x-4">
            <button
              onClick={() => {
                clearLessonProgress();
                setLessonCompleted(false);
                setShowCongratulations(false);
                loadProgressFromServer();
              }}
              className="px-6 py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors"
            >
              –ü—Ä–æ–π—Ç–∏ –∑–∞–Ω–æ–≤–æ
            </button>
            <Link
              to="/python-course"
              className="px-6 py-3 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors"
            >
              –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫—É—Ä—Å—É
            </Link>
          </div>
        </div>
      </div>
    );
  }

  return (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      className="max-w-4xl mx-auto p-6 mb-5"
    >
      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ–º */}
      {showCongratulations && (
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50"
        >
          <motion.div
            initial={{ scale: 0.5, opacity: 0 }}
            animate={{ scale: 1, opacity: 1 }}
            className="bg-white rounded-2xl p-8 max-w-md mx-4 text-center shadow-2xl"
          >
            <div className="text-6xl mb-4 animate-bounce">üéâ</div>
            <h2 className="text-2xl font-bold text-gray-800 mb-4">
              –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!
            </h2>
            <p className="text-gray-600 mb-6">
              –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª–∏ —É—Ä–æ–∫ "–í–≤–µ–¥–µ–Ω–∏–µ –≤ Python"!
            </p>
            <div className="bg-green-50 rounded-lg p-4 mb-6">
              <p className="text-green-800 font-medium mb-2">üéØ –í—ã –∏–∑—É—á–∏–ª–∏:</p>
              <ul className="text-green-700 text-sm space-y-1">
                <li>‚Ä¢ –û—Å–Ω–æ–≤—ã —è–∑—ã–∫–∞ Python</li>
                <li>‚Ä¢ –§—É–Ω–∫—Ü–∏—é print() –¥–ª—è –≤—ã–≤–æ–¥–∞</li>
                <li>‚Ä¢ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ –∫–æ–¥–µ</li>
              </ul>
            </div>
            <p className="text-gray-500 text-sm">
              –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫—É—Ä—Å–æ–≤ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã...
            </p>
            <div className="mt-4">
              <div className="w-full bg-gray-200 rounded-full h-2">
                <motion.div
                  className="bg-green-500 h-2 rounded-full"
                  initial={{ width: 0 }}
                  animate={{ width: "100%" }}
                  transition={{ duration: 3 }}
                />
              </div>
            </div>
          </motion.div>
        </motion.div>
      )}

      {/* –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä */}
      <div className="mb-8">
        <div className="flex justify-between items-center mb-2">
          <div className="flex items-center space-x-2">
            <span className="text-sm font-medium text-gray-600">
              üìö –£—Ä–æ–∫ 1: –í–≤–µ–¥–µ–Ω–∏–µ –≤ Python
            </span>
            {isLessonPassed && (
              <span className="text-xs bg-green-100 text-green-800 px-2 py-1 rounded-full font-medium">
                ‚úÖ –ü—Ä–æ–π–¥–µ–Ω
              </span>
            )}
          </div>
          <div className="flex items-center space-x-4">
            <span className="text-sm font-medium text-gray-600">
              üìç {currentStep + 1} –∏–∑ {steps.length}
            </span>
            <span className="text-sm font-medium text-green-600">
              {Math.round(((currentStep + 1) / steps.length) * 100)}%
            </span>
          </div>
        </div>
        <div className="w-full bg-gray-200 rounded-full h-3">
          <motion.div
            className="bg-gradient-to-r from-green-500 to-blue-500 h-3 rounded-full"
            initial={{ width: 0 }}
            animate={{ width: `${((currentStep + 1) / steps.length) * 100}%` }}
            transition={{ duration: 0.5 }}
          />
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="bg-white rounded-xl shadow-xl p-8 mb-8 border border-gray-100">
        <motion.h1
          key={currentStep}
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          className="text-3xl font-bold text-gray-800 mb-6 text-center"
        >
          {currentStepData.title}
        </motion.h1>

        <motion.div
          key={`content-${currentStep}`}
          initial={{ opacity: 0, x: 20 }}
          animate={{ opacity: 1, x: 0 }}
          className="space-y-6"
        >
          {/* –¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
          {currentStepData.content && (
            <div className="text-gray-700 leading-relaxed text-lg">
              {currentStepData.content.split('\n').map((line, index) => (
                <p key={index} className="mb-3">
                  {line}
                </p>
              ))}
            </div>
          )}

          {/* –ö–æ–¥ */}
          {currentStepData.code && (
            <div className="bg-gradient-to-r from-gray-900 to-gray-800 rounded-xl p-6 shadow-lg">
              <div className="flex items-center justify-between mb-4">
                <span className="text-green-400 font-medium flex items-center">
                  üêç Python
                </span>
                <button
                  onClick={() => navigator.clipboard.writeText(currentStepData.code)}
                  className="text-gray-400 hover:text-white transition-colors flex items-center space-x-2"
                >
                  <span>üìã</span>
                  <span>–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å</span>
                </button>
              </div>
              <pre className="text-green-400 overflow-x-auto text-lg">
                <code>{currentStepData.code}</code>
              </pre>
            </div>
          )}

          {/* –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –∫–æ–¥–∞ */}
          {currentStepData.explanation && (
            <div className="bg-gradient-to-r from-blue-50 to-indigo-50 border-l-4 border-blue-400 p-6 rounded-xl">
              <div className="flex items-center mb-2">
                <span className="text-2xl mr-2">üí°</span>
                <span className="text-blue-800 font-semibold">–û–±—ä—è—Å–Ω–µ–Ω–∏–µ</span>
              </div>
              <div className="text-blue-800 text-lg space-y-3">
                {currentStepData.explanation.split('\n').map((line, index) => (
                  <p key={index} className="leading-relaxed">
                    {line}
                  </p>
                ))}
              </div>
            </div>
          )}

          {/* –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ */}
          {currentStepData.type === 'practice' && (
            <div className="bg-gradient-to-r from-yellow-50 to-orange-50 border border-yellow-200 rounded-xl p-6 shadow-lg">
              <h3 className="text-xl font-semibold text-yellow-800 mb-4 flex items-center">
                <span className="text-2xl mr-2">üéØ</span>
                –ó–∞–¥–∞–Ω–∏–µ
              </h3>
              <p className="text-yellow-700 mb-4 text-lg">{currentStepData.task}</p>
              
              <div className="space-y-4">
                <textarea
                  value={userAnswer}
                  onChange={handleTextChange}
                  placeholder="‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫–æ–¥ –∑–¥–µ—Å—å..."
                  className="w-full h-32 p-4 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent text-lg font-mono resize-none"
                  spellCheck="false"
                />
                
                <div className="flex space-x-4">
                  <button
                    onClick={handleAnswerSubmit}
                    className="px-6 py-3 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-lg hover:from-green-600 hover:to-green-700 transition-all duration-200 flex items-center space-x-2 shadow-lg"
                  >
                    <span>‚úÖ</span>
                    <span>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</span>
                  </button>
                  <button
                    onClick={toggleHint}
                    className="px-6 py-3 bg-gradient-to-r from-blue-500 to-blue-600 text-white rounded-lg hover:from-blue-600 hover:to-blue-700 transition-all duration-200 flex items-center space-x-2 shadow-lg"
                  >
                    <span>üí°</span>
                    <span>–ü–æ–¥—Å–∫–∞–∑–∫–∞</span>
                  </button>
                </div>

                {showHint && (
                  <div className="bg-gradient-to-r from-blue-100 to-indigo-100 border border-blue-300 rounded-lg p-4">
                    <div className="flex items-center mb-2">
                      <span className="text-xl mr-2">üí°</span>
                      <span className="text-blue-800 font-semibold">–ü–æ–¥—Å–∫–∞–∑–∫–∞</span>
                    </div>
                    <div className="text-blue-800 text-lg space-y-3">
                      {currentStepData.hint.split('\n').map((line, index) => (
                        <p key={index} className="leading-relaxed">
                          {line}
                        </p>
                      ))}
                    </div>
                  </div>
                )}

                {isCorrect !== null && (
                  <div className={`p-4 rounded-lg ${
                    isCorrect === true 
                      ? 'bg-gradient-to-r from-green-100 to-emerald-100 border border-green-300' 
                      : isCorrect === 'almost'
                      ? 'bg-gradient-to-r from-yellow-100 to-orange-100 border border-yellow-300'
                      : 'bg-gradient-to-r from-red-100 to-pink-100 border border-red-300'
                  }`}>
                    <p className={
                      isCorrect === true 
                        ? 'text-green-800 text-lg font-semibold' 
                        : isCorrect === 'almost'
                        ? 'text-yellow-800 text-lg font-semibold'
                        : 'text-red-800 text-lg font-semibold'
                    }>
                      {isCorrect === true 
                        ? 'üéâ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É.' 
                        : isCorrect === 'almost'
                        ? '‚ö†Ô∏è –û—Ç–≤–µ—Ç –ø–æ—á—Ç–∏ –≤–µ—Ä–Ω—ã–π, –Ω–æ –ø—Ä–æ–≤–µ—Ä—å —Å–∫–æ–±–∫–∏ –∏ –∫–∞–≤—ã—á–∫–∏. –£–±–µ–¥–∏—Å—å, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ –∏ –Ω–µ—Ç –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤.'
                        : '‚ùå –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å.'}
                    </p>
                  </div>
                )}

                {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è */}
                {currentStepData.type === 'practice' && isCorrect === null && (
                  <div className="bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-lg p-4">
                    <div className="flex items-center">
                      <span className="text-xl mr-2">‚ÑπÔ∏è</span>
                      <p className="text-blue-800 text-lg">
                        –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
                      </p>
                    </div>
                  </div>
                )}
              </div>
            </div>
          )}

          {/* –¢–µ—Å—Ç */}
          {currentStepData.type === 'quiz' && (
            <div className="bg-gradient-to-r from-purple-50 to-pink-50 border border-purple-200 rounded-xl p-6 shadow-lg">
              <h3 className="text-xl font-semibold text-purple-800 mb-4 flex items-center">
                <span className="text-2xl mr-2">üß†</span>
                –í–æ–ø—Ä–æ—Å
              </h3>
              <p className="text-purple-700 mb-6 text-lg">{currentStepData.question}</p>
              
              <div className="space-y-3">
                {currentStepData.options.map((option, index) => (
                  <label key={index} className="flex items-center space-x-3 cursor-pointer p-3 rounded-lg hover:bg-purple-100 transition-colors">
                    <input
                      type="radio"
                      name="quiz"
                      value={index}
                      checked={userAnswer === index.toString()}
                      onChange={(e) => {
                        setUserAnswer(e.target.value);
                      }}
                      className="text-purple-600 focus:ring-purple-500"
                    />
                    <span className="text-purple-700 text-lg">{option}</span>
                  </label>
                ))}
              </div>

              <div className="flex space-x-4 mt-4">
                <button
                  onClick={handleAnswerSubmit}
                  className="px-6 py-3 bg-gradient-to-r from-purple-500 to-purple-600 text-white rounded-lg hover:from-purple-600 hover:to-purple-700 transition-all duration-200 flex items-center space-x-2 shadow-lg"
                >
                  <span>‚úÖ</span>
                  <span>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç</span>
                </button>
                <button
                  onClick={toggleHint}
                  className="px-6 py-3 bg-gradient-to-r from-blue-500 to-blue-600 text-white rounded-lg hover:from-blue-600 hover:to-blue-700 transition-all duration-200 flex items-center space-x-2 shadow-lg"
                >
                  <span>üí°</span>
                  <span>–ü–æ–¥—Å–∫–∞–∑–∫–∞</span>
                </button>
              </div>

              {showHint && currentStepData.hint && (
                <div className="bg-gradient-to-r from-blue-100 to-indigo-100 border border-blue-300 rounded-lg p-4 mt-4">
                  <div className="flex items-center mb-2">
                    <span className="text-xl mr-2">üí°</span>
                    <span className="text-blue-800 font-semibold">–ü–æ–¥—Å–∫–∞–∑–∫–∞</span>
                  </div>
                  <div className="text-blue-800 text-lg space-y-3">
                    {currentStepData.hint.split('\n').map((line, index) => (
                      <p key={index} className="leading-relaxed">
                        {line}
                      </p>
                    ))}
                  </div>
                </div>
              )}

              {isCorrect !== null && (
                <div className={`mt-4 p-4 rounded-lg ${isCorrect ? 'bg-gradient-to-r from-green-100 to-emerald-100 border border-green-300' : 'bg-gradient-to-r from-red-100 to-pink-100 border border-red-300'}`}>
                  <p className={`text-lg font-semibold ${isCorrect ? 'text-green-800' : 'text-red-800'}`}>
                    {isCorrect ? 'üéâ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! –°–∏–º–≤–æ–ª # –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –≤ Python. –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É.' : '‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.'}
                  </p>
                </div>
              )}

              {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å */}
              {currentStepData.type === 'quiz' && isCorrect === null && (
                <div className="bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-lg p-4 mt-4">
                  <div className="flex items-center">
                    <span className="text-xl mr-2">‚ÑπÔ∏è</span>
                    <p className="text-blue-800 text-lg">
                      –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
                    </p>
                  </div>
                </div>
              )}
            </div>
          )}

          {/* –¢–µ–æ—Ä–∏—è —Å –ø—Ä–∞–∫—Ç–∏–∫–æ–π */}
          {currentStepData.type === 'theory_practice' && (
            <div className="bg-gradient-to-r from-emerald-50 to-teal-50 border border-emerald-200 rounded-xl p-6 shadow-lg">
              <h3 className="text-xl font-semibold text-emerald-800 mb-4 flex items-center">
                <span className="text-2xl mr-2">üíª</span>
                –°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞
              </h3>
              
              <div className="space-y-6">
                {/* –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç */}
                <div className="bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-lg p-4">
                  <div className="flex items-center mb-2">
                    <span className="text-xl mr-2">üéØ</span>
                    <span className="text-blue-800 font-semibold">–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:</span>
                  </div>
                  <div className="bg-gray-900 rounded-lg p-4">
                    <pre className="text-green-400 text-lg font-mono">
                      {currentStepData.expectedOutput}
                    </pre>
                  </div>
                </div>

                {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
                <div className="bg-gradient-to-r from-yellow-50 to-orange-50 border border-yellow-200 rounded-lg p-4">
                  <div className="flex items-center mb-2">
                    <span className="text-xl mr-2">üìù</span>
                    <span className="text-yellow-800 font-semibold">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:</span>
                  </div>
                  <ol className="text-yellow-700 text-lg space-y-2">
                    <li>1. –û—Ç–∫—Ä–æ–π—Ç–µ –≤–∞—à —Ä–µ–¥–∞–∫—Ç–æ—Ä –∫–æ–¥–∞ (PyCharm, VS Code, IDLE –∏–ª–∏ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π)</li>
                    <li>2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —Ñ–∞–π–ª —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .py</li>
                    <li>3. –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥ —Å–æ–≥–ª–∞—Å–Ω–æ –∑–∞–¥–∞–Ω–∏—é</li>
                    <li>4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç</li>
                    <li>5. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã–≤–æ–¥ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –æ–∂–∏–¥–∞–µ–º—ã–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º</li>
                    <li>6. –ö–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã, –Ω–∞–∂–º–∏—Ç–µ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"</li>
                  </ol>
                </div>

                {/* –ö–Ω–æ–ø–∫–∏ */}
                <div className="flex space-x-4">
                  <button
                    onClick={() => {
                      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–º–µ—á–∞–µ–º –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ
                      setIsCorrect(true);
                      saveStepAnswer(currentStep, 'theory_practice_completed', true);
                    }}
                    className="px-6 py-3 bg-gradient-to-r from-emerald-500 to-emerald-600 text-white rounded-lg hover:from-emerald-600 hover:to-emerald-700 transition-all duration-200 flex items-center space-x-2 shadow-lg"
                  >
                    <span>‚úÖ</span>
                    <span>–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å</span>
                  </button>
                  <button
                    onClick={toggleHint}
                    className="px-6 py-3 bg-gradient-to-r from-blue-500 to-blue-600 text-white rounded-lg hover:from-blue-600 hover:to-blue-700 transition-all duration-200 flex items-center space-x-2 shadow-lg"
                  >
                    <span>üí°</span>
                    <span>–ü–æ–¥—Å–∫–∞–∑–∫–∞</span>
                  </button>
                </div>

                {showHint && currentStepData.hint && (
                  <div className="bg-gradient-to-r from-blue-100 to-indigo-100 border border-blue-300 rounded-lg p-4">
                    <div className="flex items-center mb-2">
                      <span className="text-xl mr-2">üí°</span>
                      <span className="text-blue-800 font-semibold">–ü–æ–¥—Å–∫–∞–∑–∫–∞</span>
                    </div>
                    <div className="text-blue-800 text-lg space-y-3">
                      {currentStepData.hint.split('\n').map((line, index) => (
                        <p key={index} className="leading-relaxed">
                          {line}
                        </p>
                      ))}
                    </div>
                  </div>
                )}

                {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ */}
                {isCorrect === null && (
                  <div className="bg-gradient-to-r from-emerald-50 to-teal-50 border border-emerald-200 rounded-lg p-4">
                    <div className="flex items-center">
                      <span className="text-xl mr-2">‚ÑπÔ∏è</span>
                      <p className="text-emerald-800 text-lg">
                        –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ –≤ —Å–≤–æ–µ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ –∫–æ–¥–∞, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"
                      </p>
                    </div>
                  </div>
                )}

                {isCorrect === true && (
                  <div className="bg-gradient-to-r from-green-100 to-emerald-100 border border-green-300 rounded-lg p-4">
                    <div className="flex items-center">
                      <span className="text-xl mr-2">üéâ</span>
                      <p className="text-green-800 text-lg font-semibold">
                        –û—Ç–ª–∏—á–Ω–æ! –í—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É.
                      </p>
                    </div>
                  </div>
                )}
              </div>
            </div>
          )}
        </motion.div>
      </div>

      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
      <div className="flex justify-between items-center">
        <button
          onClick={handlePrevious}
          disabled={currentStep === 0}
          className={`px-6 py-3 rounded-lg transition-all duration-200 flex items-center space-x-2 ${
            currentStep === 0
              ? 'bg-gray-300 text-gray-500 cursor-not-allowed'
              : 'bg-gradient-to-r from-gray-600 to-gray-700 text-white hover:from-gray-700 hover:to-gray-800 shadow-lg'
          }`}
        >
          <span>‚Üê</span>
          <span>–ù–∞–∑–∞–¥</span>
        </button>

        <div className="flex space-x-4">
          <Link
            to="/python-course"
            className="px-6 py-3 bg-gradient-to-r from-gray-500 to-gray-600 text-white rounded-lg hover:from-gray-600 hover:to-gray-700 transition-all duration-200 flex items-center space-x-2 shadow-lg"
          >
            <span>üìö</span>
            <span>–ö Python –∫—É—Ä—Å—É</span>
          </Link>
          
          {lessonCompleted ? (
            <div className="px-6 py-3 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-lg flex items-center space-x-2 shadow-lg animate-pulse">
              <span>üéâ</span>
              <span>–£—Ä–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω! –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ...</span>
            </div>
          ) : isLessonPassed ? (
            <button
              onClick={() => {
                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å —É—Ä–æ–∫–∞ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è
                clearLessonProgress();
                setLessonCompleted(false);
                setShowCongratulations(false);
                setIsLessonPassed(false);
                updateCurrentStep(0, steps.length);
                setUserAnswer('');
                setIsCorrect(null);
                setShowHint(false);
                
                // –£–¥–∞–ª—è–µ–º —É—Ä–æ–∫ –∏–∑ localStorage –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Å–±—Ä–æ—Å–∞
                try {
                  const completedLessons = JSON.parse(localStorage.getItem('completedLessons') || '[]');
                  const updatedLessons = completedLessons.filter(id => id !== 1);
                  localStorage.setItem('completedLessons', JSON.stringify(updatedLessons));
                  console.log('–£—Ä–æ–∫ —É–¥–∞–ª–µ–Ω –∏–∑ localStorage –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è');
                } catch (error) {
                  console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —É—Ä–æ–∫–∞ –∏–∑ localStorage:', error);
                }
              }}
              className="px-6 py-3 bg-gradient-to-r from-blue-500 to-blue-600 text-white rounded-lg hover:from-blue-600 hover:to-blue-700 transition-all duration-200 flex items-center space-x-2 shadow-lg"
            >
              <span>üîÑ</span>
              <span>–ü–æ–≤—Ç–æ—Ä–∏—Ç—å —É—Ä–æ–∫</span>
            </button>
          ) : currentStep === steps.length - 1 && isCorrect === true ? (
            <button
              onClick={handleLessonCompletion}
              className="px-6 py-3 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-lg hover:from-green-600 hover:to-green-700 transition-all duration-200 flex items-center space-x-2 shadow-lg"
            >
              <span>üéâ</span>
              <span>–ó–∞–≤–µ—Ä—à–∏—Ç—å —É—Ä–æ–∫</span>
            </button>
          ) : currentStep === steps.length - 1 ? (
            <div className="px-6 py-3 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-lg flex items-center space-x-2 shadow-lg">
              <span>üéØ</span>
              <span>–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å –≤—ã—à–µ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Ä–æ–∫–∞</span>
            </div>
          ) : (
            <button
              onClick={handleNext}
              disabled={(() => {
                const currentStepData = steps[currentStep];
                if (currentStepData.type === 'practice' || currentStepData.type === 'quiz' || currentStepData.type === 'theory_practice') {
                  // –ï—Å–ª–∏ —É—Ä–æ–∫ —É–∂–µ –±—ã–ª –ø—Ä–æ–π–¥–µ–Ω, –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
                  return isCorrect !== true && !isLessonPassed;
                }
                return false;
              })()}
              className={`px-6 py-3 rounded-lg transition-all duration-200 flex items-center space-x-2 ${
                (() => {
                  const currentStepData = steps[currentStep];
                  if (currentStepData.type === 'practice' || currentStepData.type === 'quiz' || currentStepData.type === 'theory_practice') {
                    return (isCorrect !== true && !isLessonPassed)
                      ? 'bg-gray-300 text-gray-500 cursor-not-allowed'
                      : 'bg-gradient-to-r from-green-500 to-green-600 text-white hover:from-green-600 hover:to-green-700 shadow-lg';
                  }
                  return 'bg-gradient-to-r from-green-500 to-green-600 text-white hover:from-green-600 hover:to-green-700 shadow-lg';
                })()
              }`}
            >
              <span>–î–∞–ª–µ–µ</span>
              <span>‚Üí</span>
            </button>
          )}
        </div>
      </div>
    </motion.div>
  );
}

export default Level1Unit1;
